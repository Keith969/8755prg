

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Apr 14 17:32:22 2024

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25  0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4520 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     _RCREG	set	4014
    62  0000                     _TXREG	set	4013
    63  0000                     _PIR1bits	set	3998
    64  0000                     _IPR1bits	set	3999
    65  0000                     _RCONbits	set	4048
    66  0000                     _SPBRG	set	4015
    67  0000                     _SPBRGH	set	4016
    68  0000                     _TXSTAbits	set	4012
    69  0000                     _RCSTAbits	set	4011
    70  0000                     _BAUDCONbits	set	4024
    71  0000                     _TRISCbits	set	3988
    72  0000                     _PIE1bits	set	3997
    73  0000                     _INTCONbits	set	4082
    74  0000                     _TRISD	set	3989
    75  0000                     _TRISC	set	3988
    76  0000                     _TRISB	set	3987
    77  0000                     _PORTAbits	set	3968
    78  0000                     _TRISAbits	set	3986
    79                           
    80                           	psect	smallconst
    81  000600                     __psmallconst:
    82                           	callstack 0
    83  000600  00                 	db	0
    84  000601                     STR_1:
    85  000601  66                 	db	102	;'f'
    86  000602  69                 	db	105	;'i'
    87  000603  6E                 	db	110	;'n'
    88  000604  69                 	db	105	;'i'
    89  000605  73                 	db	115	;'s'
    90  000606  68                 	db	104	;'h'
    91  000607  0A                 	db	10
    92  000608  00                 	db	0
    93  000609  00                 	db	0	; dummy byte at the end
    94  0000                     
    95                           ; #config settings
    96                           
    97                           	psect	cinit
    98  000A64                     __pcinit:
    99                           	callstack 0
   100  000A64                     start_initialization:
   101                           	callstack 0
   102  000A64                     __initialization:
   103                           	callstack 0
   104                           
   105                           ; Clear objects allocated to COMRAM (4 bytes)
   106  000A64  6A30               	clrf	(__pbssCOMRAM+3)& (0+255),c
   107  000A66  6A2F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   108  000A68  6A2E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   109  000A6A  6A2D               	clrf	__pbssCOMRAM& (0+255),c
   110  000A6C                     end_of_initialization:
   111                           	callstack 0
   112  000A6C                     __end_of__initialization:
   113                           	callstack 0
   114  000A6C  9031               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   115  000A6E  9231               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   116  000A70  0E00               	movlw	low (__Lsmallconst shr (0+16))
   117  000A72  6EF8               	movwf	tblptru,c
   118  000A74  0E06               	movlw	high __Lsmallconst
   119  000A76  6EF7               	movwf	tblptrh,c
   120  000A78  0100               	movlb	0
   121  000A7A  EF97  F003         	goto	_main	;jump to C main() function
   122                           
   123                           	psect	bssCOMRAM
   124  00002D                     __pbssCOMRAM:
   125                           	callstack 0
   126  00002D                     _buffer:
   127                           	callstack 0
   128  00002D                     	ds	2
   129  00002F                     _cmd_active:
   130                           	callstack 0
   131  00002F                     	ds	1
   132  000030                     _bufptr:
   133                           	callstack 0
   134  000030                     	ds	1
   135                           
   136                           	psect	cstackCOMRAM
   137  000001                     __pcstackCOMRAM:
   138                           	callstack 0
   139  000001                     uart_getc@c:
   140                           	callstack 0
   141                           
   142                           ; 2 bytes @ 0x0
   143  000001                     	ds	2
   144  000003                     
   145                           ; 1 bytes @ 0x2
   146  000003                     	ds	2
   147  000005                     ??_high_isr:
   148                           
   149                           ; 1 bytes @ 0x4
   150  000005                     	ds	3
   151  000008                     high_isr@c:
   152                           	callstack 0
   153                           
   154                           ; 1 bytes @ 0x7
   155  000008                     	ds	1
   156  000009                     ?___lmul:
   157                           	callstack 0
   158  000009                     uart_puts@s:
   159                           	callstack 0
   160  000009                     ___lmul@multiplier:
   161                           	callstack 0
   162                           
   163                           ; 4 bytes @ 0x8
   164  000009                     	ds	2
   165  00000B                     uart_puts@p:
   166                           	callstack 0
   167                           
   168                           ; 2 bytes @ 0xA
   169  00000B                     	ds	2
   170  00000D                     do_finish@s:
   171                           	callstack 0
   172  00000D                     ___lmul@multiplicand:
   173                           	callstack 0
   174                           
   175                           ; 4 bytes @ 0xC
   176  00000D                     	ds	4
   177  000011                     ___lmul@product:
   178                           	callstack 0
   179                           
   180                           ; 4 bytes @ 0x10
   181  000011                     	ds	4
   182  000015                     ?___lldiv:
   183                           	callstack 0
   184  000015                     ___lldiv@dividend:
   185                           	callstack 0
   186                           
   187                           ; 4 bytes @ 0x14
   188  000015                     	ds	4
   189  000019                     ___lldiv@divisor:
   190                           	callstack 0
   191                           
   192                           ; 4 bytes @ 0x18
   193  000019                     	ds	4
   194  00001D                     ___lldiv@quotient:
   195                           	callstack 0
   196                           
   197                           ; 4 bytes @ 0x1C
   198  00001D                     	ds	4
   199  000021                     ___lldiv@counter:
   200                           	callstack 0
   201                           
   202                           ; 1 bytes @ 0x20
   203  000021                     	ds	1
   204  000022                     uart_init@baud_rate:
   205                           	callstack 0
   206                           
   207                           ; 4 bytes @ 0x21
   208  000022                     	ds	4
   209  000026                     uart_init@n:
   210                           	callstack 0
   211                           
   212                           ; 4 bytes @ 0x25
   213  000026                     	ds	4
   214  00002A                     uart_init@factor:
   215                           	callstack 0
   216                           
   217                           ; 1 bytes @ 0x29
   218  00002A                     	ds	1
   219  00002B                     ??_main:
   220                           
   221                           ; 1 bytes @ 0x2A
   222  00002B                     	ds	2
   223                           
   224 ;;
   225 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   226 ;;
   227 ;; *************** function _main *****************
   228 ;; Defined at:
   229 ;;		line 45 in file "main.c"
   230 ;; Parameters:    Size  Location     Type
   231 ;;		None
   232 ;; Auto vars:     Size  Location     Type
   233 ;;		None
   234 ;; Return value:  Size  Location     Type
   235 ;;                  1    wreg      void 
   236 ;; Registers used:
   237 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   238 ;; Tracked objects:
   239 ;;		On entry : 0/0
   240 ;;		On exit  : 0/0
   241 ;;		Unchanged: 0/0
   242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   243 ;;      Params:         0       0       0       0       0       0       0
   244 ;;      Locals:         0       0       0       0       0       0       0
   245 ;;      Temps:          2       0       0       0       0       0       0
   246 ;;      Totals:         2       0       0       0       0       0       0
   247 ;;Total ram usage:        2 bytes
   248 ;; Hardware stack levels required when called:    4
   249 ;; This function calls:
   250 ;;		_do_finish
   251 ;;		_do_read
   252 ;;		_do_write
   253 ;;		_uart_init
   254 ;; This function is called by:
   255 ;;		Startup code after reset
   256 ;; This function uses a non-reentrant model
   257 ;;
   258                           
   259                           	psect	text0
   260  00072E                     __ptext0:
   261                           	callstack 0
   262  00072E                     _main:
   263                           	callstack 27
   264  00072E                     
   265                           ;main.c: 48:     uart_init(115200);
   266  00072E  0E00               	movlw	0
   267  000730  6E22               	movwf	uart_init@baud_rate^0,c
   268  000732  0EC2               	movlw	194
   269  000734  6E23               	movwf	(uart_init@baud_rate+1)^0,c
   270  000736  0E01               	movlw	1
   271  000738  6E24               	movwf	(uart_init@baud_rate+2)^0,c
   272  00073A  0E00               	movlw	0
   273  00073C  6E25               	movwf	(uart_init@baud_rate+3)^0,c
   274  00073E  EC05  F003         	call	_uart_init	;wreg free
   275  000742                     
   276                           ;main.c: 51:     TRISAbits.RA0 = 0;
   277  000742  9092               	bcf	146,0,c	;volatile
   278  000744                     
   279                           ;main.c: 52:     TRISAbits.RA1 = 0;
   280  000744  9292               	bcf	146,1,c	;volatile
   281  000746                     
   282                           ;main.c: 53:     PORTAbits.RA1 = 0;
   283  000746  9280               	bcf	128,1,c	;volatile
   284  000748                     
   285                           ;main.c: 54:     PORTAbits.RA0 = 0;
   286  000748  9080               	bcf	128,0,c	;volatile
   287  00074A                     
   288                           ;main.c: 56:     TRISAbits.RA2 = 1;
   289  00074A  8492               	bsf	146,2,c	;volatile
   290  00074C                     
   291                           ;main.c: 57:     TRISAbits.RA4 = 0;
   292  00074C  9892               	bcf	146,4,c	;volatile
   293  00074E                     
   294                           ;main.c: 58:     PORTAbits.RA5 = 0;
   295  00074E  9A80               	bcf	128,5,c	;volatile
   296  000750                     
   297                           ;main.c: 61:     TRISB = 0x00;
   298  000750  0E00               	movlw	0
   299  000752  6E93               	movwf	147,c	;volatile
   300  000754                     
   301                           ;main.c: 63:     TRISC = 0x3F;
   302  000754  0E3F               	movlw	63
   303  000756  6E94               	movwf	148,c	;volatile
   304  000758                     
   305                           ;main.c: 65:     TRISD = 0x00;
   306  000758  0E00               	movlw	0
   307  00075A  6E95               	movwf	149,c	;volatile
   308  00075C                     l1120:
   309                           
   310                           ;main.c: 70:         PORTAbits.RA0 = 1;
   311  00075C  8080               	bsf	128,0,c	;volatile
   312  00075E                     
   313                           ;main.c: 71:         _delay((unsigned long)((100)*(20000000/4000.0)));
   314  00075E  0E03               	movlw	3
   315  000760  6E2C               	movwf	(??_main+1)^0,c
   316  000762  0E8A               	movlw	138
   317  000764  6E2B               	movwf	??_main^0,c
   318  000766  0E56               	movlw	86
   319  000768                     u627:
   320  000768  2EE8               	decfsz	wreg,f,c
   321  00076A  D7FE               	bra	u627
   322  00076C  2E2B               	decfsz	??_main^0,f,c
   323  00076E  D7FC               	bra	u627
   324  000770  2E2C               	decfsz	(??_main+1)^0,f,c
   325  000772  D7FA               	bra	u627
   326  000774                     
   327                           ;main.c: 72:         PORTAbits.RA0 = 0;
   328  000774  9080               	bcf	128,0,c	;volatile
   329  000776                     
   330                           ;main.c: 73:         PORTAbits.RA1 = 0;
   331  000776  9280               	bcf	128,1,c	;volatile
   332  000778                     
   333                           ;main.c: 74:         _delay((unsigned long)((100)*(20000000/4000.0)));
   334  000778  0E03               	movlw	3
   335  00077A  6E2C               	movwf	(??_main+1)^0,c
   336  00077C  0E8A               	movlw	138
   337  00077E  6E2B               	movwf	??_main^0,c
   338  000780  0E56               	movlw	86
   339  000782                     u637:
   340  000782  2EE8               	decfsz	wreg,f,c
   341  000784  D7FE               	bra	u637
   342  000786  2E2B               	decfsz	??_main^0,f,c
   343  000788  D7FC               	bra	u637
   344  00078A  2E2C               	decfsz	(??_main+1)^0,f,c
   345  00078C  D7FA               	bra	u637
   346  00078E                     
   347                           ;main.c: 77:         if (cmd_active) {
   348  00078E  502F               	movf	_cmd_active^0,w,c
   349  000790  B4D8               	btfsc	status,2,c
   350  000792  EFCD  F003         	goto	u541
   351  000796  EFCF  F003         	goto	u540
   352  00079A                     u541:
   353  00079A  EFAE  F003         	goto	l1120
   354  00079E                     u540:
   355  00079E                     
   356                           ;main.c: 79:             if (buffer[1] == '0') {
   357  00079E  0E30               	movlw	48
   358  0007A0  182E               	xorwf	(_buffer+1)^0,w,c
   359  0007A2  A4D8               	btfss	status,2,c
   360  0007A4  EFD6  F003         	goto	u551
   361  0007A8  EFD8  F003         	goto	u550
   362  0007AC                     u551:
   363  0007AC  EFDC  F003         	goto	l1136
   364  0007B0                     u550:
   365  0007B0                     
   366                           ;main.c: 80:                 do_finish();
   367  0007B0  EC3F  F005         	call	_do_finish	;wreg free
   368                           
   369                           ;main.c: 81:             }
   370  0007B4  EFF4  F003         	goto	l1144
   371  0007B8                     l1136:
   372  0007B8  0E31               	movlw	49
   373  0007BA  182E               	xorwf	(_buffer+1)^0,w,c
   374  0007BC  A4D8               	btfss	status,2,c
   375  0007BE  EFE3  F003         	goto	u561
   376  0007C2  EFE5  F003         	goto	u560
   377  0007C6                     u561:
   378  0007C6  EFE9  F003         	goto	l1140
   379  0007CA                     u560:
   380  0007CA                     
   381                           ;main.c: 83:                 do_read();
   382  0007CA  EC4B  F005         	call	_do_read	;wreg free
   383                           
   384                           ;main.c: 84:             }
   385  0007CE  EFF4  F003         	goto	l1144
   386  0007D2                     l1140:
   387  0007D2  0E32               	movlw	50
   388  0007D4  182E               	xorwf	(_buffer+1)^0,w,c
   389  0007D6  A4D8               	btfss	status,2,c
   390  0007D8  EFF0  F003         	goto	u571
   391  0007DC  EFF2  F003         	goto	u570
   392  0007E0                     u571:
   393  0007E0  EFF4  F003         	goto	l1144
   394  0007E4                     u570:
   395  0007E4                     
   396                           ;main.c: 86:                 do_write();
   397  0007E4  EC4A  F005         	call	_do_write	;wreg free
   398  0007E8                     l1144:
   399                           
   400                           ;main.c: 88:             bufptr = 0;
   401  0007E8  0E00               	movlw	0
   402  0007EA  6E30               	movwf	_bufptr^0,c
   403  0007EC                     
   404                           ;main.c: 89:             cmd_active = 0;
   405  0007EC  0E00               	movlw	0
   406  0007EE  6E2F               	movwf	_cmd_active^0,c
   407  0007F0  EFAE  F003         	goto	l1120
   408  0007F4  EF07  F000         	goto	start
   409  0007F8                     __end_of_main:
   410                           	callstack 0
   411                           
   412 ;; *************** function _uart_init *****************
   413 ;; Defined at:
   414 ;;		line 21 in file "uart.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;  baud_rate       4   33[COMRAM] const unsigned long 
   417 ;; Auto vars:     Size  Location     Type
   418 ;;  n               4   37[COMRAM] unsigned long 
   419 ;;  factor          1   41[COMRAM] unsigned char 
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   429 ;;      Params:         4       0       0       0       0       0       0
   430 ;;      Locals:         5       0       0       0       0       0       0
   431 ;;      Temps:          0       0       0       0       0       0       0
   432 ;;      Totals:         9       0       0       0       0       0       0
   433 ;;Total ram usage:        9 bytes
   434 ;; Hardware stack levels used:    1
   435 ;; Hardware stack levels required when called:    3
   436 ;; This function calls:
   437 ;;		___lldiv
   438 ;;		___lmul
   439 ;; This function is called by:
   440 ;;		_main
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           	psect	text1
   445  00060A                     __ptext1:
   446                           	callstack 0
   447  00060A                     _uart_init:
   448                           	callstack 27
   449  00060A                     
   450                           ;uart.c: 21: void uart_init(const uint32_t baud_rate);uart.c: 22: {;uart.c: 24:     INTC
      +                          ONbits.GIEH = 0;
   451  00060A  9EF2               	bcf	242,7,c	;volatile
   452                           
   453                           ;uart.c: 26:     PIE1bits.TX1IE = 1;
   454  00060C  889D               	bsf	157,4,c	;volatile
   455                           
   456                           ;uart.c: 27:     PIE1bits.RC1IE = 1;
   457  00060E  8A9D               	bsf	157,5,c	;volatile
   458                           
   459                           ;uart.c: 30:     TRISCbits.TRISC6=1;
   460  000610  8C94               	bsf	148,6,c	;volatile
   461                           
   462                           ;uart.c: 31:     TRISCbits.TRISC7=1;
   463  000612  8E94               	bsf	148,7,c	;volatile
   464                           
   465                           ;uart.c: 33:     BAUDCONbits.BRG16 = 1;
   466  000614  86B8               	bsf	184,3,c	;volatile
   467                           
   468                           ;uart.c: 35:     RCSTAbits.CREN = 1;
   469  000616  88AB               	bsf	171,4,c	;volatile
   470                           
   471                           ;uart.c: 36:     RCSTAbits.SPEN = 1;
   472  000618  8EAB               	bsf	171,7,c	;volatile
   473                           
   474                           ;uart.c: 38:     TXSTAbits.SYNC = 0;
   475  00061A  98AC               	bcf	172,4,c	;volatile
   476                           
   477                           ;uart.c: 39:     TXSTAbits.BRGH = 1;
   478  00061C  84AC               	bsf	172,2,c	;volatile
   479                           
   480                           ;uart.c: 40:     TXSTAbits.TXEN = 1;
   481  00061E  8AAC               	bsf	172,5,c	;volatile
   482                           
   483                           ;uart.c: 43:     uint8_t factor;;uart.c: 44:     if (BAUDCONbits.BRG16 && TXSTAbits.BRGH
      +                          )
   484  000620  A6B8               	btfss	184,3,c	;volatile
   485  000622  EF15  F003         	goto	u431
   486  000626  EF17  F003         	goto	u430
   487  00062A                     u431:
   488  00062A  EF22  F003         	goto	l97
   489  00062E                     u430:
   490  00062E  A4AC               	btfss	172,2,c	;volatile
   491  000630  EF1C  F003         	goto	u441
   492  000634  EF1E  F003         	goto	u440
   493  000638                     u441:
   494  000638  EF22  F003         	goto	l97
   495  00063C                     u440:
   496  00063C                     
   497                           ;uart.c: 45:         factor = 4;
   498  00063C  0E04               	movlw	4
   499  00063E  6E2A               	movwf	uart_init@factor^0,c
   500  000640  EF56  F003         	goto	l1058
   501  000644                     l97:
   502  000644  A6B8               	btfss	184,3,c	;volatile
   503  000646  EF27  F003         	goto	u451
   504  00064A  EF29  F003         	goto	u450
   505  00064E                     u451:
   506  00064E  EF34  F003         	goto	l99
   507  000652                     u450:
   508  000652  B4AC               	btfsc	172,2,c	;volatile
   509  000654  EF2E  F003         	goto	u461
   510  000658  EF30  F003         	goto	u460
   511  00065C                     u461:
   512  00065C  EF34  F003         	goto	l99
   513  000660                     u460:
   514  000660                     l1048:
   515                           
   516                           ;uart.c: 47:         factor = 16;
   517  000660  0E10               	movlw	16
   518  000662  6E2A               	movwf	uart_init@factor^0,c
   519  000664  EF56  F003         	goto	l1058
   520  000668                     l99:
   521  000668  B6B8               	btfsc	184,3,c	;volatile
   522  00066A  EF39  F003         	goto	u471
   523  00066E  EF3B  F003         	goto	u470
   524  000672                     u471:
   525  000672  EF44  F003         	goto	l101
   526  000676                     u470:
   527  000676  A4AC               	btfss	172,2,c	;volatile
   528  000678  EF40  F003         	goto	u481
   529  00067C  EF42  F003         	goto	u480
   530  000680                     u481:
   531  000680  EF44  F003         	goto	l101
   532  000684                     u480:
   533  000684  EF30  F003         	goto	l1048
   534  000688                     l101:
   535  000688  B6B8               	btfsc	184,3,c	;volatile
   536  00068A  EF49  F003         	goto	u491
   537  00068E  EF4B  F003         	goto	u490
   538  000692                     u491:
   539  000692  EF56  F003         	goto	l100
   540  000696                     u490:
   541  000696  B4AC               	btfsc	172,2,c	;volatile
   542  000698  EF50  F003         	goto	u501
   543  00069C  EF52  F003         	goto	u500
   544  0006A0                     u501:
   545  0006A0  EF56  F003         	goto	l100
   546  0006A4                     u500:
   547  0006A4                     
   548                           ;uart.c: 51:         factor = 64;
   549  0006A4  0E40               	movlw	64
   550  0006A6  6E2A               	movwf	uart_init@factor^0,c
   551  0006A8  EF56  F003         	goto	l1058
   552  0006AC                     l100:
   553  0006AC                     l1058:
   554                           
   555                           ;uart.c: 52:     if (TXSTAbits.SYNC)
   556  0006AC  A8AC               	btfss	172,4,c	;volatile
   557  0006AE  EF5B  F003         	goto	u511
   558  0006B2  EF5D  F003         	goto	u510
   559  0006B6                     u511:
   560  0006B6  EF5F  F003         	goto	l1062
   561  0006BA                     u510:
   562  0006BA                     
   563                           ;uart.c: 53:         factor = 64;
   564  0006BA  0E40               	movlw	64
   565  0006BC  6E2A               	movwf	uart_init@factor^0,c
   566  0006BE                     l1062:
   567                           
   568                           ;uart.c: 56:     uint32_t n = (int32_t) 20000000 / (factor * baud_rate) - 1u ;
   569  0006BE  0E00               	movlw	0
   570  0006C0  6E15               	movwf	___lldiv@dividend^0,c
   571  0006C2  0E2D               	movlw	45
   572  0006C4  6E16               	movwf	(___lldiv@dividend+1)^0,c
   573  0006C6  0E31               	movlw	49
   574  0006C8  6E17               	movwf	(___lldiv@dividend+2)^0,c
   575  0006CA  0E01               	movlw	1
   576  0006CC  6E18               	movwf	(___lldiv@dividend+3)^0,c
   577  0006CE  502A               	movf	uart_init@factor^0,w,c
   578  0006D0  6E09               	movwf	___lmul@multiplier^0,c
   579  0006D2  6A0A               	clrf	(___lmul@multiplier+1)^0,c
   580  0006D4  6A0B               	clrf	(___lmul@multiplier+2)^0,c
   581  0006D6  6A0C               	clrf	(___lmul@multiplier+3)^0,c
   582  0006D8  C022  F00D         	movff	uart_init@baud_rate,___lmul@multiplicand
   583  0006DC  C023  F00E         	movff	uart_init@baud_rate+1,___lmul@multiplicand+1
   584  0006E0  C024  F00F         	movff	uart_init@baud_rate+2,___lmul@multiplicand+2
   585  0006E4  C025  F010         	movff	uart_init@baud_rate+3,___lmul@multiplicand+3
   586  0006E8  ECDF  F004         	call	___lmul	;wreg free
   587  0006EC  C009  F019         	movff	?___lmul,___lldiv@divisor
   588  0006F0  C00A  F01A         	movff	?___lmul+1,___lldiv@divisor+1
   589  0006F4  C00B  F01B         	movff	?___lmul+2,___lldiv@divisor+2
   590  0006F8  C00C  F01C         	movff	?___lmul+3,___lldiv@divisor+3
   591  0006FC  ECFC  F003         	call	___lldiv	;wreg free
   592  000700  0EFF               	movlw	255
   593  000702  2415               	addwf	?___lldiv^0,w,c
   594  000704  6E26               	movwf	uart_init@n^0,c
   595  000706  0EFF               	movlw	255
   596  000708  2016               	addwfc	(?___lldiv+1)^0,w,c
   597  00070A  6E27               	movwf	(uart_init@n+1)^0,c
   598  00070C  0EFF               	movlw	255
   599  00070E  2017               	addwfc	(?___lldiv+2)^0,w,c
   600  000710  6E28               	movwf	(uart_init@n+2)^0,c
   601  000712  0EFF               	movlw	255
   602  000714  2018               	addwfc	(?___lldiv+3)^0,w,c
   603  000716  6E29               	movwf	(uart_init@n+3)^0,c
   604  000718                     
   605                           ;uart.c: 57:     SPBRGH = (n & 0xFF00) >> 8;
   606  000718  C027  FFB0         	movff	uart_init@n+1,4016	;volatile
   607  00071C                     
   608                           ;uart.c: 58:     SPBRG = n & 0x00FF;
   609  00071C  C026  FFAF         	movff	uart_init@n,4015	;volatile
   610  000720                     
   611                           ;uart.c: 60:     RCONbits.IPEN = 1;
   612  000720  8ED0               	bsf	208,7,c	;volatile
   613  000722                     
   614                           ;uart.c: 61:     INTCONbits.PEIE = 1;
   615  000722  8CF2               	bsf	242,6,c	;volatile
   616  000724                     
   617                           ;uart.c: 62:     IPR1bits.RCIP = 1;
   618  000724  8A9F               	bsf	159,5,c	;volatile
   619  000726                     
   620                           ;uart.c: 65:     PIE1bits.RCIE=1;
   621  000726  8A9D               	bsf	157,5,c	;volatile
   622  000728                     
   623                           ;uart.c: 68:     PIE1bits.TXIE=0;
   624  000728  989D               	bcf	157,4,c	;volatile
   625  00072A                     
   626                           ;uart.c: 71:     INTCONbits.GIEH = 1;
   627  00072A  8EF2               	bsf	242,7,c	;volatile
   628  00072C  0012               	return		;funcret
   629  00072E                     __end_of_uart_init:
   630                           	callstack 0
   631                           
   632 ;; *************** function ___lmul *****************
   633 ;; Defined at:
   634 ;;		line 15 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/Umul32.c"
   635 ;; Parameters:    Size  Location     Type
   636 ;;  multiplier      4    8[COMRAM] unsigned long 
   637 ;;  multiplicand    4   12[COMRAM] unsigned long 
   638 ;; Auto vars:     Size  Location     Type
   639 ;;  product         4   16[COMRAM] unsigned long 
   640 ;; Return value:  Size  Location     Type
   641 ;;                  4    8[COMRAM] unsigned long 
   642 ;; Registers used:
   643 ;;		wreg, status,2, status,0
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   649 ;;      Params:         8       0       0       0       0       0       0
   650 ;;      Locals:         4       0       0       0       0       0       0
   651 ;;      Temps:          0       0       0       0       0       0       0
   652 ;;      Totals:        12       0       0       0       0       0       0
   653 ;;Total ram usage:       12 bytes
   654 ;; Hardware stack levels used:    1
   655 ;; Hardware stack levels required when called:    2
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_uart_init
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text2
   664  0009BE                     __ptext2:
   665                           	callstack 0
   666  0009BE                     ___lmul:
   667                           	callstack 27
   668  0009BE  0E00               	movlw	0
   669  0009C0  6E11               	movwf	___lmul@product^0,c
   670  0009C2  0E00               	movlw	0
   671  0009C4  6E12               	movwf	(___lmul@product+1)^0,c
   672  0009C6  0E00               	movlw	0
   673  0009C8  6E13               	movwf	(___lmul@product+2)^0,c
   674  0009CA  0E00               	movlw	0
   675  0009CC  6E14               	movwf	(___lmul@product+3)^0,c
   676  0009CE                     l1010:
   677  0009CE  A009               	btfss	___lmul@multiplier^0,0,c
   678  0009D0  EFEC  F004         	goto	u381
   679  0009D4  EFEE  F004         	goto	u380
   680  0009D8                     u381:
   681  0009D8  EFF6  F004         	goto	l1014
   682  0009DC                     u380:
   683  0009DC  500D               	movf	___lmul@multiplicand^0,w,c
   684  0009DE  2611               	addwf	___lmul@product^0,f,c
   685  0009E0  500E               	movf	(___lmul@multiplicand+1)^0,w,c
   686  0009E2  2212               	addwfc	(___lmul@product+1)^0,f,c
   687  0009E4  500F               	movf	(___lmul@multiplicand+2)^0,w,c
   688  0009E6  2213               	addwfc	(___lmul@product+2)^0,f,c
   689  0009E8  5010               	movf	(___lmul@multiplicand+3)^0,w,c
   690  0009EA  2214               	addwfc	(___lmul@product+3)^0,f,c
   691  0009EC                     l1014:
   692  0009EC  90D8               	bcf	status,0,c
   693  0009EE  360D               	rlcf	___lmul@multiplicand^0,f,c
   694  0009F0  360E               	rlcf	(___lmul@multiplicand+1)^0,f,c
   695  0009F2  360F               	rlcf	(___lmul@multiplicand+2)^0,f,c
   696  0009F4  3610               	rlcf	(___lmul@multiplicand+3)^0,f,c
   697  0009F6  90D8               	bcf	status,0,c
   698  0009F8  320C               	rrcf	(___lmul@multiplier+3)^0,f,c
   699  0009FA  320B               	rrcf	(___lmul@multiplier+2)^0,f,c
   700  0009FC  320A               	rrcf	(___lmul@multiplier+1)^0,f,c
   701  0009FE  3209               	rrcf	___lmul@multiplier^0,f,c
   702  000A00  5009               	movf	___lmul@multiplier^0,w,c
   703  000A02  100A               	iorwf	(___lmul@multiplier+1)^0,w,c
   704  000A04  100B               	iorwf	(___lmul@multiplier+2)^0,w,c
   705  000A06  100C               	iorwf	(___lmul@multiplier+3)^0,w,c
   706  000A08  A4D8               	btfss	status,2,c
   707  000A0A  EF09  F005         	goto	u391
   708  000A0E  EF0B  F005         	goto	u390
   709  000A12                     u391:
   710  000A12  EFE7  F004         	goto	l1010
   711  000A16                     u390:
   712  000A16  C011  F009         	movff	___lmul@product,?___lmul
   713  000A1A  C012  F00A         	movff	___lmul@product+1,?___lmul+1
   714  000A1E  C013  F00B         	movff	___lmul@product+2,?___lmul+2
   715  000A22  C014  F00C         	movff	___lmul@product+3,?___lmul+3
   716  000A26  0012               	return		;funcret
   717  000A28                     __end_of___lmul:
   718                           	callstack 0
   719                           
   720 ;; *************** function ___lldiv *****************
   721 ;; Defined at:
   722 ;;		line 7 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/__lldiv.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  dividend        4   20[COMRAM] unsigned long 
   725 ;;  divisor         4   24[COMRAM] unsigned long 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;  quotient        4   28[COMRAM] unsigned long 
   728 ;;  counter         1   32[COMRAM] unsigned char 
   729 ;; Return value:  Size  Location     Type
   730 ;;                  4   20[COMRAM] unsigned long 
   731 ;; Registers used:
   732 ;;		wreg, status,2, status,0
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   738 ;;      Params:         8       0       0       0       0       0       0
   739 ;;      Locals:         5       0       0       0       0       0       0
   740 ;;      Temps:          0       0       0       0       0       0       0
   741 ;;      Totals:        13       0       0       0       0       0       0
   742 ;;Total ram usage:       13 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; Hardware stack levels required when called:    2
   745 ;; This function calls:
   746 ;;		Nothing
   747 ;; This function is called by:
   748 ;;		_uart_init
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text3
   753  0007F8                     __ptext3:
   754                           	callstack 0
   755  0007F8                     ___lldiv:
   756                           	callstack 27
   757  0007F8  0E00               	movlw	0
   758  0007FA  6E1D               	movwf	___lldiv@quotient^0,c
   759  0007FC  0E00               	movlw	0
   760  0007FE  6E1E               	movwf	(___lldiv@quotient+1)^0,c
   761  000800  0E00               	movlw	0
   762  000802  6E1F               	movwf	(___lldiv@quotient+2)^0,c
   763  000804  0E00               	movlw	0
   764  000806  6E20               	movwf	(___lldiv@quotient+3)^0,c
   765  000808  5019               	movf	___lldiv@divisor^0,w,c
   766  00080A  101A               	iorwf	(___lldiv@divisor+1)^0,w,c
   767  00080C  101B               	iorwf	(___lldiv@divisor+2)^0,w,c
   768  00080E  101C               	iorwf	(___lldiv@divisor+3)^0,w,c
   769  000810  B4D8               	btfsc	status,2,c
   770  000812  EF0D  F004         	goto	u401
   771  000816  EF0F  F004         	goto	u400
   772  00081A                     u401:
   773  00081A  EF45  F004         	goto	l172
   774  00081E                     u400:
   775  00081E  0E01               	movlw	1
   776  000820  6E21               	movwf	___lldiv@counter^0,c
   777  000822  EF19  F004         	goto	l1026
   778  000826                     l1024:
   779  000826  90D8               	bcf	status,0,c
   780  000828  3619               	rlcf	___lldiv@divisor^0,f,c
   781  00082A  361A               	rlcf	(___lldiv@divisor+1)^0,f,c
   782  00082C  361B               	rlcf	(___lldiv@divisor+2)^0,f,c
   783  00082E  361C               	rlcf	(___lldiv@divisor+3)^0,f,c
   784  000830  2A21               	incf	___lldiv@counter^0,f,c
   785  000832                     l1026:
   786  000832  AE1C               	btfss	(___lldiv@divisor+3)^0,7,c
   787  000834  EF1E  F004         	goto	u411
   788  000838  EF20  F004         	goto	u410
   789  00083C                     u411:
   790  00083C  EF13  F004         	goto	l1024
   791  000840                     u410:
   792  000840                     l1028:
   793  000840  90D8               	bcf	status,0,c
   794  000842  361D               	rlcf	___lldiv@quotient^0,f,c
   795  000844  361E               	rlcf	(___lldiv@quotient+1)^0,f,c
   796  000846  361F               	rlcf	(___lldiv@quotient+2)^0,f,c
   797  000848  3620               	rlcf	(___lldiv@quotient+3)^0,f,c
   798  00084A  5019               	movf	___lldiv@divisor^0,w,c
   799  00084C  5C15               	subwf	___lldiv@dividend^0,w,c
   800  00084E  501A               	movf	(___lldiv@divisor+1)^0,w,c
   801  000850  5816               	subwfb	(___lldiv@dividend+1)^0,w,c
   802  000852  501B               	movf	(___lldiv@divisor+2)^0,w,c
   803  000854  5817               	subwfb	(___lldiv@dividend+2)^0,w,c
   804  000856  501C               	movf	(___lldiv@divisor+3)^0,w,c
   805  000858  5818               	subwfb	(___lldiv@dividend+3)^0,w,c
   806  00085A  A0D8               	btfss	status,0,c
   807  00085C  EF32  F004         	goto	u421
   808  000860  EF34  F004         	goto	u420
   809  000864                     u421:
   810  000864  EF3D  F004         	goto	l1036
   811  000868                     u420:
   812  000868  5019               	movf	___lldiv@divisor^0,w,c
   813  00086A  5E15               	subwf	___lldiv@dividend^0,f,c
   814  00086C  501A               	movf	(___lldiv@divisor+1)^0,w,c
   815  00086E  5A16               	subwfb	(___lldiv@dividend+1)^0,f,c
   816  000870  501B               	movf	(___lldiv@divisor+2)^0,w,c
   817  000872  5A17               	subwfb	(___lldiv@dividend+2)^0,f,c
   818  000874  501C               	movf	(___lldiv@divisor+3)^0,w,c
   819  000876  5A18               	subwfb	(___lldiv@dividend+3)^0,f,c
   820  000878  801D               	bsf	___lldiv@quotient^0,0,c
   821  00087A                     l1036:
   822  00087A  90D8               	bcf	status,0,c
   823  00087C  321C               	rrcf	(___lldiv@divisor+3)^0,f,c
   824  00087E  321B               	rrcf	(___lldiv@divisor+2)^0,f,c
   825  000880  321A               	rrcf	(___lldiv@divisor+1)^0,f,c
   826  000882  3219               	rrcf	___lldiv@divisor^0,f,c
   827  000884  2E21               	decfsz	___lldiv@counter^0,f,c
   828  000886  EF20  F004         	goto	l1028
   829  00088A                     l172:
   830  00088A  C01D  F015         	movff	___lldiv@quotient,?___lldiv
   831  00088E  C01E  F016         	movff	___lldiv@quotient+1,?___lldiv+1
   832  000892  C01F  F017         	movff	___lldiv@quotient+2,?___lldiv+2
   833  000896  C020  F018         	movff	___lldiv@quotient+3,?___lldiv+3
   834  00089A  0012               	return		;funcret
   835  00089C                     __end_of___lldiv:
   836                           	callstack 0
   837                           
   838 ;; *************** function _do_write *****************
   839 ;; Defined at:
   840 ;;		line 139 in file "main.c"
   841 ;; Parameters:    Size  Location     Type
   842 ;;		None
   843 ;; Auto vars:     Size  Location     Type
   844 ;;		None
   845 ;; Return value:  Size  Location     Type
   846 ;;                  1    wreg      void 
   847 ;; Registers used:
   848 ;;		None
   849 ;; Tracked objects:
   850 ;;		On entry : 0/0
   851 ;;		On exit  : 0/0
   852 ;;		Unchanged: 0/0
   853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   854 ;;      Params:         0       0       0       0       0       0       0
   855 ;;      Locals:         0       0       0       0       0       0       0
   856 ;;      Temps:          0       0       0       0       0       0       0
   857 ;;      Totals:         0       0       0       0       0       0       0
   858 ;;Total ram usage:        0 bytes
   859 ;; Hardware stack levels used:    1
   860 ;; Hardware stack levels required when called:    2
   861 ;; This function calls:
   862 ;;		Nothing
   863 ;; This function is called by:
   864 ;;		_main
   865 ;; This function uses a non-reentrant model
   866 ;;
   867                           
   868                           	psect	text4
   869  000A94                     __ptext4:
   870                           	callstack 0
   871  000A94                     _do_write:
   872                           	callstack 28
   873  000A94  0012               	return		;funcret
   874  000A96                     __end_of_do_write:
   875                           	callstack 0
   876                           
   877 ;; *************** function _do_read *****************
   878 ;; Defined at:
   879 ;;		line 134 in file "main.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;                  1    wreg      void 
   886 ;; Registers used:
   887 ;;		None
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   893 ;;      Params:         0       0       0       0       0       0       0
   894 ;;      Locals:         0       0       0       0       0       0       0
   895 ;;      Temps:          0       0       0       0       0       0       0
   896 ;;      Totals:         0       0       0       0       0       0       0
   897 ;;Total ram usage:        0 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; Hardware stack levels required when called:    2
   900 ;; This function calls:
   901 ;;		Nothing
   902 ;; This function is called by:
   903 ;;		_main
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           	psect	text5
   908  000A96                     __ptext5:
   909                           	callstack 0
   910  000A96                     _do_read:
   911                           	callstack 28
   912  000A96  0012               	return		;funcret
   913  000A98                     __end_of_do_read:
   914                           	callstack 0
   915                           
   916 ;; *************** function _do_finish *****************
   917 ;; Defined at:
   918 ;;		line 128 in file "main.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  s               2   12[COMRAM] PTR unsigned char 
   923 ;;		 -> STR_1(8), 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   933 ;;      Params:         0       0       0       0       0       0       0
   934 ;;      Locals:         2       0       0       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0       0       0
   936 ;;      Totals:         2       0       0       0       0       0       0
   937 ;;Total ram usage:        2 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    3
   940 ;; This function calls:
   941 ;;		_uart_puts
   942 ;; This function is called by:
   943 ;;		_main
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text6
   948  000A7E                     __ptext6:
   949                           	callstack 0
   950  000A7E                     _do_finish:
   951                           	callstack 27
   952  000A7E                     
   953                           ;main.c: 130:     uint8_t *s = (uint8_t *) "finish\n";
   954  000A7E  0E01               	movlw	low STR_1
   955  000A80  6E0D               	movwf	do_finish@s^0,c
   956  000A82  0E06               	movlw	high STR_1
   957  000A84  6E0E               	movwf	(do_finish@s+1)^0,c
   958  000A86                     
   959                           ;main.c: 131:     uart_puts(s);
   960  000A86  C00D  F009         	movff	do_finish@s,uart_puts@s
   961  000A8A  C00E  F00A         	movff	do_finish@s+1,uart_puts@s+1
   962  000A8E  EC4E  F004         	call	_uart_puts	;wreg free
   963  000A92  0012               	return		;funcret
   964  000A94                     __end_of_do_finish:
   965                           	callstack 0
   966                           
   967 ;; *************** function _uart_puts *****************
   968 ;; Defined at:
   969 ;;		line 139 in file "uart.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;  s               2    8[COMRAM] PTR unsigned char 
   972 ;;		 -> STR_1(8), 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  p               2   10[COMRAM] PTR unsigned char 
   975 ;;		 -> STR_1(8), 
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   985 ;;      Params:         2       0       0       0       0       0       0
   986 ;;      Locals:         2       0       0       0       0       0       0
   987 ;;      Temps:          0       0       0       0       0       0       0
   988 ;;      Totals:         4       0       0       0       0       0       0
   989 ;;Total ram usage:        4 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; Hardware stack levels required when called:    2
   992 ;; This function calls:
   993 ;;		Nothing
   994 ;; This function is called by:
   995 ;;		_do_finish
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text7
  1000  00089C                     __ptext7:
  1001                           	callstack 0
  1002  00089C                     _uart_puts:
  1003                           	callstack 27
  1004  00089C                     
  1005                           ;uart.c: 139: void uart_puts(uint8_t *s);uart.c: 140: {;uart.c: 142:     INTCONbits.GIEH
      +                           = 0;
  1006  00089C  9EF2               	bcf	242,7,c	;volatile
  1007                           
  1008                           ;uart.c: 145:     PORTAbits.RA4 = 1;
  1009  00089E  8880               	bsf	128,4,c	;volatile
  1010                           
  1011                           ;uart.c: 148:     while (PIR1bits.TXIF == 0) {
  1012  0008A0  EF53  F004         	goto	l127
  1013  0008A4                     l128:
  1014                           
  1015                           ;uart.c: 149:         __nop();
  1016  0008A4  F000               	nop	
  1017  0008A6                     l127:
  1018                           
  1019                           ;uart.c: 148:     while (PIR1bits.TXIF == 0) {
  1020  0008A6  A89E               	btfss	158,4,c	;volatile
  1021  0008A8  EF58  F004         	goto	u331
  1022  0008AC  EF5A  F004         	goto	u330
  1023  0008B0                     u331:
  1024  0008B0  EF52  F004         	goto	l128
  1025  0008B4                     u330:
  1026  0008B4  EF5D  F004         	goto	l130
  1027  0008B8                     l131:
  1028                           
  1029                           ;uart.c: 154:         __nop();
  1030  0008B8  F000               	nop	
  1031  0008BA                     l130:
  1032                           
  1033                           ;uart.c: 153:     while (PORTAbits.RA2 == 1) {
  1034  0008BA  B480               	btfsc	128,2,c	;volatile
  1035  0008BC  EF62  F004         	goto	u341
  1036  0008C0  EF64  F004         	goto	u340
  1037  0008C4                     u341:
  1038  0008C4  EF5C  F004         	goto	l131
  1039  0008C8                     u340:
  1040  0008C8                     
  1041                           ;uart.c: 158:     uint8_t *p = s;
  1042  0008C8  C009  F00B         	movff	uart_puts@s,uart_puts@p
  1043  0008CC  C00A  F00C         	movff	uart_puts@s+1,uart_puts@p+1
  1044                           
  1045                           ;uart.c: 159:     while (*p) {
  1046  0008D0  EF7D  F004         	goto	l1006
  1047  0008D4                     l1002:
  1048                           
  1049                           ;uart.c: 160:         TXREG = *p++;
  1050  0008D4  C00B  FFF6         	movff	uart_puts@p,tblptrl
  1051  0008D8  C00C  FFF7         	movff	uart_puts@p+1,tblptrh
  1052  0008DC                     	if	0	;tblptru may be non-zero
  1053  0008DC                     	endif
  1054  0008DC                     	if	0	;tblptru may be non-zero
  1055  0008DC                     	endif
  1056  0008DC  0008               	tblrd		*
  1057  0008DE  CFF5 FFAD          	movff	tablat,4013	;volatile
  1058  0008E2  4A0B               	infsnz	uart_puts@p^0,f,c
  1059  0008E4  2A0C               	incf	(uart_puts@p+1)^0,f,c
  1060                           
  1061                           ;uart.c: 161:         while(TXSTAbits.TRMT == 0) {
  1062  0008E6  EF76  F004         	goto	l135
  1063  0008EA                     l136:
  1064                           
  1065                           ;uart.c: 162:             __nop();
  1066  0008EA  F000               	nop	
  1067  0008EC                     l135:
  1068                           
  1069                           ;uart.c: 161:         while(TXSTAbits.TRMT == 0) {
  1070  0008EC  A2AC               	btfss	172,1,c	;volatile
  1071  0008EE  EF7B  F004         	goto	u351
  1072  0008F2  EF7D  F004         	goto	u350
  1073  0008F6                     u351:
  1074  0008F6  EF75  F004         	goto	l136
  1075  0008FA                     u350:
  1076  0008FA                     l1006:
  1077                           
  1078                           ;uart.c: 159:     while (*p) {
  1079  0008FA  C00B  FFF6         	movff	uart_puts@p,tblptrl
  1080  0008FE  C00C  FFF7         	movff	uart_puts@p+1,tblptrh
  1081  000902                     	if	0	;tblptru may be non-zero
  1082  000902                     	endif
  1083  000902                     	if	0	;tblptru may be non-zero
  1084  000902                     	endif
  1085  000902  0008               	tblrd		*
  1086  000904  50F5               	movf	tablat,w,c
  1087  000906  0900               	iorlw	0
  1088  000908  A4D8               	btfss	status,2,c
  1089  00090A  EF89  F004         	goto	u361
  1090  00090E  EF8B  F004         	goto	u360
  1091  000912                     u361:
  1092  000912  EF6A  F004         	goto	l1002
  1093  000916                     u360:
  1094  000916  EF8E  F004         	goto	l139
  1095  00091A                     l140:
  1096                           
  1097                           ;uart.c: 168:         __nop();
  1098  00091A  F000               	nop	
  1099  00091C                     l139:
  1100                           
  1101                           ;uart.c: 167:     while(TXSTAbits.TRMT == 0) {
  1102  00091C  A2AC               	btfss	172,1,c	;volatile
  1103  00091E  EF93  F004         	goto	u371
  1104  000922  EF95  F004         	goto	u370
  1105  000926                     u371:
  1106  000926  EF8D  F004         	goto	l140
  1107  00092A                     u370:
  1108  00092A                     
  1109                           ;uart.c: 172:     PORTAbits.RA4 = 0;
  1110  00092A  9880               	bcf	128,4,c	;volatile
  1111                           
  1112                           ;uart.c: 175:     INTCONbits.GIEH = 1;
  1113  00092C  8EF2               	bsf	242,7,c	;volatile
  1114  00092E  0012               	return		;funcret
  1115  000930                     __end_of_uart_puts:
  1116                           	callstack 0
  1117                           
  1118 ;; *************** function _high_isr *****************
  1119 ;; Defined at:
  1120 ;;		line 97 in file "main.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  c               1    7[COMRAM] unsigned char 
  1125 ;;  ok              1    0        _Bool 
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1135 ;;      Params:         0       0       0       0       0       0       0
  1136 ;;      Locals:         2       0       0       0       0       0       0
  1137 ;;      Temps:          2       0       0       0       0       0       0
  1138 ;;      Totals:         4       0       0       0       0       0       0
  1139 ;;Total ram usage:        4 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    1
  1142 ;; This function calls:
  1143 ;;		_uart_getc
  1144 ;; This function is called by:
  1145 ;;		Interrupt level 2
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	intcode
  1150  000008                     __pintcode:
  1151                           	callstack 0
  1152  000008                     _high_isr:
  1153                           	callstack 27
  1154                           
  1155                           ;incstack = 0
  1156  000008  8231               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1157  00000A  ED98  F004         	call	int_func,f	;refresh shadow registers
  1158                           
  1159                           	psect	intcode_body
  1160  000930                     __pintcode_body:
  1161                           	callstack 27
  1162  000930                     int_func:
  1163                           	callstack 27
  1164  000930  0006               	pop		; remove dummy address from shadow register refresh
  1165  000932  CFD9 F005          	movff	fsr2l,??_high_isr
  1166  000936  CFDA F006          	movff	fsr2h,??_high_isr+1
  1167  00093A                     
  1168                           ;main.c: 99:     uint8_t c = 0;
  1169  00093A  0E00               	movlw	0
  1170  00093C  6E08               	movwf	high_isr@c^0,c
  1171  00093E                     
  1172                           ;main.c: 102:     INTCONbits.GIEH = 0;
  1173  00093E  9EF2               	bcf	242,7,c	;volatile
  1174  000940  0E08               	movlw	low high_isr@c
  1175  000942  6E01               	movwf	uart_getc@c^0,c
  1176  000944  0E00               	movlw	high high_isr@c
  1177  000946  6E02               	movwf	(uart_getc@c+1)^0,c
  1178  000948  EC14  F005         	call	_uart_getc	;wreg free
  1179  00094C                     
  1180                           ;main.c: 106:     if (c) {
  1181  00094C  5008               	movf	high_isr@c^0,w,c
  1182  00094E  B4D8               	btfsc	status,2,c
  1183  000950  EFAC  F004         	goto	i2u58_41
  1184  000954  EFAE  F004         	goto	i2u58_40
  1185  000958                     i2u58_41:
  1186  000958  EFD8  F004         	goto	i2l1172
  1187  00095C                     i2u58_40:
  1188  00095C                     
  1189                           ;main.c: 108:         PORTAbits.RA1 = 1;
  1190  00095C  8280               	bsf	128,1,c	;volatile
  1191  00095E                     
  1192                           ;main.c: 111:         buffer[bufptr++] = c;
  1193  00095E  0E2D               	movlw	low _buffer
  1194  000960  2430               	addwf	_bufptr^0,w,c
  1195  000962  6ED9               	movwf	fsr2l,c
  1196  000964  6ADA               	clrf	fsr2h,c
  1197  000966  0E00               	movlw	high _buffer
  1198  000968  22DA               	addwfc	fsr2h,f,c
  1199  00096A  C008  FFDF         	movff	high_isr@c,indf2
  1200  00096E  2A30               	incf	_bufptr^0,f,c
  1201  000970                     
  1202                           ;main.c: 114:         if (bufptr == 2) {
  1203  000970  0E02               	movlw	2
  1204  000972  1830               	xorwf	_bufptr^0,w,c
  1205  000974  A4D8               	btfss	status,2,c
  1206  000976  EFBF  F004         	goto	i2u59_41
  1207  00097A  EFC1  F004         	goto	i2u59_40
  1208  00097E                     i2u59_41:
  1209  00097E  EFC5  F004         	goto	i2l1166
  1210  000982                     i2u59_40:
  1211  000982                     
  1212                           ;main.c: 115:             bufptr = 0;
  1213  000982  0E00               	movlw	0
  1214  000984  6E30               	movwf	_bufptr^0,c
  1215                           
  1216                           ;main.c: 116:         }
  1217  000986  EFD8  F004         	goto	i2l1172
  1218  00098A                     i2l1166:
  1219                           
  1220                           ;main.c: 118:             if (buffer[0] == '$' && bufptr == 1) {
  1221  00098A  0E24               	movlw	36
  1222  00098C  182D               	xorwf	_buffer^0,w,c
  1223  00098E  A4D8               	btfss	status,2,c
  1224  000990  EFCC  F004         	goto	i2u60_41
  1225  000994  EFCE  F004         	goto	i2u60_40
  1226  000998                     i2u60_41:
  1227  000998  EFD8  F004         	goto	i2l1172
  1228  00099C                     i2u60_40:
  1229  00099C  0430               	decf	_bufptr^0,w,c
  1230  00099E  A4D8               	btfss	status,2,c
  1231  0009A0  EFD4  F004         	goto	i2u61_41
  1232  0009A4  EFD6  F004         	goto	i2u61_40
  1233  0009A8                     i2u61_41:
  1234  0009A8  EFD8  F004         	goto	i2l1172
  1235  0009AC                     i2u61_40:
  1236  0009AC                     
  1237                           ;main.c: 119:                 cmd_active=1;
  1238  0009AC  0E01               	movlw	1
  1239  0009AE  6E2F               	movwf	_cmd_active^0,c
  1240  0009B0                     i2l1172:
  1241                           
  1242                           ;main.c: 125:     INTCONbits.GIEH = 1;
  1243  0009B0  8EF2               	bsf	242,7,c	;volatile
  1244  0009B2  C006  FFDA         	movff	??_high_isr+1,fsr2h
  1245  0009B6  C005  FFD9         	movff	??_high_isr,fsr2l
  1246  0009BA  9231               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1247  0009BC  0011               	retfie		f
  1248  0009BE                     __end_of_high_isr:
  1249                           	callstack 0
  1250                           
  1251 ;; *************** function _uart_getc *****************
  1252 ;; Defined at:
  1253 ;;		line 115 in file "uart.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  c               2    0[COMRAM] PTR unsigned char 
  1256 ;;		 -> high_isr@c(1), 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  er              1    0        unsigned char 
  1259 ;;  ok              1    0        _Bool 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      _Bool 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1269 ;;      Params:         2       0       0       0       0       0       0
  1270 ;;      Locals:         2       0       0       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0       0       0
  1272 ;;      Totals:         4       0       0       0       0       0       0
  1273 ;;Total ram usage:        4 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; This function calls:
  1276 ;;		Nothing
  1277 ;; This function is called by:
  1278 ;;		_high_isr
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text9
  1283  000A28                     __ptext9:
  1284                           	callstack 0
  1285  000A28                     _uart_getc:
  1286                           	callstack 27
  1287  000A28                     
  1288                           ;uart.c: 121:     if (RCSTAbits.FERR) {
  1289  000A28  A4AB               	btfss	171,2,c	;volatile
  1290  000A2A  EF19  F005         	goto	i2u52_41
  1291  000A2E  EF1B  F005         	goto	i2u52_40
  1292  000A32                     i2u52_41:
  1293  000A32  EF1E  F005         	goto	i2l120
  1294  000A36                     i2u52_40:
  1295  000A36  50AE               	movf	174,w,c	;volatile
  1296                           
  1297                           ;uart.c: 123:     }
  1298  000A38  EF30  F005         	goto	i2l1094
  1299  000A3C                     i2l120:
  1300  000A3C  A2AB               	btfss	171,1,c	;volatile
  1301  000A3E  EF23  F005         	goto	i2u53_41
  1302  000A42  EF25  F005         	goto	i2u53_40
  1303  000A46                     i2u53_41:
  1304  000A46  EF29  F005         	goto	i2l1092
  1305  000A4A                     i2u53_40:
  1306  000A4A                     
  1307                           ;uart.c: 125:         RCSTAbits.CREN = 0;
  1308  000A4A  98AB               	bcf	171,4,c	;volatile
  1309                           
  1310                           ;uart.c: 126:         RCSTAbits.CREN = 1;
  1311  000A4C  88AB               	bsf	171,4,c	;volatile
  1312                           
  1313                           ;uart.c: 127:     }
  1314  000A4E  EF30  F005         	goto	i2l1094
  1315  000A52                     i2l1092:
  1316                           
  1317                           ;uart.c: 129:         *c = RCREG & 0x7f;
  1318  000A52  50AE               	movf	174,w,c	;volatile
  1319  000A54  0B7F               	andlw	127
  1320  000A56  C001  FFD9         	movff	uart_getc@c,fsr2l
  1321  000A5A  C002  FFDA         	movff	uart_getc@c+1,fsr2h
  1322  000A5E  6EDF               	movwf	indf2,c
  1323  000A60                     i2l1094:
  1324                           
  1325                           ;uart.c: 132:     return ok;
  1326  000A60  0E00               	movlw	0
  1327  000A62  0012               	return		;funcret
  1328  000A64                     __end_of_uart_getc:
  1329                           	callstack 0
  1330                           
  1331                           	psect	rparam
  1332  0000                     
  1333                           	psect	temp
  1334  000031                     btemp:
  1335                           	callstack 0
  1336  000031                     	ds	1
  1337  0000                     int$flags	set	btemp
  1338  0000                     wtemp8	set	btemp+1
  1339  0000                     ttemp5	set	btemp+1
  1340  0000                     ttemp6	set	btemp+4
  1341  0000                     ttemp7	set	btemp+8
  1342                           
  1343                           	psect	idloc
  1344                           
  1345                           ;Config register IDLOC0 @ 0x200000
  1346                           ;	unspecified, using default values
  1347  200000                     	org	2097152
  1348  200000  FF                 	db	255
  1349                           
  1350                           ;Config register IDLOC1 @ 0x200001
  1351                           ;	unspecified, using default values
  1352  200001                     	org	2097153
  1353  200001  FF                 	db	255
  1354                           
  1355                           ;Config register IDLOC2 @ 0x200002
  1356                           ;	unspecified, using default values
  1357  200002                     	org	2097154
  1358  200002  FF                 	db	255
  1359                           
  1360                           ;Config register IDLOC3 @ 0x200003
  1361                           ;	unspecified, using default values
  1362  200003                     	org	2097155
  1363  200003  FF                 	db	255
  1364                           
  1365                           ;Config register IDLOC4 @ 0x200004
  1366                           ;	unspecified, using default values
  1367  200004                     	org	2097156
  1368  200004  FF                 	db	255
  1369                           
  1370                           ;Config register IDLOC5 @ 0x200005
  1371                           ;	unspecified, using default values
  1372  200005                     	org	2097157
  1373  200005  FF                 	db	255
  1374                           
  1375                           ;Config register IDLOC6 @ 0x200006
  1376                           ;	unspecified, using default values
  1377  200006                     	org	2097158
  1378  200006  FF                 	db	255
  1379                           
  1380                           ;Config register IDLOC7 @ 0x200007
  1381                           ;	unspecified, using default values
  1382  200007                     	org	2097159
  1383  200007  FF                 	db	255
  1384                           
  1385                           	psect	config
  1386                           
  1387                           ; Padding undefined space
  1388  300000                     	org	3145728
  1389  300000  FF                 	db	255
  1390                           
  1391                           ;Config register CONFIG1H @ 0x300001
  1392                           ;	Oscillator Selection bits
  1393                           ;	OSC = HS, HS oscillator
  1394                           ;	Fail-Safe Clock Monitor Enable bit
  1395                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1396                           ;	Internal/External Oscillator Switchover bit
  1397                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1398  300001                     	org	3145729
  1399  300001  02                 	db	2
  1400                           
  1401                           ;Config register CONFIG2L @ 0x300002
  1402                           ;	Power-up Timer Enable bit
  1403                           ;	PWRT = OFF, PWRT disabled
  1404                           ;	Brown-out Reset Enable bits
  1405                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1406                           ;	Brown Out Reset Voltage bits
  1407                           ;	BORV = 3, Minimum setting
  1408  300002                     	org	3145730
  1409  300002  19                 	db	25
  1410                           
  1411                           ;Config register CONFIG2H @ 0x300003
  1412                           ;	Watchdog Timer Enable bit
  1413                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1414                           ;	Watchdog Timer Postscale Select bits
  1415                           ;	WDTPS = 32768, 1:32768
  1416  300003                     	org	3145731
  1417  300003  1E                 	db	30
  1418                           
  1419                           ; Padding undefined space
  1420  300004                     	org	3145732
  1421  300004  FF                 	db	255
  1422                           
  1423                           ;Config register CONFIG3H @ 0x300005
  1424                           ;	CCP2 MUX bit
  1425                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1426                           ;	PORTB A/D Enable bit
  1427                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1428                           ;	Low-Power Timer1 Oscillator Enable bit
  1429                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1430                           ;	MCLR Pin Enable bit
  1431                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1432  300005                     	org	3145733
  1433  300005  81                 	db	129
  1434                           
  1435                           ;Config register CONFIG4L @ 0x300006
  1436                           ;	Stack Full/Underflow Reset Enable bit
  1437                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1438                           ;	Single-Supply ICSP Enable bit
  1439                           ;	LVP = OFF, Single-Supply ICSP disabled
  1440                           ;	Extended Instruction Set Enable bit
  1441                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1442                           ;	Background Debugger Enable bit
  1443                           ;	DEBUG = 0x1, unprogrammed default
  1444  300006                     	org	3145734
  1445  300006  81                 	db	129
  1446                           
  1447                           ; Padding undefined space
  1448  300007                     	org	3145735
  1449  300007  FF                 	db	255
  1450                           
  1451                           ;Config register CONFIG5L @ 0x300008
  1452                           ;	Code Protection bit
  1453                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1454                           ;	Code Protection bit
  1455                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1456                           ;	Code Protection bit
  1457                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1458                           ;	Code Protection bit
  1459                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1460  300008                     	org	3145736
  1461  300008  0F                 	db	15
  1462                           
  1463                           ;Config register CONFIG5H @ 0x300009
  1464                           ;	Boot Block Code Protection bit
  1465                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1466                           ;	Data EEPROM Code Protection bit
  1467                           ;	CPD = OFF, Data EEPROM not code-protected
  1468  300009                     	org	3145737
  1469  300009  C0                 	db	192
  1470                           
  1471                           ;Config register CONFIG6L @ 0x30000A
  1472                           ;	Write Protection bit
  1473                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1474                           ;	Write Protection bit
  1475                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1476                           ;	Write Protection bit
  1477                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1478                           ;	Write Protection bit
  1479                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1480  30000A                     	org	3145738
  1481  30000A  0F                 	db	15
  1482                           
  1483                           ;Config register CONFIG6H @ 0x30000B
  1484                           ;	Configuration Register Write Protection bit
  1485                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1486                           ;	Boot Block Write Protection bit
  1487                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1488                           ;	Data EEPROM Write Protection bit
  1489                           ;	WRTD = OFF, Data EEPROM not write-protected
  1490  30000B                     	org	3145739
  1491  30000B  E0                 	db	224
  1492                           
  1493                           ;Config register CONFIG7L @ 0x30000C
  1494                           ;	Table Read Protection bit
  1495                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1496                           ;	Table Read Protection bit
  1497                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1498                           ;	Table Read Protection bit
  1499                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1500                           ;	Table Read Protection bit
  1501                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1502  30000C                     	org	3145740
  1503  30000C  0F                 	db	15
  1504                           
  1505                           ;Config register CONFIG7H @ 0x30000D
  1506                           ;	Boot Block Table Read Protection bit
  1507                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1508  30000D                     	org	3145741
  1509  30000D  40                 	db	64
  1510                           tosu	equ	0xFFF
  1511                           tosh	equ	0xFFE
  1512                           tosl	equ	0xFFD
  1513                           stkptr	equ	0xFFC
  1514                           pclatu	equ	0xFFB
  1515                           pclath	equ	0xFFA
  1516                           pcl	equ	0xFF9
  1517                           tblptru	equ	0xFF8
  1518                           tblptrh	equ	0xFF7
  1519                           tblptrl	equ	0xFF6
  1520                           tablat	equ	0xFF5
  1521                           prodh	equ	0xFF4
  1522                           prodl	equ	0xFF3
  1523                           indf0	equ	0xFEF
  1524                           postinc0	equ	0xFEE
  1525                           postdec0	equ	0xFED
  1526                           preinc0	equ	0xFEC
  1527                           plusw0	equ	0xFEB
  1528                           fsr0h	equ	0xFEA
  1529                           fsr0l	equ	0xFE9
  1530                           wreg	equ	0xFE8
  1531                           indf1	equ	0xFE7
  1532                           postinc1	equ	0xFE6
  1533                           postdec1	equ	0xFE5
  1534                           preinc1	equ	0xFE4
  1535                           plusw1	equ	0xFE3
  1536                           fsr1h	equ	0xFE2
  1537                           fsr1l	equ	0xFE1
  1538                           bsr	equ	0xFE0
  1539                           indf2	equ	0xFDF
  1540                           postinc2	equ	0xFDE
  1541                           postdec2	equ	0xFDD
  1542                           preinc2	equ	0xFDC
  1543                           plusw2	equ	0xFDB
  1544                           fsr2h	equ	0xFDA
  1545                           fsr2l	equ	0xFD9
  1546                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     44      48
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    uart_puts@s	PTR unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    uart_puts@p	PTR unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 

    uart_getc@c	PTR unsigned char  size(2) Largest target is 1
		 -> high_isr@c(COMRAM[1]), 

    do_finish@s	PTR unsigned char  size(2) Largest target is 8
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_uart_init
    _uart_init->___lldiv
    ___lldiv->___lmul
    _do_finish->_uart_puts

Critical Paths under _high_isr in COMRAM

    _high_isr->_uart_getc

Critical Paths under _main in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1021
                                             42 COMRAM     2     2      0
                          _do_finish
                            _do_read
                           _do_write
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            9     5      4     854
                                             33 COMRAM     9     5      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                             20 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _do_write                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _do_read                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _do_finish                                            2     2      0     167
                                             12 COMRAM     2     2      0
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _uart_puts                                            4     2      2     144
                                              8 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _high_isr                                             4     4      0     192
                                              4 COMRAM     4     4      0
                          _uart_getc
 ---------------------------------------------------------------------------------
 (4) _uart_getc                                            4     2      2     122
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _do_finish
     _uart_puts
   _do_read
   _do_write
   _uart_init
     ___lldiv
       ___lmul (ARG)
     ___lmul

 _high_isr (ROOT)
   _uart_getc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2C      30       1       38.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30      15        0.0%
DATA                 0      0      30       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Apr 14 17:32:22 2024

                     l61 0A96                       l64 0A94                       l58 0A92  
                     l97 0644                       l99 0668                      l100 06AC  
                    l101 0688                      l105 072C                      l130 08BA  
                    l131 08B8                      l140 091A                      l141 092A  
                    l142 092E                      l135 08EC                      l127 08A6  
                    l136 08EA                      l128 08A4                      l139 091C  
                    l172 088A                      l156 0A16                      l157 0A26  
                    l179 089A                      l998 089C                      u400 081E  
                    u401 081A                      u330 08B4                      u410 0840  
                    u331 08B0                      u411 083C                      u340 08C8  
                    u420 0868                      u500 06A4                      u341 08C4  
                    u421 0864                      u501 06A0                      u350 08FA  
                    u510 06BA                      u430 062E                      u351 08F6  
                    u511 06B6                      u431 062A                      u360 0916  
                    u440 063C                      u361 0912                      u441 0638  
                    u370 092A                      u450 0652                      u371 0926  
                    u451 064E                      u380 09DC                      u460 0660  
                    u540 079E                      u381 09D8                      u461 065C  
                    u541 079A                      u390 0A16                      u470 0676  
                    u550 07B0                      u391 0A12                      u471 0672  
                    u551 07AC                      u480 0684                      u560 07CA  
                    u481 0680                      u561 07C6                      u490 0696  
                    u570 07E4                      u491 0692                      u571 07E0  
                    u627 0768                      u637 0782                      wreg 000FE8  
                   l1000 08C8                     l1002 08D4                     l1010 09CE  
                   l1004 08E2                     l1020 0808                     l1012 09DC  
                   l1100 0742                     l1006 08FA                     l1030 084A  
                   l1022 081E                     l1014 09EC                     l1110 074C  
                   l1102 0744                     l1032 0868                     l1024 0826  
                   l1016 09F6                     l1008 09BE                     l1040 060A  
                   l1120 075C                     l1112 074E                     l1104 0746  
                   l1034 0878                     l1026 0832                     l1018 07F8  
                   l1050 0676                     l1042 062E                     l1130 078E  
                   l1122 075E                     l1114 0750                     l1106 0748  
                   l1036 087A                     l1028 0840                     l1060 06BA  
                   l1044 063C                     l1140 07D2                     l1132 079E  
                   l1124 0774                     l1116 0754                     l1108 074A  
                   l1038 0884                     l1070 0722                     l1062 06BE  
                   l1054 0696                     l1046 0652                     l1142 07E4  
                   l1134 07B0                     l1126 0776                     l1118 0758  
                   l1080 0A7E                     l1072 0724                     l1064 0718  
                   l1056 06A4                     l1048 0660                     l1144 07E8  
                   l1136 07B8                     l1128 0778                     l1082 0A86  
                   l1074 0726                     l1066 071C                     l1058 06AC  
                   l1146 07EC                     l1138 07CA                     l1076 0728  
                   l1068 0720                     l1078 072A                     l1098 072E  
                   STR_1 0601                     i2l55 09B2                     _main 072E  
                   fsr2h 000FDA                     indf2 000FDF                     fsr2l 000FD9  
                   btemp 0031                     start 000E             ___param_bank 000000  
                  ?_main 0001          __end_of___lldiv 089C                    i2l120 0A3C  
                  i2l124 0A62                    _RCREG 000FAE                    _SPBRG 000FAF  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TXREG 000FAD      ___lmul@multiplicand 000D          __end_of_do_read 0A98  
                  tablat 000FF5                    ttemp5 0032                    ttemp6 0035  
                  ttemp7 0039                    status 000FD8                    wtemp8 0032  
        __initialization 0A64             __end_of_main 07F8                   ??_main 002B  
          __activetblptr 000001                   i2l1150 093E                   i2l1160 096E  
                 i2l1152 0940                   i2l1090 0A4A                   i2l1170 09AC  
                 i2l1162 0970                   i2l1154 094C                   i2l1092 0A52  
                 i2l1084 0A28                   i2l1164 0982                   i2l1156 095C  
                 i2l1172 09B0                   i2l1148 093A                   i2l1094 0A60  
                 i2l1086 0A28                   i2l1166 098A                   i2l1158 095E  
                 i2l1088 0A36                   i2l1168 099C                   _SPBRGH 000FB0  
       __end_of_do_write 0A96         __end_of_high_isr 09BE                   ___lmul 09BE  
              ??___lldiv 001D                   _buffer 002D                   _bufptr 0030  
              ??_do_read 0009             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization 0A6C            ___rparam_used 000001           __pcstackCOMRAM 0001  
     __size_of_do_finish 0016               _cmd_active 002F                  ?___lmul 0009  
         ___lmul@product 0011       __size_of_uart_getc 003C       __size_of_uart_init 0124  
     __size_of_uart_puts 0094                  i2u52_40 0A36                  i2u60_40 099C  
                i2u52_41 0A32                  i2u60_41 0998                  i2u53_40 0A4A  
                i2u61_40 09AC                  i2u53_41 0A46                  i2u61_41 09A8  
                i2u58_40 095C                  i2u58_41 0958                  i2u59_40 0982  
                i2u59_41 097E                ?_do_write 0001                ?_high_isr 0001  
      __end_of_do_finish 0A94                  __Hparam 0000                  __Lparam 0000  
        __size_of___lmul 006A                  ___lldiv 07F8             __psmallconst 0600  
                __pcinit 0A64                  __ramtop 0600                  _do_read 0A96  
                __ptext0 072E                  __ptext1 060A                  __ptext2 09BE  
                __ptext3 07F8                  __ptext4 0A94                  __ptext5 0A96  
                __ptext6 0A7E                  __ptext7 089C                  __ptext9 0A28  
             ??_do_write 0009               ??_high_isr 0005           __pintcode_body 0930  
   end_of_initialization 0A6C                  int_func 0930        __end_of_uart_getc 0A64  
      __end_of_uart_init 072E          ___lldiv@divisor 0019        __end_of_uart_puts 0930  
        ___lldiv@counter 0021                _RCSTAbits 000FAB               do_finish@s 000D  
              _PORTAbits 000F80                _TRISAbits 000F92                _TRISCbits 000F94  
              _TXSTAbits 000FAC           __end_of___lmul 0A28              _BAUDCONbits 000FB8  
    start_initialization 0A64                 ??___lmul 0011              __pbssCOMRAM 002D  
      __size_of_do_write 0002        __size_of_high_isr 09B6                __pintcode 0008  
              _do_finish 0A7E                 ?___lldiv 0015                 ?_do_read 0001  
            __smallconst 0600                 _IPR1bits 000F9F                 _PIE1bits 000F9D  
        uart_init@factor 002A                 _PIR1bits 000F9E                 _RCONbits 000FD0  
             uart_getc@c 0001                _uart_getc 0A28               ?_do_finish 0001  
              _uart_init 060A                _uart_puts 089C               uart_init@n 0026  
             uart_puts@p 000B               uart_puts@s 0009                high_isr@c 0008  
      ___lmul@multiplier 0009                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0600               ?_uart_getc 0001               ?_uart_init 0022  
             ?_uart_puts 0009         __size_of___lldiv 00A4         __size_of_do_read 0002  
     uart_init@baud_rate 0022                 _do_write 0A94                 _high_isr 0008  
          __size_of_main 00CA              ??_do_finish 000D                 int$flags 0031  
             _INTCONbits 000FF2                 intlevel2 0000         ___lldiv@dividend 0015  
            ??_uart_getc 0003              ??_uart_init 0026              ??_uart_puts 000B  
       ___lldiv@quotient 001D  
