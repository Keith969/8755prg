Microchip MPLAB XC8 Compiler V2.31

Linker command line:

-W-3 --edf=/Applications/microchip/xc8/v2.31/pic/dat/en_msgs.txt -cn \
  -h+dist/default/production/8755_PRG.X.production.sym \
  --cmf=dist/default/production/8755_PRG.X.production.cmf -z -Q18F4520 \
  -o/tmp/xcFpW75tG --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/8755_PRG.X.production.map -E1 -ver=XC8 Compiler \
  --acfsm=1493 -ASTACK=080h-05FFh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0600h-06FFhx122 \
  -AMEDIUMCONST=0600h-07FFFh -ACOMRAM=01h-07Fh -AABS1=00h-05FFh \
  -ABIGRAM=01h-05FFh -ARAM=080h-0FFh,0100h-01FFhx5 -ABANK0=080h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ASFR=0F80h-0FFFh \
  -ACONFIG=0300000h-030000Dh -AIDLOC=0200000h-0200007h \
  -AEEDATA=0F00000h-0F000FFh -peeprom_data=EEDATA \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init -pramtop=0600h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  /tmp/xc03EjG7F.o dist/default/production/8755_PRG.X.production.o 

Object code version is 3.11

Machine type is 18F4520



                Name                               Link     Load   Length Selector   Space Scale
/tmp/xc03EjG7F.o
                idloc                            200000   200000        8        0       5
                config                           300000   300000        E        0       4
                init                                  E        E        4        4       0
                reset_vec                             0        0        4        0       0
dist/default/production/8755_PRG.X.production.o
                intcode                               8        8        6        4       0
                idloc                            200000   200000        8        0       5
                config                           300000   300000        E        0       4
                temp                                 31       31        1        1       1
                smallconst                          600      600        A      300       0
                text9                               A28      A28       3C      305       0
                intcode_body                        930      930       8E      305       0
                text7                               89C      89C       94      305       0
                text6                               A7E      A7E       16      305       0
                text5                               A96      A96        2      305       0
                text4                               A94      A94        2      305       0
                text3                               7F8      7F8       A4      305       0
                text2                               9BE      9BE       6A      305       0
                text1                               60A      60A      124      305       0
                text0                               72E      72E       CA      305       0
                cstackCOMRAM                          1        1       2C        1       1
                bssCOMRAM                            2D       2D        4        1       1
                cinit                               A64      A64       1A      305       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8        6         0
                init                                  E        E        4         0
                reset_vec                             0        0        4         0
                text9                               A28      A28       3C         0
                intcode_body                        930      930       8E         0
                text7                               89C      89C       94         0
                text6                               A7E      A7E       16         0
                text5                               A96      A96        2         0
                text4                               A94      A94        2         0
                text3                               7F8      7F8       A4         0
                text2                               9BE      9BE       6A         0
                text1                               60A      60A      124         0
                text0                               72E      72E       CA         0
                cinit                               A64      A64       1A         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          600      600        A         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 31       31        1         1
                cstackCOMRAM                          1        1       2C         1
                bssCOMRAM                            2D       2D        4         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   CONFIG         
                config                           300000   300000        E         4

        CLASS   IDLOC          
                idloc                            200000   200000        8         5

        CLASS   EEDATA         

        CLASS   FARRAM         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                text1                          00060A  00048E  000A98       305       0  CODE    
                cstackCOMRAM                   000001  000031  000032         1       1  COMRAM  
                intcode                        000008  00000A  000012         4       0  CODE    
                smallconst                     000600  00000A  00060A       300       0  SMALLCON


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000080-0000FF               80
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BIGRAM           000032-0005FF              5CE
        CODE             000004-000007                4
                         000012-0005FF              5EE
                         000A98-007FFF             7568
        COMRAM           000032-00007F               4E
        CONST            000004-000007                4
                         000012-0005FF              5EE
                         000A98-007FFF             7568
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000A98-007FFF             7568
        RAM              000080-0005FF              100
        SFR              000F80-000FFF               80
        SMALLCONST       000A98-007FFF              100
        STACK            000080-0005FF              580

                                  Symbol Table

?___lldiv                cstackCOMRAM 000015
?___lmul                 cstackCOMRAM 000009
_BAUDCONbits             (abs)        000FB8
_INTCONbits              (abs)        000FF2
_IPR1bits                (abs)        000F9F
_PIE1bits                (abs)        000F9D
_PIR1bits                (abs)        000F9E
_PORTAbits               (abs)        000F80
_RCONbits                (abs)        000FD0
_RCREG                   (abs)        000FAE
_RCSTAbits               (abs)        000FAB
_SPBRG                   (abs)        000FAF
_SPBRGH                  (abs)        000FB0
_TRISAbits               (abs)        000F92
_TRISB                   (abs)        000F93
_TRISC                   (abs)        000F94
_TRISCbits               (abs)        000F94
_TRISD                   (abs)        000F95
_TXREG                   (abs)        000FAD
_TXSTAbits               (abs)        000FAC
__HRAM                   (abs)        000000
__Habs1                  abs1         000000
__Hbank0                 bank0        000000
__Hbank1                 bank1        000000
__Hbank2                 bank2        000000
__Hbank3                 bank3        000000
__Hbank4                 bank4        000000
__Hbank5                 bank5        000000
__Hbigbss                bigbss       000000
__Hbigdata               bigdata      000000
__Hbigram                bigram       000000
__Hbss                   bss          000000
__HbssCOMRAM             bssCOMRAM    000000
__Hcinit                 cinit        000000
__Hclrtext               clrtext      000000
__Hcomram                comram       000000
__Hconfig                config       30000E
__Hconst                 const        000000
__HcstackCOMRAM          cstackCOMRAM 000000
__Hdata                  data         000000
__Heeprom_data           eeprom_data  000000
__Hfarbss                farbss       000000
__Hfardata               fardata      000000
__Hibigdata              ibigdata     000000
__Hidata                 idata        000000
__Hidloc                 idloc        200008
__Hifardata              ifardata     000000
__Hinit                  init         000012
__Hintcode               intcode      00000E
__Hintcode_body          intcode_body 000000
__Hintcodelo             intcodelo    00000E
__Hintentry              intentry     000000
__Hintret                intret       000000
__Hintsave_regs          intsave_regs 000000
__Hirdata                irdata       000000
__Hmediumconst           mediumconst  000000
__HnvFARRAM              nvFARRAM     000000
__Hnvbit                 nvbit        000000
__Hnvrram                nvrram       000000
__Hparam                 rparam       000000
__Hpowerup               powerup      00000E
__Hram                   ram          000000
__Hramtop                ramtop       000600
__Hrbit                  rbit         000000
__Hrbss                  rbss         000000
__Hrdata                 rdata        000000
__Hreset_vec             reset_vec    000004
__Hrparam                rparam       000000
__Hsfr                   sfr          000000
__Hsmallconst            smallconst   00060A
__Hspace_0               (abs)        000A98
__Hspace_1               (abs)        000032
__Hspace_2               (abs)        000000
__Hspace_4               (abs)        60000E
__Hstack                 stack        000000
__Hstruct                struct       000000
__Htemp                  temp         000032
__Htext                  text         000000
__Htext0                 text0        000000
__Htext1                 text1        000000
__Htext2                 text2        000000
__Htext3                 text3        000000
__Htext4                 text4        000000
__Htext5                 text5        000000
__Htext6                 text6        000000
__Htext7                 text7        000000
__Htext9                 text9        000000
__LRAM                   (abs)        000001
__Labs1                  abs1         000000
__Lbank0                 bank0        000000
__Lbank1                 bank1        000000
__Lbank2                 bank2        000000
__Lbank3                 bank3        000000
__Lbank4                 bank4        000000
__Lbank5                 bank5        000000
__Lbigbss                bigbss       000000
__Lbigdata               bigdata      000000
__Lbigram                bigram       000000
__Lbss                   bss          000000
__LbssCOMRAM             bssCOMRAM    000000
__Lcinit                 cinit        000000
__Lclrtext               clrtext      000000
__Lcomram                comram       000000
__Lconfig                config       000000
__Lconst                 const        000000
__LcstackCOMRAM          cstackCOMRAM 000000
__Ldata                  data         000000
__Leeprom_data           eeprom_data  000000
__Lfarbss                farbss       000000
__Lfardata               fardata      000000
__Libigdata              ibigdata     000000
__Lidata                 idata        000000
__Lidloc                 idloc        000000
__Lifardata              ifardata     000000
__Linit                  init         00000E
__Lintcode               intcode      000008
__Lintcode_body          intcode_body 000000
__Lintcodelo             intcodelo    00000E
__Lintentry              intentry     000000
__Lintret                intret       000000
__Lintsave_regs          intsave_regs 000000
__Lirdata                irdata       000000
__Lmediumconst           mediumconst  000000
__LnvFARRAM              nvFARRAM     000000
__Lnvbit                 nvbit        000000
__Lnvrram                nvrram       000000
__Lparam                 rparam       000000
__Lpowerup               powerup      00000E
__Lram                   ram          000000
__Lramtop                ramtop       000600
__Lrbit                  rbit         000000
__Lrbss                  rbss         000000
__Lrdata                 rdata        000000
__Lreset_vec             reset_vec    000000
__Lrparam                rparam       000000
__Lsfr                   sfr          000000
__Lsmallconst            smallconst   000600
__Lspace_0               (abs)        000000
__Lspace_1               (abs)        000000
__Lspace_2               (abs)        000000
__Lspace_4               (abs)        000000
__Lstack                 stack        000000
__Lstruct                struct       000000
__Ltemp                  temp         000031
__Ltext                  text         000000
__Ltext0                 text0        000000
__Ltext1                 text1        000000
__Ltext2                 text2        000000
__Ltext3                 text3        000000
__Ltext4                 text4        000000
__Ltext5                 text5        000000
__Ltext6                 text6        000000
__Ltext7                 text7        000000
__Ltext9                 text9        000000
__S0                     (abs)        000A98
__S1                     (abs)        000032
__S2                     (abs)        000000
__S4                     (abs)        000000
__S5                     (abs)        000000
___inthi_sp              stack        000000
___intlo_sp              stack        000000
___lldiv                 text3        0007F8
___lldiv@counter         cstackCOMRAM 000021
___lldiv@dividend        cstackCOMRAM 000015
___lldiv@divisor         cstackCOMRAM 000019
___lldiv@quotient        cstackCOMRAM 00001D
___lmul                  text2        0009BE
___lmul@multiplicand     cstackCOMRAM 00000D
___lmul@multiplier       cstackCOMRAM 000009
___lmul@product          cstackCOMRAM 000011
___param_bank            (abs)        000000
___rparam_used           (abs)        000001
___sp                    stack        000000
__accesstop              (abs)        000080
__activetblptr           (abs)        000001
__end_of___lldiv         text3        00089C
__end_of___lmul          text2        000A28
__end_of__initialization cinit        000A6C
__end_of_do_finish       text6        000A94
__end_of_do_read         text5        000A98
__end_of_do_write        text4        000A96
__end_of_high_isr        intcode_body 0009BE
__end_of_main            text0        0007F8
__end_of_uart_getc       text9        000A64
__end_of_uart_init       text1        00072E
__end_of_uart_puts       text7        000930
__initialization         cinit        000A64
__mediumconst            mediumconst  000000
__pbssCOMRAM             bssCOMRAM    00002D
__pcinit                 cinit        000A64
__pcstackCOMRAM          cstackCOMRAM 000001
__pintcode               intcode      000008
__pintcode_body          intcode_body 000930
__psmallconst            smallconst   000600
__ptext0                 text0        00072E
__ptext1                 text1        00060A
__ptext2                 text2        0009BE
__ptext3                 text3        0007F8
__ptext4                 text4        000A94
__ptext5                 text5        000A96
__ptext6                 text6        000A7E
__ptext7                 text7        00089C
__ptext9                 text9        000A28
__ramtop                 ramtop       000600
__size_of___lldiv        (abs)        000000
__size_of___lmul         (abs)        000000
__size_of_do_finish      (abs)        000000
__size_of_do_read        (abs)        000000
__size_of_do_write       (abs)        000000
__size_of_high_isr       (abs)        000000
__size_of_main           (abs)        000000
__size_of_uart_getc      (abs)        000000
__size_of_uart_init      (abs)        000000
__size_of_uart_puts      (abs)        000000
__smallconst             smallconst   000600
_buffer                  bssCOMRAM    00002D
_bufptr                  bssCOMRAM    000030
_cmd_active              bssCOMRAM    00002F
_do_finish               text6        000A7E
_do_read                 text5        000A96
_do_write                text4        000A94
_high_isr                intcode      000008
_main                    text0        00072E
_uart_getc               text9        000A28
_uart_init               text1        00060A
_uart_puts               text7        00089C
btemp                    temp         000031
do_finish@s              cstackCOMRAM 00000D
end_of_initialization    cinit        000A6C
high_isr@c               cstackCOMRAM 000008
int$flags                temp         000031
int_func                 intcode_body 000930
intlevel0                text         000000
intlevel1                text         000000
intlevel2                text         000000
intlevel3                text         000000
stackhi                  (abs)        0005FF
stacklo                  (abs)        000080
start                    init         00000E
start_initialization     cinit        000A64
ttemp5                   temp         000032
ttemp6                   temp         000035
ttemp7                   temp         000039
uart_getc@c              cstackCOMRAM 000001
uart_init@baud_rate      cstackCOMRAM 000022
uart_init@factor         cstackCOMRAM 00002A
uart_init@n              cstackCOMRAM 000026
uart_puts@p              cstackCOMRAM 00000B
uart_puts@s              cstackCOMRAM 000009
wtemp8                   temp         000032


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 45 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_do_finish
		_do_read
		_do_write
		_uart_init
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _uart_init *****************
 Defined at:
		line 21 in file "uart.c"
 Parameters:    Size  Location     Type
  baud_rate       4   33[COMRAM] const unsigned long 
 Auto vars:     Size  Location     Type
  n               4   37[COMRAM] unsigned long 
  factor          1   41[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___lldiv
		___lmul
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 15 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4    8[COMRAM] unsigned long 
  multiplicand    4   12[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
  product         4   16[COMRAM] unsigned long 
 Return value:  Size  Location     Type
                  4    8[COMRAM] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         8       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_uart_init
 This function uses a non-reentrant model


 *************** function ___lldiv *****************
 Defined at:
		line 7 in file "/Applications/microchip/xc8/v2.31/pic/sources/c99/common/__lldiv.c"
 Parameters:    Size  Location     Type
  dividend        4   20[COMRAM] unsigned long 
  divisor         4   24[COMRAM] unsigned long 
 Auto vars:     Size  Location     Type
  quotient        4   28[COMRAM] unsigned long 
  counter         1   32[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4   20[COMRAM] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         8       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        13       0       0       0       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_uart_init
 This function uses a non-reentrant model


 *************** function _do_write *****************
 Defined at:
		line 139 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _do_read *****************
 Defined at:
		line 134 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _do_finish *****************
 Defined at:
		line 128 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  s               2   12[COMRAM] PTR unsigned char 
		 -> STR_1(8), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_uart_puts
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _uart_puts *****************
 Defined at:
		line 139 in file "uart.c"
 Parameters:    Size  Location     Type
  s               2    8[COMRAM] PTR unsigned char 
		 -> STR_1(8), 
 Auto vars:     Size  Location     Type
  p               2   10[COMRAM] PTR unsigned char 
		 -> STR_1(8), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_do_finish
 This function uses a non-reentrant model


 *************** function _high_isr *****************
 Defined at:
		line 97 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  c               1    7[COMRAM] unsigned char 
  ok              1    0        _Bool 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_uart_getc
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _uart_getc *****************
 Defined at:
		line 115 in file "uart.c"
 Parameters:    Size  Location     Type
  c               2    0[COMRAM] PTR unsigned char 
		 -> high_isr@c(1), 
 Auto vars:     Size  Location     Type
  er              1    0        unsigned char 
  ok              1    0        _Bool 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         2       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         4       0       0       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_high_isr
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
/Applications/microchip/xc8/v2.31/pic/sources/c99/common/Umul32.c
		___lmul        		CODE           	09BE	0000	106

/Applications/microchip/xc8/v2.31/pic/sources/c99/common/Umul32.c estimated size: 106

uart.c
		_uart_init     		CODE           	060A	0000	292
		_uart_getc     		CODE           	0A28	0000	60
		_uart_puts     		CODE           	089C	0000	148

uart.c estimated size: 500

shared
		__initialization		CODE           	0A64	0000	8

shared estimated size: 8

/Applications/microchip/xc8/v2.31/pic/sources/c99/common/__lldiv.c
		___lldiv       		CODE           	07F8	0000	164

/Applications/microchip/xc8/v2.31/pic/sources/c99/common/__lldiv.c estimated size: 164

main.c
		_main          		CODE           	072E	0000	202
		_do_write      		CODE           	0A94	0000	2
		_high_isr      		CODE           	0008	0000	148
		_do_finish     		CODE           	0A7E	0000	22
		_do_read       		CODE           	0A96	0000	2

main.c estimated size: 376

