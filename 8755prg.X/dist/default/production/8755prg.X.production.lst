

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Feb  9 12:21:22 2025

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55   000000                     
    56                           ; Generated 17/10/2023 GMT
    57                           ; 
    58                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F4520 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000000                     
    91                           	psect	idataCOMRAM
    92   0016A4                     __pidataCOMRAM:
    93                           	callstack 0
    94                           
    95                           ;initializer for _tail
    96   0016A4  03FF               	dw	1023
    97   000000                     _RCREG	set	4014
    98   000000                     _TXREG	set	4013
    99   000000                     _PIR1bits	set	3998
   100   000000                     _IPR1bits	set	3999
   101   000000                     _SPBRG	set	4015
   102   000000                     _SPBRGH	set	4016
   103   000000                     _TXSTAbits	set	4012
   104   000000                     _RCSTAbits	set	4011
   105   000000                     _BAUDCONbits	set	4024
   106   000000                     _PORTCbits	set	3970
   107   000000                     _PORTD	set	3971
   108   000000                     _PORTBbits	set	3969
   109   000000                     _TRISB	set	3987
   110   000000                     _TRISC	set	3988
   111   000000                     _TRISD	set	3989
   112   000000                     _PORTEbits	set	3972
   113   000000                     _ADCON1	set	4033
   114   000000                     _ADCON0bits	set	4034
   115   000000                     _TRISEbits	set	3990
   116   000000                     _PORTAbits	set	3968
   117   000000                     _TRISCbits	set	3988
   118   000000                     _PIE1bits	set	3997
   119   000000                     _INTCONbits	set	4082
   120   000000                     _RCONbits	set	4048
   121   000000                     _TRISAbits	set	3986
   122                           
   123                           	psect	smallconst
   124   000600                     __psmallconst:
   125                           	callstack 0
   126   000600  00                 	db	0
   127   000601                     STR_10:
   128   000601  77                 	db	119	;'w'
   129   000602  72                 	db	114	;'r'
   130   000603  69                 	db	105	;'i'
   131   000604  74                 	db	116	;'t'
   132   000605  65                 	db	101	;'e'
   133   000606  20                 	db	32
   134   000607  76                 	db	118	;'v'
   135   000608  65                 	db	101	;'e'
   136   000609  72                 	db	114	;'r'
   137   00060A  69                 	db	105	;'i'
   138   00060B  66                 	db	102	;'f'
   139   00060C  79                 	db	121	;'y'
   140   00060D  20                 	db	32
   141   00060E  66                 	db	102	;'f'
   142   00060F  61                 	db	97	;'a'
   143   000610  69                 	db	105	;'i'
   144   000611  6C                 	db	108	;'l'
   145   000612  2C                 	db	44
   146   000613  20                 	db	32
   147   000614  77                 	db	119	;'w'
   148   000615  72                 	db	114	;'r'
   149   000616  69                 	db	105	;'i'
   150   000617  74                 	db	116	;'t'
   151   000618  65                 	db	101	;'e'
   152   000619  3D                 	db	61	;'='
   153   00061A  25                 	db	37
   154   00061B  30                 	db	48	;'0'
   155   00061C  32                 	db	50	;'2'
   156   00061D  78                 	db	120	;'x'
   157   00061E  2C                 	db	44
   158   00061F  20                 	db	32
   159   000620  72                 	db	114	;'r'
   160   000621  65                 	db	101	;'e'
   161   000622  61                 	db	97	;'a'
   162   000623  64                 	db	100	;'d'
   163   000624  3D                 	db	61	;'='
   164   000625  25                 	db	37
   165   000626  30                 	db	48	;'0'
   166   000627  32                 	db	50	;'2'
   167   000628  78                 	db	120	;'x'
   168   000629  0A                 	db	10
   169   00062A  00                 	db	0
   170   00062B                     STR_2:
   171   00062B  42                 	db	66	;'B'
   172   00062C  6C                 	db	108	;'l'
   173   00062D  61                 	db	97	;'a'
   174   00062E  6E                 	db	110	;'n'
   175   00062F  6B                 	db	107	;'k'
   176   000630  20                 	db	32
   177   000631  63                 	db	99	;'c'
   178   000632  68                 	db	104	;'h'
   179   000633  65                 	db	101	;'e'
   180   000634  63                 	db	99	;'c'
   181   000635  6B                 	db	107	;'k'
   182   000636  20                 	db	32
   183   000637  66                 	db	102	;'f'
   184   000638  61                 	db	97	;'a'
   185   000639  69                 	db	105	;'i'
   186   00063A  6C                 	db	108	;'l'
   187   00063B  20                 	db	32
   188   00063C  61                 	db	97	;'a'
   189   00063D  74                 	db	116	;'t'
   190   00063E  20                 	db	32
   191   00063F  61                 	db	97	;'a'
   192   000640  64                 	db	100	;'d'
   193   000641  64                 	db	100	;'d'
   194   000642  72                 	db	114	;'r'
   195   000643  65                 	db	101	;'e'
   196   000644  73                 	db	115	;'s'
   197   000645  73                 	db	115	;'s'
   198   000646  20                 	db	32
   199   000647  00                 	db	0
   200   000648                     STR_11:
   201   000648  77                 	db	119	;'w'
   202   000649  72                 	db	114	;'r'
   203   00064A  69                 	db	105	;'i'
   204   00064B  74                 	db	116	;'t'
   205   00064C  65                 	db	101	;'e'
   206   00064D  20                 	db	32
   207   00064E  63                 	db	99	;'c'
   208   00064F  6F                 	db	111	;'o'
   209   000650  6D                 	db	109	;'m'
   210   000651  70                 	db	112	;'p'
   211   000652  6C                 	db	108	;'l'
   212   000653  65                 	db	101	;'e'
   213   000654  74                 	db	116	;'t'
   214   000655  65                 	db	101	;'e'
   215   000656  64                 	db	100	;'d'
   216   000657  20                 	db	32
   217   000658  26                 	db	38
   218   000659  20                 	db	32
   219   00065A  76                 	db	118	;'v'
   220   00065B  65                 	db	101	;'e'
   221   00065C  72                 	db	114	;'r'
   222   00065D  69                 	db	105	;'i'
   223   00065E  66                 	db	102	;'f'
   224   00065F  69                 	db	105	;'i'
   225   000660  65                 	db	101	;'e'
   226   000661  64                 	db	100	;'d'
   227   000662  0A                 	db	10
   228   000663  00                 	db	0
   229   000664                     STR_5:
   230   000664  50                 	db	80	;'P'
   231   000665  61                 	db	97	;'a'
   232   000666  73                 	db	115	;'s'
   233   000667  73                 	db	115	;'s'
   234   000668  65                 	db	101	;'e'
   235   000669  64                 	db	100	;'d'
   236   00066A  20                 	db	32
   237   00066B  62                 	db	98	;'b'
   238   00066C  6C                 	db	108	;'l'
   239   00066D  61                 	db	97	;'a'
   240   00066E  6E                 	db	110	;'n'
   241   00066F  6B                 	db	107	;'k'
   242   000670  20                 	db	32
   243   000671  63                 	db	99	;'c'
   244   000672  68                 	db	104	;'h'
   245   000673  65                 	db	101	;'e'
   246   000674  63                 	db	99	;'c'
   247   000675  6B                 	db	107	;'k'
   248   000676  0A                 	db	10
   249   000677  00                 	db	0
   250   000678                     STR_9:
   251   000678  57                 	db	87	;'W'
   252   000679  72                 	db	114	;'r'
   253   00067A  69                 	db	105	;'i'
   254   00067B  74                 	db	116	;'t'
   255   00067C  65                 	db	101	;'e'
   256   00067D  20                 	db	32
   257   00067E  61                 	db	97	;'a'
   258   00067F  62                 	db	98	;'b'
   259   000680  6F                 	db	111	;'o'
   260   000681  72                 	db	114	;'r'
   261   000682  74                 	db	116	;'t'
   262   000683  65                 	db	101	;'e'
   263   000684  64                 	db	100	;'d'
   264   000685  0A                 	db	10
   265   000686  00                 	db	0
   266   000687                     STR_1:
   267   000687  43                 	db	67	;'C'
   268   000688  68                 	db	104	;'h'
   269   000689  65                 	db	101	;'e'
   270   00068A  63                 	db	99	;'c'
   271   00068B  6B                 	db	107	;'k'
   272   00068C  20                 	db	32
   273   00068D  61                 	db	97	;'a'
   274   00068E  62                 	db	98	;'b'
   275   00068F  6F                 	db	111	;'o'
   276   000690  72                 	db	114	;'r'
   277   000691  74                 	db	116	;'t'
   278   000692  65                 	db	101	;'e'
   279   000693  64                 	db	100	;'d'
   280   000694  0A                 	db	10
   281   000695  00                 	db	0
   282   000696                     STR_6:
   283   000696  52                 	db	82	;'R'
   284   000697  65                 	db	101	;'e'
   285   000698  61                 	db	97	;'a'
   286   000699  64                 	db	100	;'d'
   287   00069A  20                 	db	32
   288   00069B  61                 	db	97	;'a'
   289   00069C  62                 	db	98	;'b'
   290   00069D  6F                 	db	111	;'o'
   291   00069E  72                 	db	114	;'r'
   292   00069F  74                 	db	116	;'t'
   293   0006A0  65                 	db	101	;'e'
   294   0006A1  64                 	db	100	;'d'
   295   0006A2  0A                 	db	10
   296   0006A3  00                 	db	0
   297   0006A4                     STR_3:
   298   0006A4  30                 	db	48	;'0'
   299   0006A5  78                 	db	120	;'x'
   300   0006A6  25                 	db	37
   301   0006A7  30                 	db	48	;'0'
   302   0006A8  34                 	db	52	;'4'
   303   0006A9  78                 	db	120	;'x'
   304   0006AA  20                 	db	32
   305   0006AB  3D                 	db	61	;'='
   306   0006AC  20                 	db	32
   307   0006AD  00                 	db	0
   308   0006AE                     STR_4:
   309   0006AE  30                 	db	48	;'0'
   310   0006AF  78                 	db	120	;'x'
   311   0006B0  25                 	db	37
   312   0006B1  30                 	db	48	;'0'
   313   0006B2  32                 	db	50	;'2'
   314   0006B3  78                 	db	120	;'x'
   315   0006B4  0A                 	db	10
   316   0006B5  00                 	db	0
   317   0006B6                     STR_7:
   318   0006B6  25                 	db	37
   319   0006B7  30                 	db	48	;'0'
   320   0006B8  34                 	db	52	;'4'
   321   0006B9  78                 	db	120	;'x'
   322   0006BA  3A                 	db	58	;':'
   323   0006BB  20                 	db	32
   324   0006BC  00                 	db	0
   325   0006BD                     STR_8:
   326   0006BD  25                 	db	37
   327   0006BE  30                 	db	48	;'0'
   328   0006BF  32                 	db	50	;'2'
   329   0006C0  78                 	db	120	;'x'
   330   0006C1  00                 	db	0
   331   0006C2  00                 	db	0	; dummy byte at the end
   332   000000                     
   333                           ; #config settings
   334                           
   335                           	psect	cinit
   336   001272                     __pcinit:
   337                           	callstack 0
   338   001272                     start_initialization:
   339                           	callstack 0
   340   001272                     __initialization:
   341                           	callstack 0
   342                           
   343                           ; Initialize objects allocated to COMRAM (2 bytes)
   344                           ; load TBLPTR registers with __pidataCOMRAM
   345   001272  0EA4               	movlw	low __pidataCOMRAM
   346   001274  6EF6               	movwf	tblptrl,c
   347   001276  0E16               	movlw	high __pidataCOMRAM
   348   001278  6EF7               	movwf	tblptrh,c
   349   00127A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   350   00127C  6EF8               	movwf	tblptru,c
   351   00127E  0009               	tblrd		*+	;fetch initializer
   352   001280  CFF5 F06F          	movff	tablat,__pdataCOMRAM
   353   001284  0009               	tblrd		*+	;fetch initializer
   354   001286  CFF5 F070          	movff	tablat,__pdataCOMRAM+1
   355                           
   356                           ; Clear objects allocated to BIGRAM (1024 bytes)
   357   00128A  EE00  F0DA         	lfsr	0,__pbssBIGRAM
   358   00128E  EE14 F000          	lfsr	1,1024
   359   001292                     clear_0:
   360   001292  6AEE               	clrf	postinc0,c
   361   001294  50E5               	movf	postdec1,w,c
   362   001296  50E1               	movf	fsr1l,w,c
   363   001298  E1FC               	bnz	clear_0
   364   00129A  50E2               	movf	fsr1h,w,c
   365   00129C  E1FA               	bnz	clear_0
   366                           
   367                           ; Clear objects allocated to BANK0 (34 bytes)
   368   00129E  EE00  F0B8         	lfsr	0,__pbssBANK0
   369   0012A2  0E22               	movlw	34
   370   0012A4                     clear_1:
   371   0012A4  6AEE               	clrf	postinc0,c
   372   0012A6  06E8               	decf	wreg,f,c
   373   0012A8  E1FD               	bnz	clear_1
   374                           
   375                           ; Clear objects allocated to COMRAM (10 bytes)
   376   0012AA  EE00  F065         	lfsr	0,__pbssCOMRAM
   377   0012AE  0E0A               	movlw	10
   378   0012B0                     clear_2:
   379   0012B0  6AEE               	clrf	postinc0,c
   380   0012B2  06E8               	decf	wreg,f,c
   381   0012B4  E1FD               	bnz	clear_2
   382   0012B6                     end_of_initialization:
   383                           	callstack 0
   384   0012B6                     __end_of__initialization:
   385                           	callstack 0
   386   0012B6  9071               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   387   0012B8  9271               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   388   0012BA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   389   0012BC  6EF8               	movwf	tblptru,c
   390   0012BE  0100               	movlb	0
   391   0012C0  EF74  F006         	goto	_main	;jump to C main() function
   392                           
   393                           	psect	bssCOMRAM
   394   000065                     __pbssCOMRAM:
   395                           	callstack 0
   396   000065                     _width:
   397                           	callstack 0
   398   000065                     	ds	2
   399   000067                     _bytes_popped:
   400                           	callstack 0
   401   000067                     	ds	2
   402   000069                     _bytes_pushed:
   403                           	callstack 0
   404   000069                     	ds	2
   405   00006B                     _head:
   406                           	callstack 0
   407   00006B                     	ds	2
   408   00006D                     _flags:
   409                           	callstack 0
   410   00006D                     	ds	1
   411   00006E                     _cmd_active:
   412                           	callstack 0
   413   00006E                     	ds	1
   414                           
   415                           	psect	dataCOMRAM
   416   00006F                     __pdataCOMRAM:
   417                           	callstack 0
   418   00006F                     _tail:
   419                           	callstack 0
   420   00006F                     	ds	2
   421                           
   422                           	psect	bssBANK0
   423   0000B8                     __pbssBANK0:
   424                           	callstack 0
   425   0000B8                     _prec:
   426                           	callstack 0
   427   0000B8                     	ds	2
   428   0000BA                     _dbuf:
   429                           	callstack 0
   430   0000BA                     	ds	32
   431                           
   432                           	psect	bssBIGRAM
   433   0000DA                     __pbssBIGRAM:
   434                           	callstack 0
   435   0000DA                     _queue:
   436                           	callstack 0
   437   0000DA                     	ds	1024
   438                           
   439                           	psect	cstackBANK0
   440   000080                     __pcstackBANK0:
   441                           	callstack 0
   442   000080                     do_blank@ads:
   443                           	callstack 0
   444   000080                     do_write@ads:
   445                           	callstack 0
   446                           
   447                           ; 48 bytes @ 0x0
   448   000080                     	ds	32
   449   0000A0                     do_blank@ok:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0x20
   453   0000A0                     	ds	1
   454   0000A1                     do_blank@data:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x21
   458   0000A1                     	ds	1
   459   0000A2                     do_blank@s:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x22
   463   0000A2                     	ds	1
   464   0000A3                     do_blank@addr:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x23
   468   0000A3                     	ds	13
   469   0000B0                     do_write@s:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x30
   473   0000B0                     	ds	1
   474   0000B1                     do_write@lo:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x31
   478   0000B1                     	ds	1
   479   0000B2                     do_write@hi:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x32
   483   0000B2                     	ds	1
   484   0000B3                     do_write@read:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x33
   488   0000B3                     	ds	1
   489   0000B4                     do_write@c:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x34
   493   0000B4                     	ds	1
   494   0000B5                     do_write@data:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0x35
   498   0000B5                     	ds	1
   499   0000B6                     do_write@addr:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x36
   503   0000B6                     	ds	2
   504                           
   505                           	psect	cstackCOMRAM
   506   000001                     __pcstackCOMRAM:
   507                           	callstack 0
   508   000001                     ?i2_addone:
   509                           	callstack 0
   510   000001                     setCTS@b:
   511                           	callstack 0
   512   000001                     uart_getc@c:
   513                           	callstack 0
   514   000001                     i2addone@i:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x0
   518   000001                     	ds	1
   519   000002                     uart_getc@ok:
   520                           	callstack 0
   521                           
   522                           ; 1 bytes @ 0x1
   523   000002                     	ds	1
   524   000003                     ?_size:
   525                           	callstack 0
   526   000003                     _push$2047:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x2
   530   000003                     	ds	2
   531   000005                     push@c:
   532                           	callstack 0
   533   000005                     size@s:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x4
   537   000005                     	ds	2
   538   000007                     ??_high_isr:
   539                           
   540                           ; 1 bytes @ 0x6
   541   000007                     	ds	2
   542   000009                     high_isr@n:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x8
   546   000009                     	ds	2
   547   00000B                     high_isr@ok:
   548                           	callstack 0
   549                           
   550                           ; 1 bytes @ 0xA
   551   00000B                     	ds	1
   552   00000C                     high_isr@c:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0xB
   556   00000C                     	ds	1
   557   00000D                     ??_write_port:
   558   00000D                     ?_addone:
   559                           	callstack 0
   560   00000D                     ?___wmul:
   561                           	callstack 0
   562   00000D                     ?___lmul:
   563                           	callstack 0
   564   00000D                     charToHexDigit@c:
   565                           	callstack 0
   566   00000D                     read_port@data:
   567                           	callstack 0
   568   00000D                     uart_putc@c:
   569                           	callstack 0
   570   00000D                     addone@i:
   571                           	callstack 0
   572   00000D                     setup_address@addr:
   573                           	callstack 0
   574   00000D                     uart_puts@s:
   575                           	callstack 0
   576   00000D                     ___wmul@multiplier:
   577                           	callstack 0
   578   00000D                     memset@dest:
   579                           	callstack 0
   580   00000D                     fputc@c:
   581                           	callstack 0
   582   00000D                     ___lmul@multiplier:
   583                           	callstack 0
   584                           
   585                           ; 4 bytes @ 0xC
   586   00000D                     	ds	2
   587   00000F                     ??_setup_address:
   588   00000F                     pop@c:
   589                           	callstack 0
   590   00000F                     write_port@data:
   591                           	callstack 0
   592   00000F                     fputc@fp:
   593                           	callstack 0
   594   00000F                     uart_puts@p:
   595                           	callstack 0
   596   00000F                     ___wmul@multiplicand:
   597                           	callstack 0
   598   00000F                     memset@c:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0xE
   602   00000F                     	ds	1
   603   000010                     ??_fputc:
   604   000010                     setup_address@hi:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0xF
   608   000010                     	ds	1
   609   000011                     ___wmul@product:
   610                           	callstack 0
   611   000011                     memset@n:
   612                           	callstack 0
   613   000011                     ___lmul@multiplicand:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x10
   617   000011                     	ds	2
   618   000013                     ?_read_prec_or_width:
   619                           	callstack 0
   620   000013                     read_prec_or_width@fmt:
   621                           	callstack 0
   622   000013                     memset@p:
   623                           	callstack 0
   624                           
   625                           ; 2 bytes @ 0x12
   626   000013                     	ds	1
   627   000014                     read_prec_or_width@ap:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0x13
   631   000014                     	ds	1
   632   000015                     read_prec_or_width@c:
   633                           	callstack 0
   634   000015                     fputs@s:
   635                           	callstack 0
   636   000015                     ___lmul@product:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0x14
   640   000015                     	ds	1
   641   000016                     fputs@fp:
   642                           	callstack 0
   643   000016                     read_prec_or_width@n:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x15
   647   000016                     	ds	1
   648   000017                     fputs@c:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x16
   652   000017                     	ds	1
   653   000018                     fputs@i:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x17
   657   000018                     	ds	1
   658   000019                     ?___lldiv:
   659                           	callstack 0
   660   000019                     ___lldiv@dividend:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0x18
   664   000019                     	ds	1
   665   00001A                     pad@fp:
   666                           	callstack 0
   667                           
   668                           ; 1 bytes @ 0x19
   669   00001A                     	ds	1
   670   00001B                     pad@buf:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x1A
   674   00001B                     	ds	1
   675   00001C                     pad@p:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x1B
   679   00001C                     	ds	1
   680   00001D                     ___lldiv@divisor:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x1C
   684   00001D                     	ds	1
   685   00001E                     ??_pad:
   686                           
   687                           ; 1 bytes @ 0x1D
   688   00001E                     	ds	1
   689   00001F                     pad@i:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x1E
   693   00001F                     	ds	2
   694   000021                     xtoa@fp:
   695                           	callstack 0
   696   000021                     ___lldiv@quotient:
   697                           	callstack 0
   698                           
   699                           ; 4 bytes @ 0x20
   700   000021                     	ds	1
   701   000022                     xtoa@d:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x21
   705   000022                     	ds	2
   706   000024                     ??_xtoa:
   707                           
   708                           ; 1 bytes @ 0x23
   709   000024                     	ds	1
   710   000025                     ___lldiv@counter:
   711                           	callstack 0
   712                           
   713                           ; 1 bytes @ 0x24
   714   000025                     	ds	1
   715   000026                     uart_init@baud_rate:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x25
   719   000026                     	ds	1
   720   000027                     xtoa@p:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0x26
   724   000027                     	ds	1
   725   000028                     xtoa@w:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x27
   729   000028                     	ds	2
   730   00002A                     xtoa@c:
   731                           	callstack 0
   732   00002A                     uart_init@n:
   733                           	callstack 0
   734                           
   735                           ; 4 bytes @ 0x29
   736   00002A                     	ds	1
   737   00002B                     xtoa@i:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x2A
   741   00002B                     	ds	2
   742   00002D                     vfpfcnvrt@fp:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x2C
   746   00002D                     	ds	1
   747   00002E                     uart_init@factor:
   748                           	callstack 0
   749   00002E                     vfpfcnvrt@fmt:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0x2D
   753   00002E                     	ds	1
   754   00002F                     vfpfcnvrt@ap:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0x2E
   758   00002F                     	ds	1
   759   000030                     vfpfcnvrt@convarg:
   760                           	callstack 0
   761                           
   762                           ; 4 bytes @ 0x2F
   763   000030                     	ds	4
   764   000034                     vfpfcnvrt@done:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x33
   768   000034                     	ds	1
   769   000035                     vfpfcnvrt@cp:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0x34
   773   000035                     	ds	1
   774   000036                     ?_vfprintf:
   775                           	callstack 0
   776   000036                     vfprintf@fp:
   777                           	callstack 0
   778                           
   779                           ; 1 bytes @ 0x35
   780   000036                     	ds	1
   781   000037                     vfprintf@fmt:
   782                           	callstack 0
   783                           
   784                           ; 1 bytes @ 0x36
   785   000037                     	ds	1
   786   000038                     vfprintf@ap:
   787                           	callstack 0
   788                           
   789                           ; 1 bytes @ 0x37
   790   000038                     	ds	1
   791   000039                     vfprintf@cfmt:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x38
   795   000039                     	ds	1
   796   00003A                     ?_sprintf:
   797                           	callstack 0
   798   00003A                     sprintf@s:
   799                           	callstack 0
   800                           
   801                           ; 1 bytes @ 0x39
   802   00003A                     	ds	1
   803   00003B                     sprintf@fmt:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0x3A
   807   00003B                     	ds	5
   808   000040                     sprintf@ap:
   809                           	callstack 0
   810                           
   811                           ; 1 bytes @ 0x3F
   812   000040                     	ds	1
   813   000041                     sprintf@f:
   814                           	callstack 0
   815                           
   816                           ; 12 bytes @ 0x40
   817   000041                     	ds	12
   818   00004D                     do_read@ads:
   819                           	callstack 0
   820                           
   821                           ; 16 bytes @ 0x4C
   822   00004D                     	ds	16
   823   00005D                     do_read@s:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x5C
   827   00005D                     	ds	1
   828   00005E                     do_read@data:
   829                           	callstack 0
   830                           
   831                           ; 1 bytes @ 0x5D
   832   00005E                     	ds	1
   833   00005F                     do_read@col:
   834                           	callstack 0
   835                           
   836                           ; 1 bytes @ 0x5E
   837   00005F                     	ds	1
   838   000060                     do_read@addr:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x5F
   842   000060                     	ds	2
   843   000062                     ??_main:
   844                           
   845                           ; 1 bytes @ 0x61
   846   000062                     	ds	2
   847   000064                     main@cmd:
   848                           	callstack 0
   849                           
   850                           ; 1 bytes @ 0x63
   851   000064                     	ds	1
   852                           
   853 ;;
   854 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   855 ;;
   856 ;; *************** function _main *****************
   857 ;; Defined at:
   858 ;;		line 496 in file "main.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  cmd             1   99[COMRAM] unsigned char 
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   872 ;;      Params:         0       0       0       0       0       0       0
   873 ;;      Locals:         1       0       0       0       0       0       0
   874 ;;      Temps:          2       0       0       0       0       0       0
   875 ;;      Totals:         3       0       0       0       0       0       0
   876 ;;Total ram usage:        3 bytes
   877 ;; Hardware stack levels required when called: 12
   878 ;; This function calls:
   879 ;;		_do_blank
   880 ;;		_do_read
   881 ;;		_do_write
   882 ;;		_makenull
   883 ;;		_pop
   884 ;;		_ports_init
   885 ;;		_uart_init
   886 ;; This function is called by:
   887 ;;		Startup code after reset
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           	psect	text0
   892   000CE8                     __ptext0:
   893                           	callstack 0
   894   000CE8                     _main:
   895                           	callstack 19
   896   000CE8                     
   897                           ;main.c: 499:     uart_init(115200);
   898   000CE8  0E00               	movlw	0
   899   000CEA  6E26               	movwf	uart_init@baud_rate^0,c
   900   000CEC  0EC2               	movlw	194
   901   000CEE  6E27               	movwf	(uart_init@baud_rate+1)^0,c
   902   000CF0  0E01               	movlw	1
   903   000CF2  6E28               	movwf	(uart_init@baud_rate+2)^0,c
   904   000CF4  0E00               	movlw	0
   905   000CF6  6E29               	movwf	(uart_init@baud_rate+3)^0,c
   906   000CF8  EC10  F004         	call	_uart_init	;wreg free
   907   000CFC                     
   908                           ;main.c: 502:     ports_init();
   909   000CFC  EC1B  F00B         	call	_ports_init	;wreg free
   910   000D00                     l2707:
   911                           
   912                           ;main.c: 507:         PORTEbits.RE0 = 1;
   913   000D00  8084               	bsf	132,0,c	;volatile
   914   000D02                     
   915                           ;main.c: 508:         _delay((unsigned long)((250)*(20000000/4000.0)));
   916   000D02  0E07               	movlw	7
   917   000D04  6E63               	movwf	(??_main+1)^0,c
   918   000D06  0E58               	movlw	88
   919   000D08  6E62               	movwf	??_main^0,c
   920   000D0A  0E5A               	movlw	90
   921   000D0C                     u1937:
   922   000D0C  2EE8               	decfsz	wreg,f,c
   923   000D0E  D7FE               	bra	u1937
   924   000D10  2E62               	decfsz	??_main^0,f,c
   925   000D12  D7FC               	bra	u1937
   926   000D14  2E63               	decfsz	(??_main+1)^0,f,c
   927   000D16  D7FA               	bra	u1937
   928   000D18                     
   929                           ;main.c: 509:         PORTEbits.RE0 = 0;
   930   000D18  9084               	bcf	132,0,c	;volatile
   931   000D1A                     
   932                           ;main.c: 510:         PORTEbits.RE1 = 0;
   933   000D1A  9284               	bcf	132,1,c	;volatile
   934   000D1C                     
   935                           ;main.c: 511:         PORTEbits.RE2 = 0;
   936   000D1C  9484               	bcf	132,2,c	;volatile
   937   000D1E                     
   938                           ;main.c: 512:         _delay((unsigned long)((250)*(20000000/4000.0)));
   939   000D1E  0E07               	movlw	7
   940   000D20  6E63               	movwf	(??_main+1)^0,c
   941   000D22  0E58               	movlw	88
   942   000D24  6E62               	movwf	??_main^0,c
   943   000D26  0E5A               	movlw	90
   944   000D28                     u1947:
   945   000D28  2EE8               	decfsz	wreg,f,c
   946   000D2A  D7FE               	bra	u1947
   947   000D2C  2E62               	decfsz	??_main^0,f,c
   948   000D2E  D7FC               	bra	u1947
   949   000D30  2E63               	decfsz	(??_main+1)^0,f,c
   950   000D32  D7FA               	bra	u1947
   951   000D34                     
   952                           ;main.c: 514:         if (cmd_active) {
   953   000D34  506E               	movf	_cmd_active^0,w,c
   954   000D36  B4D8               	btfsc	status,2,c
   955   000D38  EFA0  F006         	goto	u1891
   956   000D3C  EFA2  F006         	goto	u1890
   957   000D40                     u1891:
   958   000D40  EF80  F006         	goto	l2707
   959   000D44                     u1890:
   960   000D44                     
   961                           ;main.c: 516:             PORTEbits.RE1 = 1;
   962   000D44  8284               	bsf	132,1,c	;volatile
   963   000D46                     
   964                           ;main.c: 519:             pop();
   965   000D46  EC8A  F009         	call	_pop	;wreg free
   966                           
   967                           ;main.c: 521:             char cmd = pop();
   968   000D4A  EC8A  F009         	call	_pop	;wreg free
   969   000D4E  6E64               	movwf	main@cmd^0,c
   970   000D50                     
   971                           ;main.c: 524:             if (cmd == '1') {
   972   000D50  0E31               	movlw	49
   973   000D52  1864               	xorwf	main@cmd^0,w,c
   974   000D54  A4D8               	btfss	status,2,c
   975   000D56  EFAF  F006         	goto	u1901
   976   000D5A  EFB1  F006         	goto	u1900
   977   000D5E                     u1901:
   978   000D5E  EFB5  F006         	goto	l2729
   979   000D62                     u1900:
   980   000D62                     
   981                           ;main.c: 525:                 do_read();
   982   000D62  EC08  F006         	call	_do_read	;wreg free
   983                           
   984                           ;main.c: 526:             }
   985   000D66  EFCD  F006         	goto	l2737
   986   000D6A                     l2729:
   987   000D6A  0E32               	movlw	50
   988   000D6C  1864               	xorwf	main@cmd^0,w,c
   989   000D6E  A4D8               	btfss	status,2,c
   990   000D70  EFBC  F006         	goto	u1911
   991   000D74  EFBE  F006         	goto	u1910
   992   000D78                     u1911:
   993   000D78  EFC2  F006         	goto	l2733
   994   000D7C                     u1910:
   995   000D7C                     
   996                           ;main.c: 528:                 do_write();
   997   000D7C  EC20  F005         	call	_do_write	;wreg free
   998                           
   999                           ;main.c: 529:             }
  1000   000D80  EFCD  F006         	goto	l2737
  1001   000D84                     l2733:
  1002   000D84  0E33               	movlw	51
  1003   000D86  1864               	xorwf	main@cmd^0,w,c
  1004   000D88  A4D8               	btfss	status,2,c
  1005   000D8A  EFC9  F006         	goto	u1921
  1006   000D8E  EFCB  F006         	goto	u1920
  1007   000D92                     u1921:
  1008   000D92  EFCD  F006         	goto	l2737
  1009   000D96                     u1920:
  1010   000D96                     
  1011                           ;main.c: 531:                 do_blank();
  1012   000D96  EC95  F005         	call	_do_blank	;wreg free
  1013   000D9A                     l2737:
  1014                           
  1015                           ;main.c: 535:             makenull();
  1016   000D9A  ECA4  F00A         	call	_makenull	;wreg free
  1017   000D9E  EF80  F006         	goto	l2707
  1018   000DA2  EF07  F000         	goto	start
  1019   000DA6                     __end_of_main:
  1020                           	callstack 0
  1021                           
  1022 ;; *************** function _uart_init *****************
  1023 ;; Defined at:
  1024 ;;		line 23 in file "uart.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  baud_rate       4   37[COMRAM] const unsigned long 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  n               4   41[COMRAM] unsigned long 
  1029 ;;  factor          1   45[COMRAM] unsigned char 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1039 ;;      Params:         4       0       0       0       0       0       0
  1040 ;;      Locals:         5       0       0       0       0       0       0
  1041 ;;      Temps:          0       0       0       0       0       0       0
  1042 ;;      Totals:         9       0       0       0       0       0       0
  1043 ;;Total ram usage:        9 bytes
  1044 ;; Hardware stack levels used: 1
  1045 ;; Hardware stack levels required when called: 4
  1046 ;; This function calls:
  1047 ;;		___lldiv
  1048 ;;		___lmul
  1049 ;; This function is called by:
  1050 ;;		_main
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text1
  1055   000820                     __ptext1:
  1056                           	callstack 0
  1057   000820                     _uart_init:
  1058                           	callstack 26
  1059   000820                     
  1060                           ;uart.c: 23: void uart_init(const uint32_t baud_rate);uart.c: 24: {;uart.c: 26:     INTC
      +                          ONbits.GIEH = 0;
  1061   000820  9EF2               	bcf	242,7,c	;volatile
  1062                           
  1063                           ;uart.c: 28:     PIE1bits.TX1IE = 1;
  1064   000822  889D               	bsf	157,4,c	;volatile
  1065                           
  1066                           ;uart.c: 29:     PIE1bits.RC1IE = 1;
  1067   000824  8A9D               	bsf	157,5,c	;volatile
  1068                           
  1069                           ;uart.c: 32:     TRISCbits.TRISC6=1;
  1070   000826  8C94               	bsf	148,6,c	;volatile
  1071                           
  1072                           ;uart.c: 33:     TRISCbits.TRISC7=1;
  1073   000828  8E94               	bsf	148,7,c	;volatile
  1074                           
  1075                           ;uart.c: 35:     BAUDCONbits.BRG16 = 1;
  1076   00082A  86B8               	bsf	184,3,c	;volatile
  1077                           
  1078                           ;uart.c: 36:     BAUDCONbits.WUE = 0;
  1079   00082C  92B8               	bcf	184,1,c	;volatile
  1080                           
  1081                           ;uart.c: 38:     RCSTAbits.CREN = 1;
  1082   00082E  88AB               	bsf	171,4,c	;volatile
  1083                           
  1084                           ;uart.c: 39:     RCSTAbits.SPEN = 1;
  1085   000830  8EAB               	bsf	171,7,c	;volatile
  1086                           
  1087                           ;uart.c: 41:     TXSTAbits.SYNC = 0;
  1088   000832  98AC               	bcf	172,4,c	;volatile
  1089                           
  1090                           ;uart.c: 42:     TXSTAbits.BRGH = 1;
  1091   000834  84AC               	bsf	172,2,c	;volatile
  1092                           
  1093                           ;uart.c: 43:     TXSTAbits.TXEN = 1;
  1094   000836  8AAC               	bsf	172,5,c	;volatile
  1095                           
  1096                           ;uart.c: 46:     uint8_t factor;;uart.c: 47:     if (BAUDCONbits.BRG16 && TXSTAbits.BRGH
      +                          )
  1097   000838  A6B8               	btfss	184,3,c	;volatile
  1098   00083A  EF21  F004         	goto	u1341
  1099   00083E  EF23  F004         	goto	u1340
  1100   000842                     u1341:
  1101   000842  EF2E  F004         	goto	l189
  1102   000846                     u1340:
  1103   000846  A4AC               	btfss	172,2,c	;volatile
  1104   000848  EF28  F004         	goto	u1351
  1105   00084C  EF2A  F004         	goto	u1350
  1106   000850                     u1351:
  1107   000850  EF2E  F004         	goto	l189
  1108   000854                     u1350:
  1109   000854                     
  1110                           ;uart.c: 48:         factor = 4;
  1111   000854  0E04               	movlw	4
  1112   000856  6E2E               	movwf	uart_init@factor^0,c
  1113   000858  EF62  F004         	goto	l2255
  1114   00085C                     l189:
  1115   00085C  A6B8               	btfss	184,3,c	;volatile
  1116   00085E  EF33  F004         	goto	u1361
  1117   000862  EF35  F004         	goto	u1360
  1118   000866                     u1361:
  1119   000866  EF40  F004         	goto	l191
  1120   00086A                     u1360:
  1121   00086A  B4AC               	btfsc	172,2,c	;volatile
  1122   00086C  EF3A  F004         	goto	u1371
  1123   000870  EF3C  F004         	goto	u1370
  1124   000874                     u1371:
  1125   000874  EF40  F004         	goto	l191
  1126   000878                     u1370:
  1127   000878                     l2245:
  1128                           
  1129                           ;uart.c: 50:         factor = 16;
  1130   000878  0E10               	movlw	16
  1131   00087A  6E2E               	movwf	uart_init@factor^0,c
  1132   00087C  EF62  F004         	goto	l2255
  1133   000880                     l191:
  1134   000880  B6B8               	btfsc	184,3,c	;volatile
  1135   000882  EF45  F004         	goto	u1381
  1136   000886  EF47  F004         	goto	u1380
  1137   00088A                     u1381:
  1138   00088A  EF50  F004         	goto	l193
  1139   00088E                     u1380:
  1140   00088E  A4AC               	btfss	172,2,c	;volatile
  1141   000890  EF4C  F004         	goto	u1391
  1142   000894  EF4E  F004         	goto	u1390
  1143   000898                     u1391:
  1144   000898  EF50  F004         	goto	l193
  1145   00089C                     u1390:
  1146   00089C  EF3C  F004         	goto	l2245
  1147   0008A0                     l193:
  1148   0008A0  B6B8               	btfsc	184,3,c	;volatile
  1149   0008A2  EF55  F004         	goto	u1401
  1150   0008A6  EF57  F004         	goto	u1400
  1151   0008AA                     u1401:
  1152   0008AA  EF62  F004         	goto	l192
  1153   0008AE                     u1400:
  1154   0008AE  B4AC               	btfsc	172,2,c	;volatile
  1155   0008B0  EF5C  F004         	goto	u1411
  1156   0008B4  EF5E  F004         	goto	u1410
  1157   0008B8                     u1411:
  1158   0008B8  EF62  F004         	goto	l192
  1159   0008BC                     u1410:
  1160   0008BC                     
  1161                           ;uart.c: 54:         factor = 64;
  1162   0008BC  0E40               	movlw	64
  1163   0008BE  6E2E               	movwf	uart_init@factor^0,c
  1164   0008C0  EF62  F004         	goto	l2255
  1165   0008C4                     l192:
  1166   0008C4                     l2255:
  1167                           
  1168                           ;uart.c: 55:     if (TXSTAbits.SYNC)
  1169   0008C4  A8AC               	btfss	172,4,c	;volatile
  1170   0008C6  EF67  F004         	goto	u1421
  1171   0008CA  EF69  F004         	goto	u1420
  1172   0008CE                     u1421:
  1173   0008CE  EF6B  F004         	goto	l2259
  1174   0008D2                     u1420:
  1175   0008D2                     
  1176                           ;uart.c: 56:         factor = 64;
  1177   0008D2  0E40               	movlw	64
  1178   0008D4  6E2E               	movwf	uart_init@factor^0,c
  1179   0008D6                     l2259:
  1180                           
  1181                           ;uart.c: 59:     uint32_t n = (int32_t) 20000000 / (factor * baud_rate) - 1u ;
  1182   0008D6  0E00               	movlw	0
  1183   0008D8  6E19               	movwf	___lldiv@dividend^0,c
  1184   0008DA  0E2D               	movlw	45
  1185   0008DC  6E1A               	movwf	(___lldiv@dividend+1)^0,c
  1186   0008DE  0E31               	movlw	49
  1187   0008E0  6E1B               	movwf	(___lldiv@dividend+2)^0,c
  1188   0008E2  0E01               	movlw	1
  1189   0008E4  6E1C               	movwf	(___lldiv@dividend+3)^0,c
  1190   0008E6  502E               	movf	uart_init@factor^0,w,c
  1191   0008E8  6E0D               	movwf	___lmul@multiplier^0,c
  1192   0008EA  6A0E               	clrf	(___lmul@multiplier+1)^0,c
  1193   0008EC  6A0F               	clrf	(___lmul@multiplier+2)^0,c
  1194   0008EE  6A10               	clrf	(___lmul@multiplier+3)^0,c
  1195   0008F0  C026  F011         	movff	uart_init@baud_rate,___lmul@multiplicand
  1196   0008F4  C027  F012         	movff	uart_init@baud_rate+1,___lmul@multiplicand+1
  1197   0008F8  C028  F013         	movff	uart_init@baud_rate+2,___lmul@multiplicand+2
  1198   0008FC  C029  F014         	movff	uart_init@baud_rate+3,___lmul@multiplicand+3
  1199   000900  ECCF  F008         	call	___lmul	;wreg free
  1200   000904  C00D  F01D         	movff	?___lmul,___lldiv@divisor
  1201   000908  C00E  F01E         	movff	?___lmul+1,___lldiv@divisor+1
  1202   00090C  C00F  F01F         	movff	?___lmul+2,___lldiv@divisor+2
  1203   000910  C010  F020         	movff	?___lmul+3,___lldiv@divisor+3
  1204   000914  EC7B  F007         	call	___lldiv	;wreg free
  1205   000918  0EFF               	movlw	255
  1206   00091A  2419               	addwf	?___lldiv^0,w,c
  1207   00091C  6E2A               	movwf	uart_init@n^0,c
  1208   00091E  0EFF               	movlw	255
  1209   000920  201A               	addwfc	(?___lldiv+1)^0,w,c
  1210   000922  6E2B               	movwf	(uart_init@n+1)^0,c
  1211   000924  0EFF               	movlw	255
  1212   000926  201B               	addwfc	(?___lldiv+2)^0,w,c
  1213   000928  6E2C               	movwf	(uart_init@n+2)^0,c
  1214   00092A  0EFF               	movlw	255
  1215   00092C  201C               	addwfc	(?___lldiv+3)^0,w,c
  1216   00092E  6E2D               	movwf	(uart_init@n+3)^0,c
  1217   000930                     
  1218                           ;uart.c: 60:     SPBRGH = (n & 0xFF00) >> 8;
  1219   000930  C02B  FFB0         	movff	uart_init@n+1,4016	;volatile
  1220   000934                     
  1221                           ;uart.c: 61:     SPBRG = n & 0x00FF;
  1222   000934  C02A  FFAF         	movff	uart_init@n,4015	;volatile
  1223   000938                     
  1224                           ;uart.c: 63:     RCONbits.IPEN = 1;
  1225   000938  8ED0               	bsf	208,7,c	;volatile
  1226   00093A                     
  1227                           ;uart.c: 64:     INTCONbits.PEIE = 1;
  1228   00093A  8CF2               	bsf	242,6,c	;volatile
  1229   00093C                     
  1230                           ;uart.c: 65:     IPR1bits.RCIP = 1;
  1231   00093C  8A9F               	bsf	159,5,c	;volatile
  1232   00093E                     
  1233                           ;uart.c: 68:     PIE1bits.RCIE=1;
  1234   00093E  8A9D               	bsf	157,5,c	;volatile
  1235   000940                     
  1236                           ;uart.c: 71:     PIE1bits.TXIE=0;
  1237   000940  989D               	bcf	157,4,c	;volatile
  1238   000942                     
  1239                           ;uart.c: 74:     INTCONbits.GIEH = 1;
  1240   000942  8EF2               	bsf	242,7,c	;volatile
  1241   000944  0012               	return		;funcret
  1242   000946                     __end_of_uart_init:
  1243                           	callstack 0
  1244                           
  1245 ;; *************** function ___lmul *****************
  1246 ;; Defined at:
  1247 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/Umul32.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  multiplier      4   12[COMRAM] unsigned long 
  1250 ;;  multiplicand    4   16[COMRAM] unsigned long 
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  product         4   20[COMRAM] unsigned long 
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  4   12[COMRAM] unsigned long 
  1255 ;; Registers used:
  1256 ;;		wreg, status,2, status,0
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1262 ;;      Params:         8       0       0       0       0       0       0
  1263 ;;      Locals:         4       0       0       0       0       0       0
  1264 ;;      Temps:          0       0       0       0       0       0       0
  1265 ;;      Totals:        12       0       0       0       0       0       0
  1266 ;;Total ram usage:       12 bytes
  1267 ;; Hardware stack levels used: 1
  1268 ;; Hardware stack levels required when called: 3
  1269 ;; This function calls:
  1270 ;;		Nothing
  1271 ;; This function is called by:
  1272 ;;		_uart_init
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           	psect	text2
  1277   00119E                     __ptext2:
  1278                           	callstack 0
  1279   00119E                     ___lmul:
  1280                           	callstack 26
  1281   00119E  0E00               	movlw	0
  1282   0011A0  6E15               	movwf	___lmul@product^0,c
  1283   0011A2  0E00               	movlw	0
  1284   0011A4  6E16               	movwf	(___lmul@product+1)^0,c
  1285   0011A6  0E00               	movlw	0
  1286   0011A8  6E17               	movwf	(___lmul@product+2)^0,c
  1287   0011AA  0E00               	movlw	0
  1288   0011AC  6E18               	movwf	(___lmul@product+3)^0,c
  1289   0011AE                     l2009:
  1290   0011AE  A00D               	btfss	___lmul@multiplier^0,0,c
  1291   0011B0  EFDC  F008         	goto	u1121
  1292   0011B4  EFDE  F008         	goto	u1120
  1293   0011B8                     u1121:
  1294   0011B8  EFE6  F008         	goto	l2013
  1295   0011BC                     u1120:
  1296   0011BC  5011               	movf	___lmul@multiplicand^0,w,c
  1297   0011BE  2615               	addwf	___lmul@product^0,f,c
  1298   0011C0  5012               	movf	(___lmul@multiplicand+1)^0,w,c
  1299   0011C2  2216               	addwfc	(___lmul@product+1)^0,f,c
  1300   0011C4  5013               	movf	(___lmul@multiplicand+2)^0,w,c
  1301   0011C6  2217               	addwfc	(___lmul@product+2)^0,f,c
  1302   0011C8  5014               	movf	(___lmul@multiplicand+3)^0,w,c
  1303   0011CA  2218               	addwfc	(___lmul@product+3)^0,f,c
  1304   0011CC                     l2013:
  1305   0011CC  90D8               	bcf	status,0,c
  1306   0011CE  3611               	rlcf	___lmul@multiplicand^0,f,c
  1307   0011D0  3612               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1308   0011D2  3613               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1309   0011D4  3614               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1310   0011D6  90D8               	bcf	status,0,c
  1311   0011D8  3210               	rrcf	(___lmul@multiplier+3)^0,f,c
  1312   0011DA  320F               	rrcf	(___lmul@multiplier+2)^0,f,c
  1313   0011DC  320E               	rrcf	(___lmul@multiplier+1)^0,f,c
  1314   0011DE  320D               	rrcf	___lmul@multiplier^0,f,c
  1315   0011E0  500D               	movf	___lmul@multiplier^0,w,c
  1316   0011E2  100E               	iorwf	(___lmul@multiplier+1)^0,w,c
  1317   0011E4  100F               	iorwf	(___lmul@multiplier+2)^0,w,c
  1318   0011E6  1010               	iorwf	(___lmul@multiplier+3)^0,w,c
  1319   0011E8  A4D8               	btfss	status,2,c
  1320   0011EA  EFF9  F008         	goto	u1131
  1321   0011EE  EFFB  F008         	goto	u1130
  1322   0011F2                     u1131:
  1323   0011F2  EFD7  F008         	goto	l2009
  1324   0011F6                     u1130:
  1325   0011F6  C015  F00D         	movff	___lmul@product,?___lmul
  1326   0011FA  C016  F00E         	movff	___lmul@product+1,?___lmul+1
  1327   0011FE  C017  F00F         	movff	___lmul@product+2,?___lmul+2
  1328   001202  C018  F010         	movff	___lmul@product+3,?___lmul+3
  1329   001206  0012               	return		;funcret
  1330   001208                     __end_of___lmul:
  1331                           	callstack 0
  1332                           
  1333 ;; *************** function ___lldiv *****************
  1334 ;; Defined at:
  1335 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/__lldiv.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  dividend        4   24[COMRAM] unsigned long 
  1338 ;;  divisor         4   28[COMRAM] unsigned long 
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  quotient        4   32[COMRAM] unsigned long 
  1341 ;;  counter         1   36[COMRAM] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  4   24[COMRAM] unsigned long 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1351 ;;      Params:         8       0       0       0       0       0       0
  1352 ;;      Locals:         5       0       0       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0
  1354 ;;      Totals:        13       0       0       0       0       0       0
  1355 ;;Total ram usage:       13 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 3
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_uart_init
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text3
  1366   000EF6                     __ptext3:
  1367                           	callstack 0
  1368   000EF6                     ___lldiv:
  1369                           	callstack 26
  1370   000EF6  0E00               	movlw	0
  1371   000EF8  6E21               	movwf	___lldiv@quotient^0,c
  1372   000EFA  0E00               	movlw	0
  1373   000EFC  6E22               	movwf	(___lldiv@quotient+1)^0,c
  1374   000EFE  0E00               	movlw	0
  1375   000F00  6E23               	movwf	(___lldiv@quotient+2)^0,c
  1376   000F02  0E00               	movlw	0
  1377   000F04  6E24               	movwf	(___lldiv@quotient+3)^0,c
  1378   000F06  501D               	movf	___lldiv@divisor^0,w,c
  1379   000F08  101E               	iorwf	(___lldiv@divisor+1)^0,w,c
  1380   000F0A  101F               	iorwf	(___lldiv@divisor+2)^0,w,c
  1381   000F0C  1020               	iorwf	(___lldiv@divisor+3)^0,w,c
  1382   000F0E  B4D8               	btfsc	status,2,c
  1383   000F10  EF8C  F007         	goto	u1141
  1384   000F14  EF8E  F007         	goto	u1140
  1385   000F18                     u1141:
  1386   000F18  EFC4  F007         	goto	l268
  1387   000F1C                     u1140:
  1388   000F1C  0E01               	movlw	1
  1389   000F1E  6E25               	movwf	___lldiv@counter^0,c
  1390   000F20  EF98  F007         	goto	l2025
  1391   000F24                     l2023:
  1392   000F24  90D8               	bcf	status,0,c
  1393   000F26  361D               	rlcf	___lldiv@divisor^0,f,c
  1394   000F28  361E               	rlcf	(___lldiv@divisor+1)^0,f,c
  1395   000F2A  361F               	rlcf	(___lldiv@divisor+2)^0,f,c
  1396   000F2C  3620               	rlcf	(___lldiv@divisor+3)^0,f,c
  1397   000F2E  2A25               	incf	___lldiv@counter^0,f,c
  1398   000F30                     l2025:
  1399   000F30  AE20               	btfss	(___lldiv@divisor+3)^0,7,c
  1400   000F32  EF9D  F007         	goto	u1151
  1401   000F36  EF9F  F007         	goto	u1150
  1402   000F3A                     u1151:
  1403   000F3A  EF92  F007         	goto	l2023
  1404   000F3E                     u1150:
  1405   000F3E                     l2027:
  1406   000F3E  90D8               	bcf	status,0,c
  1407   000F40  3621               	rlcf	___lldiv@quotient^0,f,c
  1408   000F42  3622               	rlcf	(___lldiv@quotient+1)^0,f,c
  1409   000F44  3623               	rlcf	(___lldiv@quotient+2)^0,f,c
  1410   000F46  3624               	rlcf	(___lldiv@quotient+3)^0,f,c
  1411   000F48  501D               	movf	___lldiv@divisor^0,w,c
  1412   000F4A  5C19               	subwf	___lldiv@dividend^0,w,c
  1413   000F4C  501E               	movf	(___lldiv@divisor+1)^0,w,c
  1414   000F4E  581A               	subwfb	(___lldiv@dividend+1)^0,w,c
  1415   000F50  501F               	movf	(___lldiv@divisor+2)^0,w,c
  1416   000F52  581B               	subwfb	(___lldiv@dividend+2)^0,w,c
  1417   000F54  5020               	movf	(___lldiv@divisor+3)^0,w,c
  1418   000F56  581C               	subwfb	(___lldiv@dividend+3)^0,w,c
  1419   000F58  A0D8               	btfss	status,0,c
  1420   000F5A  EFB1  F007         	goto	u1161
  1421   000F5E  EFB3  F007         	goto	u1160
  1422   000F62                     u1161:
  1423   000F62  EFBC  F007         	goto	l2035
  1424   000F66                     u1160:
  1425   000F66  501D               	movf	___lldiv@divisor^0,w,c
  1426   000F68  5E19               	subwf	___lldiv@dividend^0,f,c
  1427   000F6A  501E               	movf	(___lldiv@divisor+1)^0,w,c
  1428   000F6C  5A1A               	subwfb	(___lldiv@dividend+1)^0,f,c
  1429   000F6E  501F               	movf	(___lldiv@divisor+2)^0,w,c
  1430   000F70  5A1B               	subwfb	(___lldiv@dividend+2)^0,f,c
  1431   000F72  5020               	movf	(___lldiv@divisor+3)^0,w,c
  1432   000F74  5A1C               	subwfb	(___lldiv@dividend+3)^0,f,c
  1433   000F76  8021               	bsf	___lldiv@quotient^0,0,c
  1434   000F78                     l2035:
  1435   000F78  90D8               	bcf	status,0,c
  1436   000F7A  3220               	rrcf	(___lldiv@divisor+3)^0,f,c
  1437   000F7C  321F               	rrcf	(___lldiv@divisor+2)^0,f,c
  1438   000F7E  321E               	rrcf	(___lldiv@divisor+1)^0,f,c
  1439   000F80  321D               	rrcf	___lldiv@divisor^0,f,c
  1440   000F82  2E25               	decfsz	___lldiv@counter^0,f,c
  1441   000F84  EF9F  F007         	goto	l2027
  1442   000F88                     l268:
  1443   000F88  C021  F019         	movff	___lldiv@quotient,?___lldiv
  1444   000F8C  C022  F01A         	movff	___lldiv@quotient+1,?___lldiv+1
  1445   000F90  C023  F01B         	movff	___lldiv@quotient+2,?___lldiv+2
  1446   000F94  C024  F01C         	movff	___lldiv@quotient+3,?___lldiv+3
  1447   000F98  0012               	return		;funcret
  1448   000F9A                     __end_of___lldiv:
  1449                           	callstack 0
  1450                           
  1451 ;; *************** function _ports_init *****************
  1452 ;; Defined at:
  1453 ;;		line 184 in file "main.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;		None
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;		None
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1467 ;;      Params:         0       0       0       0       0       0       0
  1468 ;;      Locals:         0       0       0       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0
  1470 ;;      Totals:         0       0       0       0       0       0       0
  1471 ;;Total ram usage:        0 bytes
  1472 ;; Hardware stack levels used: 1
  1473 ;; Hardware stack levels required when called: 3
  1474 ;; This function calls:
  1475 ;;		Nothing
  1476 ;; This function is called by:
  1477 ;;		_main
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text4
  1482   001636                     __ptext4:
  1483                           	callstack 0
  1484   001636                     _ports_init:
  1485                           	callstack 27
  1486   001636                     
  1487                           ;main.c: 187:     ADCON0bits.ADON = 0;
  1488   001636  90C2               	bcf	194,0,c	;volatile
  1489   001638                     
  1490                           ;main.c: 188:     ADCON1 = 0x0F;
  1491   001638  0E0F               	movlw	15
  1492   00163A  6EC1               	movwf	193,c	;volatile
  1493   00163C                     
  1494                           ;main.c: 191:     TRISEbits.RE0 = 0;
  1495   00163C  9096               	bcf	150,0,c	;volatile
  1496   00163E                     
  1497                           ;main.c: 192:     TRISEbits.RE1 = 0;
  1498   00163E  9296               	bcf	150,1,c	;volatile
  1499   001640                     
  1500                           ;main.c: 193:     TRISEbits.RE2 = 0;
  1501   001640  9496               	bcf	150,2,c	;volatile
  1502   001642                     
  1503                           ;main.c: 194:     PORTEbits.RE0 = 0;
  1504   001642  9084               	bcf	132,0,c	;volatile
  1505   001644                     
  1506                           ;main.c: 195:     PORTEbits.RE1 = 0;
  1507   001644  9284               	bcf	132,1,c	;volatile
  1508   001646                     
  1509                           ;main.c: 196:     PORTEbits.RE2 = 0;
  1510   001646  9484               	bcf	132,2,c	;volatile
  1511   001648                     
  1512                           ;main.c: 199:     TRISAbits.RA2 = 0;
  1513   001648  9492               	bcf	146,2,c	;volatile
  1514   00164A                     
  1515                           ;main.c: 200:     TRISAbits.RA3 = 1;
  1516   00164A  8692               	bsf	146,3,c	;volatile
  1517   00164C                     
  1518                           ;main.c: 201:     PORTAbits.RA2 = 0;
  1519   00164C  9480               	bcf	128,2,c	;volatile
  1520                           
  1521                           ;main.c: 204:     TRISD = 0x00;
  1522   00164E  0E00               	movlw	0
  1523   001650  6E95               	movwf	149,c	;volatile
  1524                           
  1525                           ;main.c: 208:     TRISC = 0b11000000;
  1526   001652  0EC0               	movlw	192
  1527   001654  6E94               	movwf	148,c	;volatile
  1528                           
  1529                           ;main.c: 211:     TRISB = 0x00;
  1530   001656  0E00               	movlw	0
  1531   001658  6E93               	movwf	147,c	;volatile
  1532   00165A                     
  1533                           ;main.c: 217:     PORTBbits.RB3 = 0;
  1534   00165A  9681               	bcf	129,3,c	;volatile
  1535   00165C                     
  1536                           ;main.c: 218:     PORTBbits.RB4 = 0;
  1537   00165C  9881               	bcf	129,4,c	;volatile
  1538   00165E  0012               	return		;funcret
  1539   001660                     __end_of_ports_init:
  1540                           	callstack 0
  1541                           
  1542 ;; *************** function _makenull *****************
  1543 ;; Defined at:
  1544 ;;		line 60 in file "main.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1558 ;;      Params:         0       0       0       0       0       0       0
  1559 ;;      Locals:         0       0       0       0       0       0       0
  1560 ;;      Temps:          0       0       0       0       0       0       0
  1561 ;;      Totals:         0       0       0       0       0       0       0
  1562 ;;Total ram usage:        0 bytes
  1563 ;; Hardware stack levels used: 1
  1564 ;; Hardware stack levels required when called: 4
  1565 ;; This function calls:
  1566 ;;		_memset
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text5
  1573   001548                     __ptext5:
  1574                           	callstack 0
  1575   001548                     _makenull:
  1576                           	callstack 26
  1577   001548                     
  1578                           ;main.c: 62:     memset(queue, 0x00, 1024);
  1579   001548  0EDA               	movlw	low _queue
  1580   00154A  6E0D               	movwf	memset@dest^0,c
  1581   00154C  0E00               	movlw	high _queue
  1582   00154E  6E0E               	movwf	(memset@dest+1)^0,c
  1583   001550  0E00               	movlw	0
  1584   001552  6E10               	movwf	(memset@c+1)^0,c
  1585   001554  0E00               	movlw	0
  1586   001556  6E0F               	movwf	memset@c^0,c
  1587   001558  0E04               	movlw	4
  1588   00155A  6E12               	movwf	(memset@n+1)^0,c
  1589   00155C  0E00               	movlw	0
  1590   00155E  6E11               	movwf	memset@n^0,c
  1591   001560  EC39  F00A         	call	_memset	;wreg free
  1592   001564                     
  1593                           ;main.c: 63:     head = 0;
  1594   001564  0E00               	movlw	0
  1595   001566  6E6C               	movwf	(_head+1)^0,c
  1596   001568  0E00               	movlw	0
  1597   00156A  6E6B               	movwf	_head^0,c
  1598   00156C                     
  1599                           ;main.c: 64:     tail = 1024 -1;
  1600   00156C  0E03               	movlw	3
  1601   00156E  6E70               	movwf	(_tail+1)^0,c
  1602   001570  686F               	setf	_tail^0,c
  1603   001572                     
  1604                           ;main.c: 65:     cmd_active = 0;
  1605   001572  0E00               	movlw	0
  1606   001574  6E6E               	movwf	_cmd_active^0,c
  1607   001576  0012               	return		;funcret
  1608   001578                     __end_of_makenull:
  1609                           	callstack 0
  1610                           
  1611 ;; *************** function _memset *****************
  1612 ;; Defined at:
  1613 ;;		line 3 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/memset.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  dest            2   12[COMRAM] PTR void 
  1616 ;;		 -> queue(1024), 
  1617 ;;  c               2   14[COMRAM] int 
  1618 ;;  n               2   16[COMRAM] unsigned int 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  p               2   18[COMRAM] PTR unsigned char 
  1621 ;;		 -> queue(1024), 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  2   12[COMRAM] PTR void 
  1624 ;; Registers used:
  1625 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1631 ;;      Params:         6       0       0       0       0       0       0
  1632 ;;      Locals:         2       0       0       0       0       0       0
  1633 ;;      Temps:          0       0       0       0       0       0       0
  1634 ;;      Totals:         8       0       0       0       0       0       0
  1635 ;;Total ram usage:        8 bytes
  1636 ;; Hardware stack levels used: 1
  1637 ;; Hardware stack levels required when called: 3
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_makenull
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text6
  1646   001472                     __ptext6:
  1647                           	callstack 0
  1648   001472                     _memset:
  1649                           	callstack 26
  1650   001472  C00D  F013         	movff	memset@dest,memset@p
  1651   001476  C00E  F014         	movff	memset@dest+1,memset@p+1
  1652   00147A  EF47  F00A         	goto	l1885
  1653   00147E                     l1881:
  1654   00147E  C013  FFD9         	movff	memset@p,fsr2l
  1655   001482  C014  FFDA         	movff	memset@p+1,fsr2h
  1656   001486  C00F  FFDF         	movff	memset@c,indf2
  1657   00148A  4A13               	infsnz	memset@p^0,f,c
  1658   00148C  2A14               	incf	(memset@p+1)^0,f,c
  1659   00148E                     l1885:
  1660   00148E  0611               	decf	memset@n^0,f,c
  1661   001490  A0D8               	btfss	status,0,c
  1662   001492  0612               	decf	(memset@n+1)^0,f,c
  1663   001494  2811               	incf	memset@n^0,w,c
  1664   001496  E106               	bnz	u1031
  1665   001498  2812               	incf	(memset@n+1)^0,w,c
  1666   00149A  A4D8               	btfss	status,2,c
  1667   00149C  EF52  F00A         	goto	u1031
  1668   0014A0  EF54  F00A         	goto	u1030
  1669   0014A4                     u1031:
  1670   0014A4  EF3F  F00A         	goto	l1881
  1671   0014A8                     u1030:
  1672   0014A8  0012               	return		;funcret
  1673   0014AA                     __end_of_memset:
  1674                           	callstack 0
  1675                           
  1676 ;; *************** function _do_write *****************
  1677 ;; Defined at:
  1678 ;;		line 437 in file "main.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;  s               1   48[BANK0 ] PTR unsigned char 
  1683 ;;		 -> STR_9(15), 
  1684 ;;  data            1   53[BANK0 ] unsigned char 
  1685 ;;  read            1   51[BANK0 ] unsigned char 
  1686 ;;  hi              1   50[BANK0 ] unsigned char 
  1687 ;;  lo              1   49[BANK0 ] unsigned char 
  1688 ;;  ads            48    0[BANK0 ] unsigned char [48]
  1689 ;;  addr            2   54[BANK0 ] unsigned short 
  1690 ;;  c               1   52[BANK0 ] unsigned char 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1700 ;;      Params:         0       0       0       0       0       0       0
  1701 ;;      Locals:         0      56       0       0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0       0       0
  1703 ;;      Totals:         0      56       0       0       0       0       0
  1704 ;;Total ram usage:       56 bytes
  1705 ;; Hardware stack levels used: 1
  1706 ;; Hardware stack levels required when called: 11
  1707 ;; This function calls:
  1708 ;;		_charToHexDigit
  1709 ;;		_pop
  1710 ;;		_read_port
  1711 ;;		_setup_address
  1712 ;;		_sprintf
  1713 ;;		_uart_puts
  1714 ;;		_write_port
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text7
  1721   000A40                     __ptext7:
  1722                           	callstack 0
  1723   000A40                     _do_write:
  1724                           	callstack 19
  1725   000A40                     
  1726                           ;main.c: 439:     uint16_t addr;;main.c: 440:     char ads[48];;main.c: 441:     char c;
      +                          ;main.c: 444:     TRISD = 0x00;
  1727   000A40  0E00               	movlw	0
  1728   000A42  6E95               	movwf	149,c	;volatile
  1729   000A44                     
  1730                           ;main.c: 447:     PORTBbits.RB1 = 1;
  1731   000A44  8281               	bsf	129,1,c	;volatile
  1732   000A46                     
  1733                           ;main.c: 449:     PORTBbits.RB2 = 1;
  1734   000A46  8481               	bsf	129,2,c	;volatile
  1735   000A48                     
  1736                           ;main.c: 451:     PORTBbits.RB3 = 0;
  1737   000A48  9681               	bcf	129,3,c	;volatile
  1738                           
  1739                           ;main.c: 453:     for (addr = 0; addr < 2048; addr++) {
  1740   000A4A  0E00               	movlw	0
  1741   000A4C  0100               	movlb	0	; () banked
  1742   000A4E  6FB7               	movwf	(do_write@addr+1)& (0+255),b
  1743   000A50  0E00               	movlw	0
  1744   000A52  6FB6               	movwf	do_write@addr& (0+255),b
  1745   000A54                     l2663:
  1746                           
  1747                           ; BSR set to: 0
  1748                           ;main.c: 454:         if (cmd_active == 0) {
  1749   000A54  506E               	movf	_cmd_active^0,w,c
  1750   000A56  A4D8               	btfss	status,2,c
  1751   000A58  EF30  F005         	goto	u1861
  1752   000A5C  EF32  F005         	goto	u1860
  1753   000A60                     u1861:
  1754   000A60  EF3E  F005         	goto	l2671
  1755   000A64                     u1860:
  1756   000A64                     
  1757                           ; BSR set to: 0
  1758                           ;main.c: 455:             char *s = "Write aborted\n";
  1759   000A64  0E78               	movlw	low STR_9
  1760   000A66  6FB0               	movwf	do_write@s& (0+255),b
  1761   000A68                     
  1762                           ; BSR set to: 0
  1763                           ;main.c: 456:             uart_puts(s);
  1764   000A68  C0B0  F00D         	movff	do_write@s,uart_puts@s
  1765   000A6C  500D               	movf	uart_puts@s^0,w,c
  1766   000A6E  A4D8               	btfss	status,2,c
  1767   000A70  0E06               	movlw	high __smallconst
  1768   000A72  6E0E               	movwf	(uart_puts@s+1)^0,c
  1769   000A74  ECCD  F007         	call	_uart_puts	;wreg free
  1770   000A78  EF94  F005         	goto	l141
  1771   000A7C                     l2671:
  1772                           
  1773                           ; BSR set to: 0
  1774                           ;main.c: 461:         c = pop();
  1775   000A7C  EC8A  F009         	call	_pop	;wreg free
  1776   000A80  0100               	movlb	0	; () banked
  1777   000A82  6FB4               	movwf	do_write@c& (0+255),b
  1778   000A84                     
  1779                           ; BSR set to: 0
  1780                           ;main.c: 462:         uint8_t lo = charToHexDigit(c);
  1781   000A84  51B4               	movf	do_write@c& (0+255),w,b
  1782   000A86  EC55  F00A         	call	_charToHexDigit
  1783   000A8A  0100               	movlb	0	; () banked
  1784   000A8C  6FB1               	movwf	do_write@lo& (0+255),b
  1785   000A8E                     
  1786                           ; BSR set to: 0
  1787                           ;main.c: 463:         c = pop();
  1788   000A8E  EC8A  F009         	call	_pop	;wreg free
  1789   000A92  0100               	movlb	0	; () banked
  1790   000A94  6FB4               	movwf	do_write@c& (0+255),b
  1791                           
  1792                           ;main.c: 464:         uint8_t hi = charToHexDigit(c);
  1793   000A96  51B4               	movf	do_write@c& (0+255),w,b
  1794   000A98  EC55  F00A         	call	_charToHexDigit
  1795   000A9C  0100               	movlb	0	; () banked
  1796   000A9E  6FB2               	movwf	do_write@hi& (0+255),b
  1797   000AA0                     
  1798                           ; BSR set to: 0
  1799                           ;main.c: 465:         uint8_t data = hi*16+lo;
  1800   000AA0  51B2               	movf	do_write@hi& (0+255),w,b
  1801   000AA2  0D10               	mullw	16
  1802   000AA4  50F3               	movf	243,w,c
  1803   000AA6  25B1               	addwf	do_write@lo& (0+255),w,b
  1804   000AA8  6FB5               	movwf	do_write@data& (0+255),b
  1805   000AAA                     
  1806                           ; BSR set to: 0
  1807                           ;main.c: 468:         setup_address(addr);
  1808   000AAA  C0B6  F00D         	movff	do_write@addr,setup_address@addr
  1809   000AAE  C0B7  F00E         	movff	do_write@addr+1,setup_address@addr+1
  1810   000AB2  EC99  F008         	call	_setup_address	;wreg free
  1811   000AB6                     
  1812                           ;main.c: 471:         write_port(data);
  1813   000AB6  0100               	movlb	0	; () banked
  1814   000AB8  51B5               	movf	do_write@data& (0+255),w,b
  1815   000ABA  ECD8  F009         	call	_write_port
  1816   000ABE                     
  1817                           ;main.c: 475:             uint8_t read = read_port();
  1818   000ABE  EC8B  F00A         	call	_read_port	;wreg free
  1819   000AC2  0100               	movlb	0	; () banked
  1820   000AC4  6FB3               	movwf	do_write@read& (0+255),b
  1821   000AC6                     
  1822                           ; BSR set to: 0
  1823                           ;main.c: 477:             if (read != data) {
  1824   000AC6  51B5               	movf	do_write@data& (0+255),w,b
  1825   000AC8  19B3               	xorwf	do_write@read& (0+255),w,b
  1826   000ACA  B4D8               	btfsc	status,2,c
  1827   000ACC  EF6A  F005         	goto	u1871
  1828   000AD0  EF6C  F005         	goto	u1870
  1829   000AD4                     u1871:
  1830   000AD4  EF80  F005         	goto	l2695
  1831   000AD8                     u1870:
  1832   000AD8                     
  1833                           ; BSR set to: 0
  1834                           ;main.c: 479:                 PORTBbits.RB1 = 0;
  1835   000AD8  9281               	bcf	129,1,c	;volatile
  1836   000ADA                     
  1837                           ; BSR set to: 0
  1838                           ;main.c: 480:                 sprintf(ads, "write verify fail, write=%02x, read=%02x\n",
      +                           data, read);
  1839   000ADA  0E80               	movlw	low do_write@ads
  1840   000ADC  6E3A               	movwf	sprintf@s^0,c
  1841   000ADE  0E01               	movlw	low STR_10
  1842   000AE0  6E3B               	movwf	sprintf@fmt^0,c
  1843   000AE2  C0B5  F03C         	movff	do_write@data,?_sprintf+2
  1844   000AE6  6A3D               	clrf	(?_sprintf+3)^0,c
  1845   000AE8  C0B3  F03E         	movff	do_write@read,?_sprintf+4
  1846   000AEC  6A3F               	clrf	(?_sprintf+5)^0,c
  1847   000AEE  EC71  F00A         	call	_sprintf	;wreg free
  1848   000AF2                     l2691:
  1849                           
  1850                           ;main.c: 481:                 uart_puts(ads);
  1851   000AF2  0E80               	movlw	low do_write@ads
  1852   000AF4  6E0D               	movwf	uart_puts@s^0,c
  1853   000AF6  6A0E               	clrf	(uart_puts@s+1)^0,c
  1854   000AF8  ECCD  F007         	call	_uart_puts	;wreg free
  1855   000AFC  EF94  F005         	goto	l141
  1856   000B00                     l2695:
  1857                           
  1858                           ; BSR set to: 0
  1859                           ;main.c: 485:     }
  1860   000B00  4BB6               	infsnz	do_write@addr& (0+255),f,b
  1861   000B02  2BB7               	incf	(do_write@addr+1)& (0+255),f,b
  1862   000B04                     
  1863                           ; BSR set to: 0
  1864   000B04  0E08               	movlw	8
  1865   000B06  5DB7               	subwf	(do_write@addr+1)& (0+255),w,b
  1866   000B08  A0D8               	btfss	status,0,c
  1867   000B0A  EF89  F005         	goto	u1881
  1868   000B0E  EF8B  F005         	goto	u1880
  1869   000B12                     u1881:
  1870   000B12  EF2A  F005         	goto	l2663
  1871   000B16                     u1880:
  1872   000B16                     
  1873                           ; BSR set to: 0
  1874                           ;main.c: 488:     PORTBbits.RB1 = 0;
  1875   000B16  9281               	bcf	129,1,c	;volatile
  1876   000B18                     
  1877                           ; BSR set to: 0
  1878                           ;main.c: 490:     sprintf(ads, "write completed & verified\n");
  1879   000B18  0E80               	movlw	low do_write@ads
  1880   000B1A  6E3A               	movwf	sprintf@s^0,c
  1881   000B1C  0E48               	movlw	low STR_11
  1882   000B1E  6E3B               	movwf	sprintf@fmt^0,c
  1883   000B20  EC71  F00A         	call	_sprintf	;wreg free
  1884   000B24  EF79  F005         	goto	l2691
  1885   000B28                     l141:
  1886   000B28  0012               	return		;funcret
  1887   000B2A                     __end_of_do_write:
  1888                           	callstack 0
  1889                           
  1890 ;; *************** function _write_port *****************
  1891 ;; Defined at:
  1892 ;;		line 408 in file "main.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  data            1    wreg     unsigned char 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  data            1   14[COMRAM] unsigned char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, status,2, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1906 ;;      Params:         0       0       0       0       0       0       0
  1907 ;;      Locals:         1       0       0       0       0       0       0
  1908 ;;      Temps:          2       0       0       0       0       0       0
  1909 ;;      Totals:         3       0       0       0       0       0       0
  1910 ;;Total ram usage:        3 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 3
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_do_write
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text8
  1921   0013B0                     __ptext8:
  1922                           	callstack 0
  1923   0013B0                     _write_port:
  1924                           	callstack 26
  1925                           
  1926                           ;incstack = 0
  1927                           ;write_port@data stored from wreg
  1928   0013B0  6E0F               	movwf	write_port@data^0,c
  1929   0013B2                     
  1930                           ;main.c: 408: void write_port(uint8_t data);main.c: 409: {;main.c: 411:      _delay((uns
      +                          igned long)((10)*(20000000/4000000.0)));
  1931   0013B2  0E10               	movlw	16
  1932   0013B4                     u1957:
  1933   0013B4  2EE8               	decfsz	wreg,f,c
  1934   0013B6  D7FE               	bra	u1957
  1935   0013B8  D000               	nop2	
  1936   0013BA                     
  1937                           ;main.c: 412:     PORTD = data;
  1938   0013BA  C00F  FF83         	movff	write_port@data,3971	;volatile
  1939   0013BE                     
  1940                           ;main.c: 415:     _delay((unsigned long)((10)*(20000000/4000000.0)));
  1941   0013BE  0E10               	movlw	16
  1942   0013C0                     u1967:
  1943   0013C0  2EE8               	decfsz	wreg,f,c
  1944   0013C2  D7FE               	bra	u1967
  1945   0013C4  D000               	nop2	
  1946   0013C6                     
  1947                           ;main.c: 416:     PORTBbits.RB4 = 1;
  1948   0013C6  8881               	bsf	129,4,c	;volatile
  1949   0013C8                     
  1950                           ;main.c: 419:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1951   0013C8  D000               	nop2		;2 cycle nop
  1952   0013CA  D000               	nop2		;2 cycle nop
  1953   0013CC  0000               	nop	
  1954   0013CE                     
  1955                           ;main.c: 420:     PORTBbits.RB3 = 1;
  1956   0013CE  8681               	bsf	129,3,c	;volatile
  1957   0013D0                     
  1958                           ;main.c: 422:     _delay((unsigned long)((50)*(20000000/4000.0)));
  1959   0013D0  0E02               	movlw	2
  1960   0013D2  6E0E               	movwf	(??_write_port+1)^0,c
  1961   0013D4  0E45               	movlw	69
  1962   0013D6  6E0D               	movwf	??_write_port^0,c
  1963   0013D8  0EAA               	movlw	170
  1964   0013DA                     u1977:
  1965   0013DA  2EE8               	decfsz	wreg,f,c
  1966   0013DC  D7FE               	bra	u1977
  1967   0013DE  2E0D               	decfsz	??_write_port^0,f,c
  1968   0013E0  D7FC               	bra	u1977
  1969   0013E2  2E0E               	decfsz	(??_write_port+1)^0,f,c
  1970   0013E4  D7FA               	bra	u1977
  1971   0013E6                     
  1972                           ;main.c: 425:     PORTBbits.RB3 = 0;
  1973   0013E6  9681               	bcf	129,3,c	;volatile
  1974   0013E8                     
  1975                           ;main.c: 426:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1976   0013E8  D000               	nop2		;2 cycle nop
  1977   0013EA  D000               	nop2		;2 cycle nop
  1978   0013EC  0000               	nop	
  1979   0013EE                     
  1980                           ;main.c: 429:     PORTBbits.RB4 = 0;
  1981   0013EE  9881               	bcf	129,4,c	;volatile
  1982   0013F0                     
  1983                           ;main.c: 430:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1984   0013F0  D000               	nop2		;2 cycle nop
  1985   0013F2  D000               	nop2		;2 cycle nop
  1986   0013F4  0000               	nop	
  1987   0013F6  0012               	return		;funcret
  1988   0013F8                     __end_of_write_port:
  1989                           	callstack 0
  1990                           
  1991 ;; *************** function _pop *****************
  1992 ;; Defined at:
  1993 ;;		line 134 in file "main.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  c               1   14[COMRAM] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      unsigned char 
  2000 ;; Registers used:
  2001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2007 ;;      Params:         0       0       0       0       0       0       0
  2008 ;;      Locals:         1       0       0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0
  2010 ;;      Totals:         1       0       0       0       0       0       0
  2011 ;;Total ram usage:        1 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 5
  2014 ;; This function calls:
  2015 ;;		_addone
  2016 ;;		_empty
  2017 ;; This function is called by:
  2018 ;;		_do_write
  2019 ;;		_main
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text9
  2024   001314                     __ptext9:
  2025                           	callstack 0
  2026   001314                     _pop:
  2027                           	callstack 25
  2028   001314                     
  2029                           ;main.c: 138:     INTCONbits.GIEH = 0;
  2030   001314  9EF2               	bcf	242,7,c	;volatile
  2031                           
  2032                           ;main.c: 139:     PIE1bits.RCIE=0;
  2033   001316  9A9D               	bcf	157,5,c	;volatile
  2034   001318                     
  2035                           ;main.c: 143:     if (empty()) {
  2036   001318  EC04  F00B         	call	_empty	;wreg free
  2037   00131C  0900               	iorlw	0
  2038   00131E  B4D8               	btfsc	status,2,c
  2039   001320  EF94  F009         	goto	u1041
  2040   001324  EF96  F009         	goto	u1040
  2041   001328                     u1041:
  2042   001328  EF99  F009         	goto	l1893
  2043   00132C                     u1040:
  2044   00132C                     l85:
  2045                           
  2046                           ;main.c: 147:             TRISEbits.RE2 = 1;
  2047   00132C  8496               	bsf	150,2,c	;volatile
  2048   00132E  EF96  F009         	goto	l85
  2049   001332                     l1893:
  2050                           
  2051                           ;main.c: 150:         c = queue[head];
  2052   001332  0EDA               	movlw	low _queue
  2053   001334  246B               	addwf	_head^0,w,c
  2054   001336  6ED9               	movwf	fsr2l,c
  2055   001338  0E00               	movlw	high _queue
  2056   00133A  206C               	addwfc	(_head+1)^0,w,c
  2057   00133C  6EDA               	movwf	fsr2h,c
  2058   00133E  50DF               	movf	indf2,w,c
  2059   001340  6E0F               	movwf	pop@c^0,c
  2060   001342                     
  2061                           ;main.c: 151:         head = addone(head);
  2062   001342  C06B  F00D         	movff	_head,addone@i
  2063   001346  C06C  F00E         	movff	_head+1,addone@i+1
  2064   00134A  ECBC  F00A         	call	_addone	;wreg free
  2065   00134E  C00D  F06B         	movff	?_addone,_head
  2066   001352  C00E  F06C         	movff	?_addone+1,_head+1
  2067   001356                     
  2068                           ;main.c: 152:         bytes_popped++;
  2069   001356  4A67               	infsnz	_bytes_popped^0,f,c
  2070   001358  2A68               	incf	(_bytes_popped+1)^0,f,c
  2071   00135A                     
  2072                           ;main.c: 156:     INTCONbits.GIEH = 1;
  2073   00135A  8EF2               	bsf	242,7,c	;volatile
  2074   00135C                     
  2075                           ;main.c: 157:     PIE1bits.RCIE = 1;
  2076   00135C  8A9D               	bsf	157,5,c	;volatile
  2077   00135E                     
  2078                           ;main.c: 158:     return c;
  2079   00135E  500F               	movf	pop@c^0,w,c
  2080   001360  0012               	return		;funcret
  2081   001362                     __end_of_pop:
  2082                           	callstack 0
  2083                           
  2084 ;; *************** function _empty *****************
  2085 ;; Defined at:
  2086 ;;		line 97 in file "main.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;		None
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;		None
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      _Bool 
  2093 ;; Registers used:
  2094 ;;		wreg, status,2, status,0, cstack
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2100 ;;      Params:         0       0       0       0       0       0       0
  2101 ;;      Locals:         0       0       0       0       0       0       0
  2102 ;;      Temps:          0       0       0       0       0       0       0
  2103 ;;      Totals:         0       0       0       0       0       0       0
  2104 ;;Total ram usage:        0 bytes
  2105 ;; Hardware stack levels used: 1
  2106 ;; Hardware stack levels required when called: 4
  2107 ;; This function calls:
  2108 ;;		_addone
  2109 ;; This function is called by:
  2110 ;;		_pop
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text10
  2115   001608                     __ptext10:
  2116                           	callstack 0
  2117   001608                     _empty:
  2118                           	callstack 25
  2119   001608                     
  2120                           ;main.c: 99:     if (addone(tail) == head)
  2121   001608  C06F  F00D         	movff	_tail,addone@i
  2122   00160C  C070  F00E         	movff	_tail+1,addone@i+1
  2123   001610  ECBC  F00A         	call	_addone	;wreg free
  2124   001614  506B               	movf	_head^0,w,c
  2125   001616  180D               	xorwf	?_addone^0,w,c
  2126   001618  E107               	bnz	u1011
  2127   00161A  506C               	movf	(_head+1)^0,w,c
  2128   00161C  180E               	xorwf	(?_addone+1)^0,w,c
  2129   00161E  A4D8               	btfss	status,2,c
  2130   001620  EF14  F00B         	goto	u1011
  2131   001624  EF16  F00B         	goto	u1010
  2132   001628                     u1011:
  2133   001628  EF19  F00B         	goto	l1865
  2134   00162C                     u1010:
  2135   00162C                     
  2136                           ;main.c: 100:         return 1;
  2137   00162C  0E01               	movlw	1
  2138   00162E  EF1A  F00B         	goto	l73
  2139   001632                     l1865:
  2140                           
  2141                           ;main.c: 101:     return 0;
  2142   001632  0E00               	movlw	0
  2143   001634                     l73:
  2144   001634  0012               	return		;funcret
  2145   001636                     __end_of_empty:
  2146                           	callstack 0
  2147                           
  2148 ;; *************** function _addone *****************
  2149 ;; Defined at:
  2150 ;;		line 71 in file "main.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  i               2   12[COMRAM] short 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  2   12[COMRAM] short 
  2157 ;; Registers used:
  2158 ;;		wreg, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2164 ;;      Params:         2       0       0       0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0
  2167 ;;      Totals:         2       0       0       0       0       0       0
  2168 ;;Total ram usage:        2 bytes
  2169 ;; Hardware stack levels used: 1
  2170 ;; Hardware stack levels required when called: 3
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_empty
  2175 ;;		_pop
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text11
  2180   001578                     __ptext11:
  2181                           	callstack 0
  2182   001578                     _addone:
  2183                           	callstack 25
  2184   001578                     
  2185                           ;main.c: 71: int16_t addone(int16_t i);main.c: 72: {;main.c: 73:     if (i == 1024 -1)
  2186   001578  280D               	incf	addone@i^0,w,c
  2187   00157A  E107               	bnz	u961
  2188   00157C  0E03               	movlw	3
  2189   00157E  180E               	xorwf	(addone@i+1)^0,w,c
  2190   001580  A4D8               	btfss	status,2,c
  2191   001582  EFC5  F00A         	goto	u961
  2192   001586  EFC7  F00A         	goto	u960
  2193   00158A                     u961:
  2194   00158A  EFCD  F00A         	goto	l1801
  2195   00158E                     u960:
  2196   00158E                     
  2197                           ;main.c: 74:         return 0;
  2198   00158E  0E00               	movlw	0
  2199   001590  6E0E               	movwf	(?_addone+1)^0,c
  2200   001592  0E00               	movlw	0
  2201   001594  6E0D               	movwf	?_addone^0,c
  2202   001596  EFD3  F00A         	goto	l64
  2203   00159A                     l1801:
  2204                           
  2205                           ;main.c: 75:     return i+1;
  2206   00159A  0E01               	movlw	1
  2207   00159C  240D               	addwf	addone@i^0,w,c
  2208   00159E  6E0D               	movwf	?_addone^0,c
  2209   0015A0  0E00               	movlw	0
  2210   0015A2  200E               	addwfc	(addone@i+1)^0,w,c
  2211   0015A4  6E0E               	movwf	(?_addone+1)^0,c
  2212   0015A6                     l64:
  2213   0015A6  0012               	return		;funcret
  2214   0015A8                     __end_of_addone:
  2215                           	callstack 0
  2216                           
  2217 ;; *************** function _charToHexDigit *****************
  2218 ;; Defined at:
  2219 ;;		line 171 in file "main.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  c               1    wreg     unsigned char 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;  c               1   12[COMRAM] unsigned char 
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  1    wreg      unsigned char 
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, status,0
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2233 ;;      Params:         0       0       0       0       0       0       0
  2234 ;;      Locals:         1       0       0       0       0       0       0
  2235 ;;      Temps:          0       0       0       0       0       0       0
  2236 ;;      Totals:         1       0       0       0       0       0       0
  2237 ;;Total ram usage:        1 bytes
  2238 ;; Hardware stack levels used: 1
  2239 ;; Hardware stack levels required when called: 3
  2240 ;; This function calls:
  2241 ;;		Nothing
  2242 ;; This function is called by:
  2243 ;;		_do_write
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text12
  2248   0014AA                     __ptext12:
  2249                           	callstack 0
  2250   0014AA                     _charToHexDigit:
  2251                           	callstack 26
  2252                           
  2253                           ;incstack = 0
  2254                           ;charToHexDigit@c stored from wreg
  2255   0014AA  6E0D               	movwf	charToHexDigit@c^0,c
  2256   0014AC                     
  2257                           ;main.c: 171: uint8_t charToHexDigit(char c);main.c: 172: {;main.c: 173:   if (c >= 'a')
  2258   0014AC  0E60               	movlw	96
  2259   0014AE  640D               	cpfsgt	charToHexDigit@c^0,c
  2260   0014B0  EF5C  F00A         	goto	u1051
  2261   0014B4  EF5E  F00A         	goto	u1050
  2262   0014B8                     u1051:
  2263   0014B8  EF62  F00A         	goto	l1915
  2264   0014BC                     u1050:
  2265   0014BC                     
  2266                           ;main.c: 174:     return c - 'a' + 10;
  2267   0014BC  500D               	movf	charToHexDigit@c^0,w,c
  2268   0014BE  0FA9               	addlw	169
  2269   0014C0  EF70  F00A         	goto	l96
  2270   0014C4                     l1915:
  2271   0014C4  0E40               	movlw	64
  2272   0014C6  640D               	cpfsgt	charToHexDigit@c^0,c
  2273   0014C8  EF68  F00A         	goto	u1061
  2274   0014CC  EF6A  F00A         	goto	u1060
  2275   0014D0                     u1061:
  2276   0014D0  EF6E  F00A         	goto	l1923
  2277   0014D4                     u1060:
  2278   0014D4                     
  2279                           ;main.c: 176:     return c - 'A' + 10;
  2280   0014D4  500D               	movf	charToHexDigit@c^0,w,c
  2281   0014D6  0FC9               	addlw	201
  2282   0014D8  EF70  F00A         	goto	l96
  2283   0014DC                     l1923:
  2284                           
  2285                           ;main.c: 178:     return c - '0';
  2286   0014DC  500D               	movf	charToHexDigit@c^0,w,c
  2287   0014DE  0FD0               	addlw	208
  2288   0014E0                     l96:
  2289   0014E0  0012               	return		;funcret
  2290   0014E2                     __end_of_charToHexDigit:
  2291                           	callstack 0
  2292                           
  2293 ;; *************** function _do_read *****************
  2294 ;; Defined at:
  2295 ;;		line 357 in file "main.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;		None
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  s               1   92[COMRAM] PTR unsigned char 
  2300 ;;		 -> STR_6(14), 
  2301 ;;  data            1   93[COMRAM] unsigned char 
  2302 ;;  ads            16   76[COMRAM] unsigned char [16]
  2303 ;;  addr            2   95[COMRAM] unsigned short 
  2304 ;;  col             1   94[COMRAM] unsigned char 
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  1    wreg      void 
  2307 ;; Registers used:
  2308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2314 ;;      Params:         0       0       0       0       0       0       0
  2315 ;;      Locals:        21       0       0       0       0       0       0
  2316 ;;      Temps:          0       0       0       0       0       0       0
  2317 ;;      Totals:        21       0       0       0       0       0       0
  2318 ;;Total ram usage:       21 bytes
  2319 ;; Hardware stack levels used: 1
  2320 ;; Hardware stack levels required when called: 11
  2321 ;; This function calls:
  2322 ;;		_read_port
  2323 ;;		_setup_address
  2324 ;;		_sprintf
  2325 ;;		_uart_putc
  2326 ;;		_uart_puts
  2327 ;; This function is called by:
  2328 ;;		_main
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text13
  2333   000C10                     __ptext13:
  2334                           	callstack 0
  2335   000C10                     _do_read:
  2336                           	callstack 19
  2337   000C10                     
  2338                           ;main.c: 359:     uint16_t addr;;main.c: 360:     char ads[16];;main.c: 361:     uint8_t
      +                           col=0;
  2339   000C10  0E00               	movlw	0
  2340   000C12  6E5F               	movwf	do_read@col^0,c
  2341   000C14                     
  2342                           ;main.c: 364:     PORTBbits.RB4 = 0;
  2343   000C14  9881               	bcf	129,4,c	;volatile
  2344   000C16                     
  2345                           ;main.c: 366:     PORTBbits.RB1 = 1;
  2346   000C16  8281               	bsf	129,1,c	;volatile
  2347   000C18                     
  2348                           ;main.c: 368:     PORTBbits.RB3 = 0;
  2349   000C18  9681               	bcf	129,3,c	;volatile
  2350                           
  2351                           ;main.c: 371:     for (addr = 0; addr < 2048; ++addr) {
  2352   000C1A  0E00               	movlw	0
  2353   000C1C  6E61               	movwf	(do_read@addr+1)^0,c
  2354   000C1E  0E00               	movlw	0
  2355   000C20  6E60               	movwf	do_read@addr^0,c
  2356   000C22                     l2617:
  2357                           
  2358                           ;main.c: 372:         if (cmd_active == 0) {
  2359   000C22  506E               	movf	_cmd_active^0,w,c
  2360   000C24  A4D8               	btfss	status,2,c
  2361   000C26  EF17  F006         	goto	u1821
  2362   000C2A  EF19  F006         	goto	u1820
  2363   000C2E                     u1821:
  2364   000C2E  EF25  F006         	goto	l2625
  2365   000C32                     u1820:
  2366   000C32                     
  2367                           ;main.c: 373:             char *s = "Read aborted\n";
  2368   000C32  0E96               	movlw	low STR_6
  2369   000C34  6E5D               	movwf	do_read@s^0,c
  2370   000C36                     
  2371                           ;main.c: 374:             uart_puts(s);
  2372   000C36  C05D  F00D         	movff	do_read@s,uart_puts@s
  2373   000C3A  500D               	movf	uart_puts@s^0,w,c
  2374   000C3C  A4D8               	btfss	status,2,c
  2375   000C3E  0E06               	movlw	high __smallconst
  2376   000C40  6E0E               	movwf	(uart_puts@s+1)^0,c
  2377   000C42  ECCD  F007         	call	_uart_puts	;wreg free
  2378   000C46  EF73  F006         	goto	l129
  2379   000C4A                     l2625:
  2380                           
  2381                           ;main.c: 379:         setup_address(addr);
  2382   000C4A  C060  F00D         	movff	do_read@addr,setup_address@addr
  2383   000C4E  C061  F00E         	movff	do_read@addr+1,setup_address@addr+1
  2384   000C52  EC99  F008         	call	_setup_address	;wreg free
  2385   000C56                     
  2386                           ;main.c: 382:         uint8_t data = read_port();
  2387   000C56  EC8B  F00A         	call	_read_port	;wreg free
  2388   000C5A  6E5E               	movwf	do_read@data^0,c
  2389   000C5C                     
  2390                           ;main.c: 385:         if (col == 0) {
  2391   000C5C  505F               	movf	do_read@col^0,w,c
  2392   000C5E  A4D8               	btfss	status,2,c
  2393   000C60  EF34  F006         	goto	u1831
  2394   000C64  EF36  F006         	goto	u1830
  2395   000C68                     u1831:
  2396   000C68  EF45  F006         	goto	l2635
  2397   000C6C                     u1830:
  2398   000C6C                     
  2399                           ;main.c: 386:             sprintf(ads, "%04x: ", addr);
  2400   000C6C  0E4D               	movlw	low do_read@ads
  2401   000C6E  6E3A               	movwf	sprintf@s^0,c
  2402   000C70  0EB6               	movlw	low STR_7
  2403   000C72  6E3B               	movwf	sprintf@fmt^0,c
  2404   000C74  C060  F03C         	movff	do_read@addr,?_sprintf+2
  2405   000C78  C061  F03D         	movff	do_read@addr+1,?_sprintf+3
  2406   000C7C  EC71  F00A         	call	_sprintf	;wreg free
  2407   000C80                     
  2408                           ;main.c: 387:             uart_puts(ads);
  2409   000C80  0E4D               	movlw	low do_read@ads
  2410   000C82  6E0D               	movwf	uart_puts@s^0,c
  2411   000C84  6A0E               	clrf	(uart_puts@s+1)^0,c
  2412   000C86  ECCD  F007         	call	_uart_puts	;wreg free
  2413   000C8A                     l2635:
  2414                           
  2415                           ;main.c: 390:         sprintf(ads, "%02x", data);
  2416   000C8A  0E4D               	movlw	low do_read@ads
  2417   000C8C  6E3A               	movwf	sprintf@s^0,c
  2418   000C8E  0EBD               	movlw	low STR_8
  2419   000C90  6E3B               	movwf	sprintf@fmt^0,c
  2420   000C92  C05E  F03C         	movff	do_read@data,?_sprintf+2
  2421   000C96  6A3D               	clrf	(?_sprintf+3)^0,c
  2422   000C98  EC71  F00A         	call	_sprintf	;wreg free
  2423                           
  2424                           ;main.c: 391:         uart_puts(ads);
  2425   000C9C  0E4D               	movlw	low do_read@ads
  2426   000C9E  6E0D               	movwf	uart_puts@s^0,c
  2427   000CA0  6A0E               	clrf	(uart_puts@s+1)^0,c
  2428   000CA2  ECCD  F007         	call	_uart_puts	;wreg free
  2429   000CA6                     
  2430                           ;main.c: 392:         if (col == 15) {
  2431   000CA6  0E0F               	movlw	15
  2432   000CA8  185F               	xorwf	do_read@col^0,w,c
  2433   000CAA  A4D8               	btfss	status,2,c
  2434   000CAC  EF5A  F006         	goto	u1841
  2435   000CB0  EF5C  F006         	goto	u1840
  2436   000CB4                     u1841:
  2437   000CB4  EF63  F006         	goto	l2643
  2438   000CB8                     u1840:
  2439   000CB8                     
  2440                           ;main.c: 393:             col = 0;
  2441   000CB8  0E00               	movlw	0
  2442   000CBA  6E5F               	movwf	do_read@col^0,c
  2443   000CBC                     
  2444                           ;main.c: 394:             uart_putc('\n');
  2445   000CBC  0E0A               	movlw	10
  2446   000CBE  ECD4  F00A         	call	_uart_putc
  2447                           
  2448                           ;main.c: 395:         } else {
  2449   000CC2  EF67  F006         	goto	l2647
  2450   000CC6                     l2643:
  2451                           
  2452                           ;main.c: 396:             uart_putc(' ');
  2453   000CC6  0E20               	movlw	32
  2454   000CC8  ECD4  F00A         	call	_uart_putc
  2455   000CCC                     
  2456                           ;main.c: 397:             col++;
  2457   000CCC  2A5F               	incf	do_read@col^0,f,c
  2458   000CCE                     l2647:
  2459                           
  2460                           ;main.c: 399:     }
  2461   000CCE  4A60               	infsnz	do_read@addr^0,f,c
  2462   000CD0  2A61               	incf	(do_read@addr+1)^0,f,c
  2463   000CD2  0E08               	movlw	8
  2464   000CD4  5C61               	subwf	(do_read@addr+1)^0,w,c
  2465   000CD6  A0D8               	btfss	status,0,c
  2466   000CD8  EF70  F006         	goto	u1851
  2467   000CDC  EF72  F006         	goto	u1850
  2468   000CE0                     u1851:
  2469   000CE0  EF11  F006         	goto	l2617
  2470   000CE4                     u1850:
  2471   000CE4                     
  2472                           ;main.c: 402:     PORTBbits.RB1 = 0;
  2473   000CE4  9281               	bcf	129,1,c	;volatile
  2474   000CE6                     l129:
  2475   000CE6  0012               	return		;funcret
  2476   000CE8                     __end_of_do_read:
  2477                           	callstack 0
  2478                           
  2479 ;; *************** function _uart_putc *****************
  2480 ;; Defined at:
  2481 ;;		line 104 in file "uart.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  c               1    wreg     unsigned char 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  c               1   12[COMRAM] unsigned char 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2495 ;;      Params:         0       0       0       0       0       0       0
  2496 ;;      Locals:         1       0       0       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0
  2498 ;;      Totals:         1       0       0       0       0       0       0
  2499 ;;Total ram usage:        1 bytes
  2500 ;; Hardware stack levels used: 1
  2501 ;; Hardware stack levels required when called: 3
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_do_read
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text14
  2510   0015A8                     __ptext14:
  2511                           	callstack 0
  2512   0015A8                     _uart_putc:
  2513                           	callstack 26
  2514                           
  2515                           ;incstack = 0
  2516                           ;uart_putc@c stored from wreg
  2517   0015A8  6E0D               	movwf	uart_putc@c^0,c
  2518   0015AA                     
  2519                           ;uart.c: 104: void uart_putc(char c);uart.c: 105: {;uart.c: 107:     while (PIR1bits.TXI
      +                          F == 0) {
  2520   0015AA  EFD8  F00A         	goto	l209
  2521   0015AE                     l210:
  2522                           
  2523                           ;uart.c: 108:         __nop();
  2524   0015AE  0000               	nop	
  2525   0015B0                     l209:
  2526                           
  2527                           ;uart.c: 107:     while (PIR1bits.TXIF == 0) {
  2528   0015B0  A89E               	btfss	158,4,c	;volatile
  2529   0015B2  EFDD  F00A         	goto	u361
  2530   0015B6  EFDF  F00A         	goto	u360
  2531   0015BA                     u361:
  2532   0015BA  EFD7  F00A         	goto	l210
  2533   0015BE                     u360:
  2534   0015BE                     
  2535                           ;uart.c: 112:     TXREG = c;
  2536   0015BE  C00D  FFAD         	movff	uart_putc@c,4013	;volatile
  2537                           
  2538                           ;uart.c: 115:     while(TXSTAbits.TRMT == 0) {
  2539   0015C2  EFE4  F00A         	goto	l212
  2540   0015C6                     l213:
  2541                           
  2542                           ;uart.c: 116:         __nop();
  2543   0015C6  0000               	nop	
  2544   0015C8                     l212:
  2545                           
  2546                           ;uart.c: 115:     while(TXSTAbits.TRMT == 0) {
  2547   0015C8  A2AC               	btfss	172,1,c	;volatile
  2548   0015CA  EFE9  F00A         	goto	u371
  2549   0015CE  EFEB  F00A         	goto	u370
  2550   0015D2                     u371:
  2551   0015D2  EFE3  F00A         	goto	l213
  2552   0015D6                     u370:
  2553   0015D6  0012               	return		;funcret
  2554   0015D8                     __end_of_uart_putc:
  2555                           	callstack 0
  2556                           
  2557 ;; *************** function _do_blank *****************
  2558 ;; Defined at:
  2559 ;;		line 306 in file "main.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;		None
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  data            1   33[BANK0 ] unsigned char 
  2564 ;;  ads            32    0[BANK0 ] unsigned char [32]
  2565 ;;  addr            2   35[BANK0 ] unsigned short 
  2566 ;;  s               1   34[BANK0 ] PTR unsigned char 
  2567 ;;		 -> STR_5(20), STR_1(15), 
  2568 ;;  ok              1   32[BANK0 ] _Bool 
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  1    wreg      void 
  2571 ;; Registers used:
  2572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2578 ;;      Params:         0       0       0       0       0       0       0
  2579 ;;      Locals:         0      37       0       0       0       0       0
  2580 ;;      Temps:          0       0       0       0       0       0       0
  2581 ;;      Totals:         0      37       0       0       0       0       0
  2582 ;;Total ram usage:       37 bytes
  2583 ;; Hardware stack levels used: 1
  2584 ;; Hardware stack levels required when called: 11
  2585 ;; This function calls:
  2586 ;;		_read_port
  2587 ;;		_setup_address
  2588 ;;		_sprintf
  2589 ;;		_uart_puts
  2590 ;; This function is called by:
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text15
  2596   000B2A                     __ptext15:
  2597                           	callstack 0
  2598   000B2A                     _do_blank:
  2599                           	callstack 19
  2600   000B2A                     
  2601                           ;main.c: 308:     uint16_t addr;;main.c: 309:     char ads[32];;main.c: 310:     _Bool o
      +                          k = 1;
  2602   000B2A  0E01               	movlw	1
  2603   000B2C  0100               	movlb	0	; () banked
  2604   000B2E  6FA0               	movwf	do_blank@ok& (0+255),b
  2605   000B30                     
  2606                           ; BSR set to: 0
  2607                           ;main.c: 311:     char *s;;main.c: 314:     PORTBbits.RB1 = 1;
  2608   000B30  8281               	bsf	129,1,c	;volatile
  2609   000B32                     
  2610                           ; BSR set to: 0
  2611                           ;main.c: 316:     PORTBbits.RB3 = 0;
  2612   000B32  9681               	bcf	129,3,c	;volatile
  2613   000B34                     
  2614                           ; BSR set to: 0
  2615                           ;main.c: 318:     PORTBbits.RB4 = 0;
  2616   000B34  9881               	bcf	129,4,c	;volatile
  2617                           
  2618                           ;main.c: 320:     for (addr = 0; addr < 2048; ++addr) {
  2619   000B36  0E00               	movlw	0
  2620   000B38  6FA4               	movwf	(do_blank@addr+1)& (0+255),b
  2621   000B3A  0E00               	movlw	0
  2622   000B3C  6FA3               	movwf	do_blank@addr& (0+255),b
  2623   000B3E                     l2571:
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;main.c: 321:         if (cmd_active == 0) {
  2627   000B3E  506E               	movf	_cmd_active^0,w,c
  2628   000B40  A4D8               	btfss	status,2,c
  2629   000B42  EFA5  F005         	goto	u1781
  2630   000B46  EFA7  F005         	goto	u1780
  2631   000B4A                     u1781:
  2632   000B4A  EFB3  F005         	goto	l2579
  2633   000B4E                     u1780:
  2634   000B4E                     
  2635                           ; BSR set to: 0
  2636                           ;main.c: 322:             s = "Check aborted\n";
  2637   000B4E  0E87               	movlw	low STR_1
  2638   000B50  6FA2               	movwf	do_blank@s& (0+255),b
  2639   000B52                     l2575:
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;main.c: 323:             uart_puts(s);
  2643   000B52  C0A2  F00D         	movff	do_blank@s,uart_puts@s
  2644   000B56  500D               	movf	uart_puts@s^0,w,c
  2645   000B58  A4D8               	btfss	status,2,c
  2646   000B5A  0E06               	movlw	high __smallconst
  2647   000B5C  6E0E               	movwf	(uart_puts@s+1)^0,c
  2648   000B5E  ECCD  F007         	call	_uart_puts	;wreg free
  2649   000B62  EF07  F006         	goto	l121
  2650   000B66                     l2579:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;main.c: 328:         setup_address(addr);
  2654   000B66  C0A3  F00D         	movff	do_blank@addr,setup_address@addr
  2655   000B6A  C0A4  F00E         	movff	do_blank@addr+1,setup_address@addr+1
  2656   000B6E  EC99  F008         	call	_setup_address	;wreg free
  2657   000B72                     
  2658                           ;main.c: 331:         uint8_t data = read_port();
  2659   000B72  EC8B  F00A         	call	_read_port	;wreg free
  2660   000B76  0100               	movlb	0	; () banked
  2661   000B78  6FA1               	movwf	do_blank@data& (0+255),b
  2662   000B7A                     
  2663                           ; BSR set to: 0
  2664                           ;main.c: 333:         if (data != 0xff) {
  2665   000B7A  29A1               	incf	do_blank@data& (0+255),w,b
  2666   000B7C  B4D8               	btfsc	status,2,c
  2667   000B7E  EFC3  F005         	goto	u1791
  2668   000B82  EFC5  F005         	goto	u1790
  2669   000B86                     u1791:
  2670   000B86  EFEF  F005         	goto	l2595
  2671   000B8A                     u1790:
  2672   000B8A                     
  2673                           ; BSR set to: 0
  2674                           ;main.c: 334:             uart_puts("Blank check fail at address ");
  2675   000B8A  0E2B               	movlw	low STR_2
  2676   000B8C  6E0D               	movwf	uart_puts@s^0,c
  2677   000B8E  500D               	movf	uart_puts@s^0,w,c
  2678   000B90  A4D8               	btfss	status,2,c
  2679   000B92  0E06               	movlw	high __smallconst
  2680   000B94  6E0E               	movwf	(uart_puts@s+1)^0,c
  2681   000B96  ECCD  F007         	call	_uart_puts	;wreg free
  2682   000B9A                     
  2683                           ;main.c: 335:             sprintf(ads, "0x%04x = ", addr);
  2684   000B9A  0E80               	movlw	low do_blank@ads
  2685   000B9C  6E3A               	movwf	sprintf@s^0,c
  2686   000B9E  0EA4               	movlw	low STR_3
  2687   000BA0  6E3B               	movwf	sprintf@fmt^0,c
  2688   000BA2  C0A3  F03C         	movff	do_blank@addr,?_sprintf+2
  2689   000BA6  C0A4  F03D         	movff	do_blank@addr+1,?_sprintf+3
  2690   000BAA  EC71  F00A         	call	_sprintf	;wreg free
  2691   000BAE                     
  2692                           ;main.c: 336:             uart_puts(ads);
  2693   000BAE  0E80               	movlw	low do_blank@ads
  2694   000BB0  6E0D               	movwf	uart_puts@s^0,c
  2695   000BB2  6A0E               	clrf	(uart_puts@s+1)^0,c
  2696   000BB4  ECCD  F007         	call	_uart_puts	;wreg free
  2697                           
  2698                           ;main.c: 337:             sprintf(ads, "0x%02x\n", data);
  2699   000BB8  0E80               	movlw	low do_blank@ads
  2700   000BBA  6E3A               	movwf	sprintf@s^0,c
  2701   000BBC  0EAE               	movlw	low STR_4
  2702   000BBE  6E3B               	movwf	sprintf@fmt^0,c
  2703   000BC0  C0A1  F03C         	movff	do_blank@data,?_sprintf+2
  2704   000BC4  6A3D               	clrf	(?_sprintf+3)^0,c
  2705   000BC6  EC71  F00A         	call	_sprintf	;wreg free
  2706   000BCA                     
  2707                           ;main.c: 338:             uart_puts(ads);
  2708   000BCA  0E80               	movlw	low do_blank@ads
  2709   000BCC  6E0D               	movwf	uart_puts@s^0,c
  2710   000BCE  6A0E               	clrf	(uart_puts@s+1)^0,c
  2711   000BD0  ECCD  F007         	call	_uart_puts	;wreg free
  2712   000BD4                     
  2713                           ;main.c: 339:             ok = 0;
  2714   000BD4  0E00               	movlw	0
  2715   000BD6  0100               	movlb	0	; () banked
  2716   000BD8  6FA0               	movwf	do_blank@ok& (0+255),b
  2717                           
  2718                           ;main.c: 340:             break;
  2719   000BDA  EFFA  F005         	goto	l119
  2720   000BDE                     l2595:
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;main.c: 342:     }
  2724   000BDE  4BA3               	infsnz	do_blank@addr& (0+255),f,b
  2725   000BE0  2BA4               	incf	(do_blank@addr+1)& (0+255),f,b
  2726   000BE2                     
  2727                           ; BSR set to: 0
  2728   000BE2  0E08               	movlw	8
  2729   000BE4  5DA4               	subwf	(do_blank@addr+1)& (0+255),w,b
  2730   000BE6  A0D8               	btfss	status,0,c
  2731   000BE8  EFF8  F005         	goto	u1801
  2732   000BEC  EFFA  F005         	goto	u1800
  2733   000BF0                     u1801:
  2734   000BF0  EF9F  F005         	goto	l2571
  2735   000BF4                     u1800:
  2736   000BF4                     l119:
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;main.c: 345:     PORTBbits.RB1 = 0;
  2740   000BF4  9281               	bcf	129,1,c	;volatile
  2741   000BF6                     
  2742                           ; BSR set to: 0
  2743                           ;main.c: 347:     if (ok) {
  2744   000BF6  51A0               	movf	do_blank@ok& (0+255),w,b
  2745   000BF8  B4D8               	btfsc	status,2,c
  2746   000BFA  EF01  F006         	goto	u1811
  2747   000BFE  EF03  F006         	goto	u1810
  2748   000C02                     u1811:
  2749   000C02  EF07  F006         	goto	l121
  2750   000C06                     u1810:
  2751   000C06                     
  2752                           ; BSR set to: 0
  2753                           ;main.c: 348:         s = "Passed blank check\n";
  2754   000C06  0E64               	movlw	low STR_5
  2755   000C08  6FA2               	movwf	do_blank@s& (0+255),b
  2756   000C0A  EFA9  F005         	goto	l2575
  2757   000C0E                     l121:
  2758   000C0E  0012               	return		;funcret
  2759   000C10                     __end_of_do_blank:
  2760                           	callstack 0
  2761                           
  2762 ;; *************** function _uart_puts *****************
  2763 ;; Defined at:
  2764 ;;		line 151 in file "uart.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;  s               2   12[COMRAM] PTR unsigned char 
  2767 ;;		 -> uart_printf@buf(64), do_write@ads(48), STR_9(15), do_read@ads(16), 
  2768 ;;		 -> STR_6(14), STR_5(20), do_blank@ads(32), STR_2(29), 
  2769 ;;		 -> STR_1(15), 
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  p               2   14[COMRAM] PTR unsigned char 
  2772 ;;		 -> uart_printf@buf(64), do_write@ads(48), STR_9(15), do_read@ads(16), 
  2773 ;;		 -> STR_6(14), STR_5(20), do_blank@ads(32), STR_2(29), 
  2774 ;;		 -> STR_1(15), 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2784 ;;      Params:         2       0       0       0       0       0       0
  2785 ;;      Locals:         2       0       0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0
  2787 ;;      Totals:         4       0       0       0       0       0       0
  2788 ;;Total ram usage:        4 bytes
  2789 ;; Hardware stack levels used: 1
  2790 ;; Hardware stack levels required when called: 3
  2791 ;; This function calls:
  2792 ;;		Nothing
  2793 ;; This function is called by:
  2794 ;;		_do_blank
  2795 ;;		_do_read
  2796 ;;		_do_write
  2797 ;;		_uart_printf
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text16
  2802   000F9A                     __ptext16:
  2803                           	callstack 0
  2804   000F9A                     _uart_puts:
  2805                           	callstack 26
  2806   000F9A                     
  2807                           ;uart.c: 151: void uart_puts(char *s);uart.c: 152: {;uart.c: 154:     while (PIR1bits.TX
      +                          IF == 0) {
  2808   000F9A  EFD0  F007         	goto	l226
  2809   000F9E                     l227:
  2810                           
  2811                           ;uart.c: 155:         __nop();
  2812   000F9E  0000               	nop	
  2813   000FA0                     l226:
  2814                           
  2815                           ;uart.c: 154:     while (PIR1bits.TXIF == 0) {
  2816   000FA0  A89E               	btfss	158,4,c	;volatile
  2817   000FA2  EFD5  F007         	goto	u1731
  2818   000FA6  EFD7  F007         	goto	u1730
  2819   000FAA                     u1731:
  2820   000FAA  EFCF  F007         	goto	l227
  2821   000FAE                     u1730:
  2822   000FAE                     
  2823                           ;uart.c: 159:     char *p = s;
  2824   000FAE  C00D  F00F         	movff	uart_puts@s,uart_puts@p
  2825   000FB2  C00E  F010         	movff	uart_puts@s+1,uart_puts@p+1
  2826                           
  2827                           ;uart.c: 160:     while (*p) {
  2828   000FB6  EFFA  F007         	goto	l2545
  2829   000FBA                     l2541:
  2830                           
  2831                           ;uart.c: 161:         TXREG = *p++;
  2832   000FBA  C00F  FFF6         	movff	uart_puts@p,tblptrl
  2833   000FBE  C010  FFF7         	movff	uart_puts@p+1,tblptrh
  2834   000FC2  6AF8               	clrf	tblptru,c
  2835   000FC4  0E05               	movlw	(high __ramtop+-1)
  2836   000FC6  64F7               	cpfsgt	tblptrh,c
  2837   000FC8  D003               	bra	u1747
  2838   000FCA  0008               	tblrd		*
  2839   000FCC  50F5               	movf	tablat,w,c
  2840   000FCE  D005               	bra	u1740
  2841   000FD0                     u1747:
  2842   000FD0  CFF6 FFE1          	movff	tblptrl,fsr1l
  2843   000FD4  CFF7 FFE2          	movff	tblptrh,fsr1h
  2844   000FD8  50E7               	movf	indf1,w,c
  2845   000FDA                     u1740:
  2846   000FDA  6EAD               	movwf	173,c	;volatile
  2847   000FDC  4A0F               	infsnz	uart_puts@p^0,f,c
  2848   000FDE  2A10               	incf	(uart_puts@p+1)^0,f,c
  2849                           
  2850                           ;uart.c: 162:         while(TXSTAbits.TRMT == 0) {
  2851   000FE0  EFF3  F007         	goto	l231
  2852   000FE4                     l232:
  2853                           
  2854                           ;uart.c: 163:             __nop();
  2855   000FE4  0000               	nop	
  2856   000FE6                     l231:
  2857                           
  2858                           ;uart.c: 162:         while(TXSTAbits.TRMT == 0) {
  2859   000FE6  A2AC               	btfss	172,1,c	;volatile
  2860   000FE8  EFF8  F007         	goto	u1751
  2861   000FEC  EFFA  F007         	goto	u1750
  2862   000FF0                     u1751:
  2863   000FF0  EFF2  F007         	goto	l232
  2864   000FF4                     u1750:
  2865   000FF4                     l2545:
  2866                           
  2867                           ;uart.c: 160:     while (*p) {
  2868   000FF4  C00F  FFF6         	movff	uart_puts@p,tblptrl
  2869   000FF8  C010  FFF7         	movff	uart_puts@p+1,tblptrh
  2870   000FFC  6AF8               	clrf	tblptru,c
  2871   000FFE  0E05               	movlw	(high __ramtop+-1)
  2872   001000  64F7               	cpfsgt	tblptrh,c
  2873   001002  D003               	bra	u1767
  2874   001004  0008               	tblrd		*
  2875   001006  50F5               	movf	tablat,w,c
  2876   001008  D005               	bra	u1760
  2877   00100A                     u1767:
  2878   00100A  CFF6 FFE1          	movff	tblptrl,fsr1l
  2879   00100E  CFF7 FFE2          	movff	tblptrh,fsr1h
  2880   001012  50E7               	movf	indf1,w,c
  2881   001014                     u1760:
  2882   001014  0900               	iorlw	0
  2883   001016  A4D8               	btfss	status,2,c
  2884   001018  EF10  F008         	goto	u1771
  2885   00101C  EF12  F008         	goto	u1770
  2886   001020                     u1771:
  2887   001020  EFDD  F007         	goto	l2541
  2888   001024                     u1770:
  2889   001024  0012               	return		;funcret
  2890   001026                     __end_of_uart_puts:
  2891                           	callstack 0
  2892                           
  2893 ;; *************** function _sprintf *****************
  2894 ;; Defined at:
  2895 ;;		line 9 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/nf_sprintf.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;  s               1   57[COMRAM] PTR unsigned char 
  2898 ;;		 -> do_write@ads(48), do_read@ads(16), do_blank@ads(32), 
  2899 ;;  fmt             1   58[COMRAM] PTR const unsigned char 
  2900 ;;		 -> STR_11(28), STR_10(42), STR_8(5), STR_7(7), 
  2901 ;;		 -> STR_4(8), STR_3(10), 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;  f              12   64[COMRAM] struct _IO_FILE
  2904 ;;  ret             2    0        int 
  2905 ;;  ap              1   63[COMRAM] PTR void [1]
  2906 ;;		 -> ?_sprintf(2), 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  2   57[COMRAM] int 
  2909 ;; Registers used:
  2910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2916 ;;      Params:         6       0       0       0       0       0       0
  2917 ;;      Locals:        13       0       0       0       0       0       0
  2918 ;;      Temps:          0       0       0       0       0       0       0
  2919 ;;      Totals:        19       0       0       0       0       0       0
  2920 ;;Total ram usage:       19 bytes
  2921 ;; Hardware stack levels used: 1
  2922 ;; Hardware stack levels required when called: 10
  2923 ;; This function calls:
  2924 ;;		_vfprintf
  2925 ;; This function is called by:
  2926 ;;		_do_blank
  2927 ;;		_do_read
  2928 ;;		_do_write
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text17
  2933   0014E2                     __ptext17:
  2934                           	callstack 0
  2935   0014E2                     _sprintf:
  2936                           	callstack 19
  2937   0014E2  0E3C               	movlw	low (?_sprintf+2)
  2938   0014E4  6E40               	movwf	sprintf@ap^0,c
  2939   0014E6  C03A  F041         	movff	sprintf@s,sprintf@f
  2940   0014EA  0E00               	movlw	0
  2941   0014EC  6E45               	movwf	(sprintf@f+4)^0,c
  2942   0014EE  0E00               	movlw	0
  2943   0014F0  6E44               	movwf	(sprintf@f+3)^0,c
  2944   0014F2  0E00               	movlw	0
  2945   0014F4  6E4C               	movwf	(sprintf@f+11)^0,c
  2946   0014F6  0E00               	movlw	0
  2947   0014F8  6E4B               	movwf	(sprintf@f+10)^0,c
  2948   0014FA  0E41               	movlw	low sprintf@f
  2949   0014FC  6E36               	movwf	vfprintf@fp^0,c
  2950   0014FE  C03B  F037         	movff	sprintf@fmt,vfprintf@fmt
  2951   001502  0E40               	movlw	low sprintf@ap
  2952   001504  6E38               	movwf	vfprintf@ap^0,c
  2953   001506  ECFC  F009         	call	_vfprintf	;wreg free
  2954   00150A  503A               	movf	sprintf@s^0,w,c
  2955   00150C  2444               	addwf	(sprintf@f+3)^0,w,c
  2956   00150E  6ED9               	movwf	fsr2l,c
  2957   001510  6ADA               	clrf	fsr2h,c
  2958   001512  6ADF               	clrf	indf2,c
  2959   001514  0012               	return		;funcret
  2960   001516                     __end_of_sprintf:
  2961                           	callstack 0
  2962                           
  2963 ;; *************** function _vfprintf *****************
  2964 ;; Defined at:
  2965 ;;		line 1817 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  2966 ;; Parameters:    Size  Location     Type
  2967 ;;  fp              1   53[COMRAM] PTR struct _IO_FILE
  2968 ;;		 -> sprintf@f(12), 
  2969 ;;  fmt             1   54[COMRAM] PTR const unsigned char 
  2970 ;;		 -> STR_11(28), STR_10(42), STR_8(5), STR_7(7), 
  2971 ;;		 -> STR_4(8), STR_3(10), 
  2972 ;;  ap              1   55[COMRAM] PTR PTR void 
  2973 ;;		 -> sprintf@ap(1), 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  cfmt            1   56[COMRAM] PTR unsigned char 
  2976 ;;		 -> STR_11(28), STR_10(42), STR_8(5), STR_7(7), 
  2977 ;;		 -> STR_4(8), STR_3(10), 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;                  2   53[COMRAM] int 
  2980 ;; Registers used:
  2981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2987 ;;      Params:         3       0       0       0       0       0       0
  2988 ;;      Locals:         1       0       0       0       0       0       0
  2989 ;;      Temps:          0       0       0       0       0       0       0
  2990 ;;      Totals:         4       0       0       0       0       0       0
  2991 ;;Total ram usage:        4 bytes
  2992 ;; Hardware stack levels used: 1
  2993 ;; Hardware stack levels required when called: 9
  2994 ;; This function calls:
  2995 ;;		_vfpfcnvrt
  2996 ;; This function is called by:
  2997 ;;		_sprintf
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           	psect	text18
  3002   0013F8                     __ptext18:
  3003                           	callstack 0
  3004   0013F8                     _vfprintf:
  3005                           	callstack 19
  3006   0013F8                     
  3007                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1817: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.46/pic/sources/c99/
      +                          common/doprnt.c: 1818: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt
      +                          .c: 1820:     char *cfmt;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprn
      +                          t.c: 1822:     cfmt = (char *)fmt;
  3008   0013F8  C037  F039         	movff	vfprintf@fmt,vfprintf@cfmt
  3009                           
  3010                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  3011   0013FC  EF08  F00A         	goto	l2495
  3012   001400                     l2493:
  3013                           
  3014                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1830:    vfpfcnvrt(f
      +                          p, &cfmt, ap);
  3015   001400  C036  F02D         	movff	vfprintf@fp,vfpfcnvrt@fp
  3016   001404  0E39               	movlw	low vfprintf@cfmt
  3017   001406  6E2E               	movwf	vfpfcnvrt@fmt^0,c
  3018   001408  C038  F02F         	movff	vfprintf@ap,vfpfcnvrt@ap
  3019   00140C  EC62  F003         	call	_vfpfcnvrt	;wreg free
  3020   001410                     l2495:
  3021                           
  3022                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1826:     while (*cf
      +                          mt) {
  3023   001410  C039  FFF6         	movff	vfprintf@cfmt,tblptrl
  3024   001414                     	if	1	;There is more than 1 active tblptr byte
  3025   001414  0E06               	movlw	high __smallconst
  3026   001416  6EF7               	movwf	tblptrh,c
  3027   001418                     	endif
  3028   001418                     	if	0	;tblptru may be non-zero
  3029   001418                     	endif
  3030   001418                     	if	0	;tblptru may be non-zero
  3031   001418                     	endif
  3032   001418  0008               	tblrd		*
  3033   00141A  50F5               	movf	tablat,w,c
  3034   00141C  0900               	iorlw	0
  3035   00141E  A4D8               	btfss	status,2,c
  3036   001420  EF14  F00A         	goto	u1721
  3037   001424  EF16  F00A         	goto	u1720
  3038   001428                     u1721:
  3039   001428  EF00  F00A         	goto	l2493
  3040   00142C                     u1720:
  3041   00142C                     
  3042                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1835:  return 0;
  3043   00142C  0E00               	movlw	0
  3044   00142E  6E37               	movwf	(?_vfprintf+1)^0,c
  3045   001430  0E00               	movlw	0
  3046   001432  6E36               	movwf	?_vfprintf^0,c
  3047   001434  0012               	return		;funcret
  3048   001436                     __end_of_vfprintf:
  3049                           	callstack 0
  3050                           
  3051 ;; *************** function _vfpfcnvrt *****************
  3052 ;; Defined at:
  3053 ;;		line 1177 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;  fp              1   44[COMRAM] PTR struct _IO_FILE
  3056 ;;		 -> sprintf@f(12), 
  3057 ;;  fmt             1   45[COMRAM] PTR PTR unsigned char 
  3058 ;;		 -> vfprintf@cfmt(1), 
  3059 ;;  ap              1   46[COMRAM] PTR PTR void 
  3060 ;;		 -> sprintf@ap(1), 
  3061 ;; Auto vars:     Size  Location     Type
  3062 ;;  convarg         4   47[COMRAM] struct .
  3063 ;;  cp              1   52[COMRAM] PTR unsigned char 
  3064 ;;		 -> STR_11(28), STR_10(42), STR_8(5), STR_7(7), 
  3065 ;;		 -> STR_4(8), STR_3(10), 
  3066 ;;  done            1   51[COMRAM] _Bool 
  3067 ;;  c               1    0        unsigned char 
  3068 ;; Return value:  Size  Location     Type
  3069 ;;                  1    wreg      void 
  3070 ;; Registers used:
  3071 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3072 ;; Tracked objects:
  3073 ;;		On entry : 0/0
  3074 ;;		On exit  : 0/0
  3075 ;;		Unchanged: 0/0
  3076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3077 ;;      Params:         3       0       0       0       0       0       0
  3078 ;;      Locals:         6       0       0       0       0       0       0
  3079 ;;      Temps:          0       0       0       0       0       0       0
  3080 ;;      Totals:         9       0       0       0       0       0       0
  3081 ;;Total ram usage:        9 bytes
  3082 ;; Hardware stack levels used: 1
  3083 ;; Hardware stack levels required when called: 8
  3084 ;; This function calls:
  3085 ;;		_fputc
  3086 ;;		_read_prec_or_width
  3087 ;;		_xtoa
  3088 ;; This function is called by:
  3089 ;;		_vfprintf
  3090 ;; This function uses a non-reentrant model
  3091 ;;
  3092                           
  3093                           	psect	text19
  3094   0006C4                     __ptext19:
  3095                           	callstack 0
  3096   0006C4                     _vfpfcnvrt:
  3097                           	callstack 19
  3098   0006C4                     
  3099                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1177: vfpfcnvrt(FILE
      +                           *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/
      +                          doprnt.c: 1178: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 117
      +                          9:     char c, *cp;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1
      +                          180:     _Bool done;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 
      +                          1188:  } convarg;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 120
      +                          1:     if ((*fmt)[0] == '%') {
  3100   0006C4  502E               	movf	vfpfcnvrt@fmt^0,w,c
  3101   0006C6  6ED9               	movwf	fsr2l,c
  3102   0006C8  6ADA               	clrf	fsr2h,c
  3103   0006CA  CFDF FFF6          	movff	indf2,tblptrl
  3104   0006CE                     	if	1	;There is more than 1 active tblptr byte
  3105   0006CE  0E06               	movlw	high __smallconst
  3106   0006D0  6EF7               	movwf	tblptrh,c
  3107   0006D2                     	endif
  3108   0006D2                     	if	0	;tblptru may be non-zero
  3109   0006D2                     	endif
  3110   0006D2                     	if	0	;tblptru may be non-zero
  3111   0006D2                     	endif
  3112   0006D2  0008               	tblrd		*
  3113   0006D4  50F5               	movf	tablat,w,c
  3114   0006D6  0A25               	xorlw	37
  3115   0006D8  A4D8               	btfss	status,2,c
  3116   0006DA  EF71  F003         	goto	u1681
  3117   0006DE  EF73  F003         	goto	u1680
  3118   0006E2                     u1681:
  3119   0006E2  EFFE  F003         	goto	l2485
  3120   0006E6                     u1680:
  3121   0006E6                     
  3122                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1202:         ++*fmt
      +                          ;
  3123   0006E6  502E               	movf	vfpfcnvrt@fmt^0,w,c
  3124   0006E8  6ED9               	movwf	fsr2l,c
  3125   0006EA  6ADA               	clrf	fsr2h,c
  3126   0006EC  2ADF               	incf	indf2,f,c
  3127   0006EE                     
  3128                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1204:         flags 
      +                          = width = 0;
  3129   0006EE  0E00               	movlw	0
  3130   0006F0  6E66               	movwf	(_width+1)^0,c
  3131   0006F2  0E00               	movlw	0
  3132   0006F4  6E65               	movwf	_width^0,c
  3133   0006F6  C065  F06D         	movff	_width,_flags
  3134   0006FA                     
  3135                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1205:         prec =
      +                           -1;
  3136   0006FA  0100               	movlb	0	; () banked
  3137   0006FC  69B8               	setf	_prec& (0+255),b
  3138   0006FE  69B9               	setf	(_prec+1)& (0+255),b
  3139   000700                     
  3140                           ; BSR set to: 0
  3141                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1209:         done =
      +                           0;
  3142   000700  0E00               	movlw	0
  3143   000702  6E34               	movwf	vfpfcnvrt@done^0,c
  3144                           
  3145                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1210:         while 
      +                          (!done) {
  3146   000704  EF9E  F003         	goto	l2457
  3147   000708                     l2447:
  3148                           
  3149                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1220:               
      +                                flags |= (1 << 1);
  3150   000708  826D               	bsf	_flags^0,1,c
  3151   00070A                     
  3152                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1221:               
      +                                ++*fmt;
  3153   00070A  502E               	movf	vfpfcnvrt@fmt^0,w,c
  3154   00070C  6ED9               	movwf	fsr2l,c
  3155   00070E  6ADA               	clrf	fsr2h,c
  3156   000710  2ADF               	incf	indf2,f,c
  3157                           
  3158                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1222:               
      +                                break;
  3159   000712  EF9E  F003         	goto	l2457
  3160   000716                     l2451:
  3161                           
  3162                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1243:               
      +                                done = 1;
  3163   000716  0E01               	movlw	1
  3164   000718  6E34               	movwf	vfpfcnvrt@done^0,c
  3165                           
  3166                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1244:               
      +                                break;
  3167   00071A  EF9E  F003         	goto	l2457
  3168   00071E                     l2455:
  3169   00071E  502E               	movf	vfpfcnvrt@fmt^0,w,c
  3170   000720  6ED9               	movwf	fsr2l,c
  3171   000722  6ADA               	clrf	fsr2h,c
  3172   000724  CFDF FFF6          	movff	indf2,tblptrl
  3173   000728                     	if	1	;There is more than 1 active tblptr byte
  3174   000728  0E06               	movlw	high __smallconst
  3175   00072A  6EF7               	movwf	tblptrh,c
  3176   00072C                     	endif
  3177   00072C                     	if	0	;tblptru may be non-zero
  3178   00072C                     	endif
  3179   00072C                     	if	0	;tblptru may be non-zero
  3180   00072C                     	endif
  3181   00072C  0008               	tblrd		*
  3182   00072E  50F5               	movf	tablat,w,c
  3183                           
  3184                           ; Switch size 1, requested type "simple"
  3185                           ; Number of cases is 1, Range of values is 48 to 48
  3186                           ; switch strategies available:
  3187                           ; Name         Instructions Cycles
  3188                           ; simple_byte            4     3 (average)
  3189                           ;	Chosen strategy is simple_byte
  3190   000730  0A30               	xorlw	48	; case 48
  3191   000732  B4D8               	btfsc	status,2,c
  3192   000734  EF84  F003         	goto	l2447
  3193   000738  EF8B  F003         	goto	l2451
  3194   00073C                     l2457:
  3195                           
  3196                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1210:         while 
      +                          (!done) {
  3197   00073C  5034               	movf	vfpfcnvrt@done^0,w,c
  3198   00073E  B4D8               	btfsc	status,2,c
  3199   000740  EFA4  F003         	goto	u1691
  3200   000744  EFA6  F003         	goto	u1690
  3201   000748                     u1691:
  3202   000748  EF8F  F003         	goto	l2455
  3203   00074C                     u1690:
  3204   00074C                     
  3205                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1256:   width = read
      +                          _prec_or_width(fmt, ap);
  3206   00074C  C02E  F013         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  3207   000750  C02F  F014         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  3208   000754  EC28  F007         	call	_read_prec_or_width	;wreg free
  3209   000758  C013  F065         	movff	?_read_prec_or_width,_width
  3210   00075C  C014  F066         	movff	?_read_prec_or_width+1,_width+1
  3211   000760                     
  3212                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1257:   if (width < 
      +                          0) {
  3213   000760  BE66               	btfsc	(_width+1)^0,7,c
  3214   000762  EFB7  F003         	goto	u1700
  3215   000766  EFB5  F003         	goto	u1701
  3216   00076A                     u1701:
  3217   00076A  EFBC  F003         	goto	l2465
  3218   00076E                     u1700:
  3219   00076E                     
  3220                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1258:    flags |= (1
      +                           << 0);
  3221   00076E  806D               	bsf	_flags^0,0,c
  3222                           
  3223                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1259:    width = -wi
      +                          dth;
  3224   000770  6C65               	negf	_width^0,c
  3225   000772  1E66               	comf	(_width+1)^0,f,c
  3226   000774  B0D8               	btfsc	status,0,c
  3227   000776  2A66               	incf	(_width+1)^0,f,c
  3228   000778                     l2465:
  3229                           
  3230                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1439:   if (0
  3231   000778  502E               	movf	vfpfcnvrt@fmt^0,w,c
  3232   00077A  6ED9               	movwf	fsr2l,c
  3233   00077C  6ADA               	clrf	fsr2h,c
  3234   00077E  50DF               	movf	indf2,w,c
  3235   000780  6E35               	movwf	vfpfcnvrt@cp^0,c
  3236   000782  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3237   000786                     	if	1	;There is more than 1 active tblptr byte
  3238   000786  0E06               	movlw	high __smallconst
  3239   000788  6EF7               	movwf	tblptrh,c
  3240   00078A                     	endif
  3241   00078A                     	if	0	;tblptru may be non-zero
  3242   00078A                     	endif
  3243   00078A                     	if	0	;tblptru may be non-zero
  3244   00078A                     	endif
  3245   00078A  0008               	tblrd		*
  3246   00078C  50F5               	movf	tablat,w,c
  3247   00078E  0A78               	xorlw	120
  3248   000790  A4D8               	btfss	status,2,c
  3249   000792  EFCD  F003         	goto	u1711
  3250   000796  EFCF  F003         	goto	u1710
  3251   00079A                     u1711:
  3252   00079A  EFF8  F003         	goto	l2481
  3253   00079E                     u1710:
  3254   00079E                     
  3255                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1452:     ) {;/Appli
      +                          cations/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1495:    convarg.uint = (vf
      +                          pf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
  3256   00079E  502F               	movf	vfpfcnvrt@ap^0,w,c
  3257   0007A0  6ED9               	movwf	fsr2l,c
  3258   0007A2  6ADA               	clrf	fsr2h,c
  3259   0007A4  0E02               	movlw	2
  3260   0007A6  26DF               	addwf	indf2,f,c
  3261   0007A8  5CDF               	subwf	indf2,w,c
  3262   0007AA  6ED9               	movwf	fsr2l,c
  3263   0007AC  6ADA               	clrf	fsr2h,c
  3264   0007AE  CFDE F030          	movff	postinc2,vfpfcnvrt@convarg
  3265   0007B2  CFDE F031          	movff	postinc2,vfpfcnvrt@convarg+1
  3266   0007B6                     
  3267                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1497:    *fmt = cp+1
      +                          ;
  3268   0007B6  502E               	movf	vfpfcnvrt@fmt^0,w,c
  3269   0007B8  6ED9               	movwf	fsr2l,c
  3270   0007BA  6ADA               	clrf	fsr2h,c
  3271   0007BC  2835               	incf	vfpfcnvrt@cp^0,w,c
  3272   0007BE  6EDF               	movwf	indf2,c
  3273                           
  3274                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1498:    switch (*cp
      +                          ) {
  3275   0007C0  EFEC  F003         	goto	l2479
  3276   0007C4                     l2473:
  3277                           
  3278                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1586:      return (v
      +                          oid) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
  3279   0007C4  C02D  F021         	movff	vfpfcnvrt@fp,xtoa@fp
  3280   0007C8  C030  F022         	movff	vfpfcnvrt@convarg,xtoa@d
  3281   0007CC  C031  F023         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  3282   0007D0  ECA3  F004         	call	_xtoa	;wreg free
  3283   0007D4  EF0F  F004         	goto	l985
  3284   0007D8                     l2479:
  3285   0007D8  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3286   0007DC                     	if	1	;There is more than 1 active tblptr byte
  3287   0007DC  0E06               	movlw	high __smallconst
  3288   0007DE  6EF7               	movwf	tblptrh,c
  3289   0007E0                     	endif
  3290   0007E0                     	if	0	;tblptru may be non-zero
  3291   0007E0                     	endif
  3292   0007E0                     	if	0	;tblptru may be non-zero
  3293   0007E0                     	endif
  3294   0007E0  0008               	tblrd		*
  3295   0007E2  50F5               	movf	tablat,w,c
  3296                           
  3297                           ; Switch size 1, requested type "simple"
  3298                           ; Number of cases is 1, Range of values is 120 to 120
  3299                           ; switch strategies available:
  3300                           ; Name         Instructions Cycles
  3301                           ; simple_byte            4     3 (average)
  3302                           ;	Chosen strategy is simple_byte
  3303   0007E4  0A78               	xorlw	120	; case 120
  3304   0007E6  B4D8               	btfsc	status,2,c
  3305   0007E8  EFE2  F003         	goto	l2473
  3306   0007EC  EFF8  F003         	goto	l2481
  3307   0007F0                     l2481:
  3308                           
  3309                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1806:         ++*fmt
      +                          ;
  3310   0007F0  502E               	movf	vfpfcnvrt@fmt^0,w,c
  3311   0007F2  6ED9               	movwf	fsr2l,c
  3312   0007F4  6ADA               	clrf	fsr2h,c
  3313   0007F6  2ADF               	incf	indf2,f,c
  3314   0007F8  EF0F  F004         	goto	l985
  3315   0007FC                     l2485:
  3316                           
  3317                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1811:     fputc((int
      +                          )(*fmt)[0], fp);
  3318   0007FC  502E               	movf	vfpfcnvrt@fmt^0,w,c
  3319   0007FE  6ED9               	movwf	fsr2l,c
  3320   000800  6ADA               	clrf	fsr2h,c
  3321   000802  CFDF FFF6          	movff	indf2,tblptrl
  3322   000806                     	if	1	;There is more than 1 active tblptr byte
  3323   000806  0E06               	movlw	high __smallconst
  3324   000808  6EF7               	movwf	tblptrh,c
  3325   00080A                     	endif
  3326   00080A                     	if	0	;tblptru may be non-zero
  3327   00080A                     	endif
  3328   00080A                     	if	0	;tblptru may be non-zero
  3329   00080A                     	endif
  3330   00080A  0008               	tblrd		*
  3331   00080C  50F5               	movf	tablat,w,c
  3332   00080E  6E0D               	movwf	fputc@c^0,c
  3333   000810  6A0E               	clrf	(fputc@c+1)^0,c
  3334   000812  C02D  F00F         	movff	vfpfcnvrt@fp,fputc@fp
  3335   000816  ECD3  F006         	call	_fputc	;wreg free
  3336   00081A  EFF8  F003         	goto	l2481
  3337   00081E                     l985:
  3338   00081E  0012               	return		;funcret
  3339   000820                     __end_of_vfpfcnvrt:
  3340                           	callstack 0
  3341                           
  3342 ;; *************** function _xtoa *****************
  3343 ;; Defined at:
  3344 ;;		line 1055 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;  fp              1   32[COMRAM] PTR struct _IO_FILE
  3347 ;;		 -> sprintf@f(12), 
  3348 ;;  d               2   33[COMRAM] unsigned int 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  i               2   42[COMRAM] int 
  3351 ;;  w               2   39[COMRAM] int 
  3352 ;;  c               1   41[COMRAM] unsigned char 
  3353 ;;  p               1   38[COMRAM] _Bool 
  3354 ;; Return value:  Size  Location     Type
  3355 ;;                  1    wreg      void 
  3356 ;; Registers used:
  3357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3358 ;; Tracked objects:
  3359 ;;		On entry : 0/0
  3360 ;;		On exit  : 0/0
  3361 ;;		Unchanged: 0/0
  3362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3363 ;;      Params:         3       0       0       0       0       0       0
  3364 ;;      Locals:         6       0       0       0       0       0       0
  3365 ;;      Temps:          3       0       0       0       0       0       0
  3366 ;;      Totals:        12       0       0       0       0       0       0
  3367 ;;Total ram usage:       12 bytes
  3368 ;; Hardware stack levels used: 1
  3369 ;; Hardware stack levels required when called: 7
  3370 ;; This function calls:
  3371 ;;		_pad
  3372 ;; This function is called by:
  3373 ;;		_vfpfcnvrt
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text20
  3378   000946                     __ptext20:
  3379                           	callstack 0
  3380   000946                     _xtoa:
  3381                           	callstack 19
  3382   000946                     
  3383                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1055: static void xt
      +                          oa(FILE *fp, vfpf_uint_t d);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/dop
      +                          rnt.c: 1058: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1059: 
      +                           char c;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1063:     in
      +                          t i, w;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1067:  _Bool 
      +                          p = 1;
  3384   000946  0E01               	movlw	1
  3385   000948  6E27               	movwf	xtoa@p^0,c
  3386   00094A                     
  3387                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1082:     w = width;
  3388   00094A  C065  F028         	movff	_width,xtoa@w
  3389   00094E  C066  F029         	movff	_width+1,xtoa@w+1
  3390                           
  3391                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1095:     i = sizeof
      +                          (dbuf) - 1;
  3392   000952  0E00               	movlw	0
  3393   000954  6E2C               	movwf	(xtoa@i+1)^0,c
  3394   000956  0E1F               	movlw	31
  3395   000958  6E2B               	movwf	xtoa@i^0,c
  3396   00095A                     
  3397                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1096:     dbuf[i] = 
      +                          '\0';
  3398   00095A  0E00               	movlw	0
  3399   00095C  0100               	movlb	0	; () banked
  3400   00095E  6FD9               	movwf	(_dbuf+31)& (0+255),b
  3401                           
  3402                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1097:     while (!(i
      +                           < 2) && (d != 0
  3403   000960  EFE1  F004         	goto	l2409
  3404   000964                     l2391:
  3405                           
  3406                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1106:     )) {;/Appl
      +                          ications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1107:         --i;
  3407   000964  062B               	decf	xtoa@i^0,f,c
  3408   000966  A0D8               	btfss	status,0,c
  3409   000968  062C               	decf	(xtoa@i+1)^0,f,c
  3410   00096A                     
  3411                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1108:         c = d 
      +                          & 0x0f;
  3412   00096A  5022               	movf	xtoa@d^0,w,c
  3413   00096C  0B0F               	andlw	15
  3414   00096E  6E2A               	movwf	xtoa@c^0,c
  3415   000970                     
  3416                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1109:   if (c < 10) 
      +                          {
  3417   000970  0E0A               	movlw	10
  3418   000972  602A               	cpfslt	xtoa@c^0,c
  3419   000974  EFBE  F004         	goto	u1591
  3420   000978  EFC0  F004         	goto	u1590
  3421   00097C                     u1591:
  3422   00097C  EFC4  F004         	goto	l2399
  3423   000980                     u1590:
  3424   000980                     
  3425                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1110:    c += '0';
  3426   000980  0E30               	movlw	48
  3427   000982  262A               	addwf	xtoa@c^0,f,c
  3428                           
  3429                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1111:   }
  3430   000984  EFC6  F004         	goto	l2401
  3431   000988                     l2399:
  3432                           
  3433                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1116:    c += 'a' - 
      +                          10;
  3434   000988  0E57               	movlw	87
  3435   00098A  262A               	addwf	xtoa@c^0,f,c
  3436   00098C                     l2401:
  3437                           
  3438                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1121:   dbuf[i] = c;
  3439   00098C  502B               	movf	xtoa@i^0,w,c
  3440   00098E  0FBA               	addlw	low _dbuf
  3441   000990  6ED9               	movwf	fsr2l,c
  3442   000992  6ADA               	clrf	fsr2h,c
  3443   000994  C02A  FFDF         	movff	xtoa@c,indf2
  3444   000998                     
  3445                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1125:   p = 0;
  3446   000998  0E00               	movlw	0
  3447   00099A  6E27               	movwf	xtoa@p^0,c
  3448   00099C                     
  3449                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1127:         --w;
  3450   00099C  0628               	decf	xtoa@w^0,f,c
  3451   00099E  A0D8               	btfss	status,0,c
  3452   0009A0  0629               	decf	(xtoa@w+1)^0,f,c
  3453   0009A2                     
  3454                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1128:         d = d 
      +                          >> 4;
  3455   0009A2  C022  F024         	movff	xtoa@d,??_xtoa
  3456   0009A6  C023  F025         	movff	xtoa@d+1,??_xtoa+1
  3457   0009AA  0E04               	movlw	4
  3458   0009AC  6E26               	movwf	(??_xtoa+2)^0,c
  3459   0009AE                     u1605:
  3460   0009AE  90D8               	bcf	status,0,c
  3461   0009B0  3225               	rrcf	(??_xtoa+1)^0,f,c
  3462   0009B2  3224               	rrcf	??_xtoa^0,f,c
  3463   0009B4  2E26               	decfsz	(??_xtoa+2)^0,f,c
  3464   0009B6  EFD7  F004         	goto	u1605
  3465   0009BA  C024  F022         	movff	??_xtoa,xtoa@d
  3466   0009BE  C025  F023         	movff	??_xtoa+1,xtoa@d+1
  3467   0009C2                     l2409:
  3468                           
  3469                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1097:     while (!(i
      +                           < 2) && (d != 0
  3470   0009C2  BE2C               	btfsc	(xtoa@i+1)^0,7,c
  3471   0009C4  EFED  F004         	goto	u1611
  3472   0009C8  502C               	movf	(xtoa@i+1)^0,w,c
  3473   0009CA  E109               	bnz	u1610
  3474   0009CC  0E02               	movlw	2
  3475   0009CE  5C2B               	subwf	xtoa@i^0,w,c
  3476   0009D0  A0D8               	btfss	status,0,c
  3477   0009D2  EFED  F004         	goto	u1611
  3478   0009D6  EFEF  F004         	goto	u1610
  3479   0009DA                     u1611:
  3480   0009DA  EF14  F005         	goto	l2419
  3481   0009DE                     u1610:
  3482   0009DE  5022               	movf	xtoa@d^0,w,c
  3483   0009E0  1023               	iorwf	(xtoa@d+1)^0,w,c
  3484   0009E2  A4D8               	btfss	status,2,c
  3485   0009E4  EFF6  F004         	goto	u1621
  3486   0009E8  EFF8  F004         	goto	u1620
  3487   0009EC                     u1621:
  3488   0009EC  EFB2  F004         	goto	l2391
  3489   0009F0                     u1620:
  3490   0009F0  5027               	movf	xtoa@p^0,w,c
  3491   0009F2  A4D8               	btfss	status,2,c
  3492   0009F4  EFFE  F004         	goto	u1631
  3493   0009F8  EF00  F005         	goto	u1630
  3494   0009FC                     u1631:
  3495   0009FC  EFB2  F004         	goto	l2391
  3496   000A00                     u1630:
  3497   000A00  BE29               	btfsc	(xtoa@w+1)^0,7,c
  3498   000A02  EF0B  F005         	goto	u1641
  3499   000A06  5029               	movf	(xtoa@w+1)^0,w,c
  3500   000A08  E108               	bnz	u1640
  3501   000A0A  0428               	decf	xtoa@w^0,w,c
  3502   000A0C  A0D8               	btfss	status,0,c
  3503   000A0E  EF0B  F005         	goto	u1641
  3504   000A12  EF0D  F005         	goto	u1640
  3505   000A16                     u1641:
  3506   000A16  EF14  F005         	goto	l2419
  3507   000A1A                     u1640:
  3508   000A1A  B26D               	btfsc	_flags^0,1,c
  3509   000A1C  EF12  F005         	goto	u1651
  3510   000A20  EF14  F005         	goto	u1650
  3511   000A24                     u1651:
  3512   000A24  EFB2  F004         	goto	l2391
  3513   000A28                     u1650:
  3514   000A28                     l2419:
  3515                           
  3516                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1152:     return (vo
      +                          id) pad(fp, &dbuf[i], w);
  3517   000A28  C021  F01A         	movff	xtoa@fp,pad@fp
  3518   000A2C  502B               	movf	xtoa@i^0,w,c
  3519   000A2E  0FBA               	addlw	low _dbuf
  3520   000A30  6E1B               	movwf	pad@buf^0,c
  3521   000A32  C028  F01C         	movff	xtoa@w,pad@p
  3522   000A36  C029  F01D         	movff	xtoa@w+1,pad@p+1
  3523   000A3A  EC13  F008         	call	_pad	;wreg free
  3524   000A3E  0012               	return		;funcret
  3525   000A40                     __end_of_xtoa:
  3526                           	callstack 0
  3527                           
  3528 ;; *************** function _pad *****************
  3529 ;; Defined at:
  3530 ;;		line 193 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;  fp              1   25[COMRAM] PTR struct _IO_FILE
  3533 ;;		 -> sprintf@f(12), 
  3534 ;;  buf             1   26[COMRAM] PTR unsigned char 
  3535 ;;		 -> dbuf(32), 
  3536 ;;  p               2   27[COMRAM] int 
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  i               2   30[COMRAM] int 
  3539 ;; Return value:  Size  Location     Type
  3540 ;;                  1    wreg      void 
  3541 ;; Registers used:
  3542 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3543 ;; Tracked objects:
  3544 ;;		On entry : 0/0
  3545 ;;		On exit  : 0/0
  3546 ;;		Unchanged: 0/0
  3547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3548 ;;      Params:         4       0       0       0       0       0       0
  3549 ;;      Locals:         2       0       0       0       0       0       0
  3550 ;;      Temps:          1       0       0       0       0       0       0
  3551 ;;      Totals:         7       0       0       0       0       0       0
  3552 ;;Total ram usage:        7 bytes
  3553 ;; Hardware stack levels used: 1
  3554 ;; Hardware stack levels required when called: 6
  3555 ;; This function calls:
  3556 ;;		_fputc
  3557 ;;		_fputs
  3558 ;; This function is called by:
  3559 ;;		_xtoa
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text21
  3564   001026                     __ptext21:
  3565                           	callstack 0
  3566   001026                     _pad:
  3567                           	callstack 19
  3568   001026                     
  3569                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 193: static void pad
      +                          (FILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.46/pic/sources/c99/common/do
      +                          prnt.c: 194: {;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 195:  
      +                             int i;;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 199:     if
      +                           (flags & (1 << 0)) {
  3570   001026  A06D               	btfss	_flags^0,0,c
  3571   001028  EF18  F008         	goto	u1551
  3572   00102C  EF1A  F008         	goto	u1550
  3573   001030                     u1551:
  3574   001030  EF20  F008         	goto	l2373
  3575   001034                     u1550:
  3576   001034                     
  3577                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 200:         fputs((
      +                          const char *)buf, fp);
  3578   001034  C01B  F015         	movff	pad@buf,fputs@s
  3579   001038  C01A  F016         	movff	pad@fp,fputs@fp
  3580   00103C  EC1B  F00A         	call	_fputs	;wreg free
  3581   001040                     l2373:
  3582                           
  3583                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 205:  if (p < 0) {
  3584   001040  BE1D               	btfsc	(pad@p+1)^0,7,c
  3585   001042  EF27  F008         	goto	u1560
  3586   001046  EF25  F008         	goto	u1561
  3587   00104A                     u1561:
  3588   00104A  EF2B  F008         	goto	l943
  3589   00104E                     u1560:
  3590   00104E                     
  3591                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 206:   p = 0;
  3592   00104E  0E00               	movlw	0
  3593   001050  6E1D               	movwf	(pad@p+1)^0,c
  3594   001052  0E00               	movlw	0
  3595   001054  6E1C               	movwf	pad@p^0,c
  3596   001056                     l943:
  3597                           
  3598                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 208:     i = 0;
  3599   001056  0E00               	movlw	0
  3600   001058  6E20               	movwf	(pad@i+1)^0,c
  3601   00105A  0E00               	movlw	0
  3602   00105C  6E1F               	movwf	pad@i^0,c
  3603                           
  3604                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 209:     while (i < 
      +                          p) {
  3605   00105E  EF3B  F008         	goto	l2381
  3606   001062                     l2377:
  3607                           
  3608                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 210:         fputc('
      +                           ', fp);
  3609   001062  0E00               	movlw	0
  3610   001064  6E0E               	movwf	(fputc@c+1)^0,c
  3611   001066  0E20               	movlw	32
  3612   001068  6E0D               	movwf	fputc@c^0,c
  3613   00106A  C01A  F00F         	movff	pad@fp,fputc@fp
  3614   00106E  ECD3  F006         	call	_fputc	;wreg free
  3615   001072                     
  3616                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 211:         ++i;
  3617   001072  4A1F               	infsnz	pad@i^0,f,c
  3618   001074  2A20               	incf	(pad@i+1)^0,f,c
  3619   001076                     l2381:
  3620                           
  3621                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 209:     while (i < 
      +                          p) {
  3622   001076  501C               	movf	pad@p^0,w,c
  3623   001078  5C1F               	subwf	pad@i^0,w,c
  3624   00107A  5020               	movf	(pad@i+1)^0,w,c
  3625   00107C  0A80               	xorlw	128
  3626   00107E  6E1E               	movwf	??_pad^0,c
  3627   001080  501D               	movf	(pad@p+1)^0,w,c
  3628   001082  0A80               	xorlw	128
  3629   001084  581E               	subwfb	??_pad^0,w,c
  3630   001086  A0D8               	btfss	status,0,c
  3631   001088  EF48  F008         	goto	u1571
  3632   00108C  EF4A  F008         	goto	u1570
  3633   001090                     u1571:
  3634   001090  EF31  F008         	goto	l2377
  3635   001094                     u1570:
  3636   001094                     
  3637                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 216:     if (!(flags
      +                           & (1 << 0))) {
  3638   001094  B06D               	btfsc	_flags^0,0,c
  3639   001096  EF4F  F008         	goto	u1581
  3640   00109A  EF51  F008         	goto	u1580
  3641   00109E                     u1581:
  3642   00109E  EF57  F008         	goto	l948
  3643   0010A2                     u1580:
  3644   0010A2                     
  3645                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 218:         fputs((
      +                          const char *)buf, fp);
  3646   0010A2  C01B  F015         	movff	pad@buf,fputs@s
  3647   0010A6  C01A  F016         	movff	pad@fp,fputs@fp
  3648   0010AA  EC1B  F00A         	call	_fputs	;wreg free
  3649   0010AE                     l948:
  3650   0010AE  0012               	return		;funcret
  3651   0010B0                     __end_of_pad:
  3652                           	callstack 0
  3653                           
  3654 ;; *************** function _fputs *****************
  3655 ;; Defined at:
  3656 ;;		line 8 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/nf_fputs.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  s               1   20[COMRAM] PTR const unsigned char 
  3659 ;;		 -> dbuf(32), 
  3660 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
  3661 ;;		 -> sprintf@f(12), 
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;  i               2   23[COMRAM] int 
  3664 ;;  c               1   22[COMRAM] unsigned char 
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  2   20[COMRAM] int 
  3667 ;; Registers used:
  3668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3674 ;;      Params:         2       0       0       0       0       0       0
  3675 ;;      Locals:         3       0       0       0       0       0       0
  3676 ;;      Temps:          0       0       0       0       0       0       0
  3677 ;;      Totals:         5       0       0       0       0       0       0
  3678 ;;Total ram usage:        5 bytes
  3679 ;; Hardware stack levels used: 1
  3680 ;; Hardware stack levels required when called: 5
  3681 ;; This function calls:
  3682 ;;		_fputc
  3683 ;; This function is called by:
  3684 ;;		_pad
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text22
  3689   001436                     __ptext22:
  3690                           	callstack 0
  3691   001436                     _fputs:
  3692                           	callstack 19
  3693   001436  0E00               	movlw	0
  3694   001438  6E19               	movwf	(fputs@i+1)^0,c
  3695   00143A  0E00               	movlw	0
  3696   00143C  6E18               	movwf	fputs@i^0,c
  3697   00143E  EF2A  F00A         	goto	l2361
  3698   001442                     l2357:
  3699   001442  C017  F00D         	movff	fputs@c,fputc@c
  3700   001446  6A0E               	clrf	(fputc@c+1)^0,c
  3701   001448  C016  F00F         	movff	fputs@fp,fputc@fp
  3702   00144C  ECD3  F006         	call	_fputc	;wreg free
  3703   001450  4A18               	infsnz	fputs@i^0,f,c
  3704   001452  2A19               	incf	(fputs@i+1)^0,f,c
  3705   001454                     l2361:
  3706   001454  5015               	movf	fputs@s^0,w,c
  3707   001456  2418               	addwf	fputs@i^0,w,c
  3708   001458  6ED9               	movwf	fsr2l,c
  3709   00145A  6ADA               	clrf	fsr2h,c
  3710   00145C  50DF               	movf	indf2,w,c
  3711   00145E  6E17               	movwf	fputs@c^0,c
  3712   001460  5017               	movf	fputs@c^0,w,c
  3713   001462  A4D8               	btfss	status,2,c
  3714   001464  EF36  F00A         	goto	u1541
  3715   001468  EF38  F00A         	goto	u1540
  3716   00146C                     u1541:
  3717   00146C  EF21  F00A         	goto	l2357
  3718   001470                     u1540:
  3719   001470  0012               	return		;funcret
  3720   001472                     __end_of_fputs:
  3721                           	callstack 0
  3722                           
  3723 ;; *************** function _fputc *****************
  3724 ;; Defined at:
  3725 ;;		line 8 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/nf_fputc.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  c               2   12[COMRAM] int 
  3728 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  3729 ;;		 -> sprintf@f(12), 
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;		None
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  2   12[COMRAM] int 
  3734 ;; Registers used:
  3735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3741 ;;      Params:         3       0       0       0       0       0       0
  3742 ;;      Locals:         0       0       0       0       0       0       0
  3743 ;;      Temps:          5       0       0       0       0       0       0
  3744 ;;      Totals:         8       0       0       0       0       0       0
  3745 ;;Total ram usage:        8 bytes
  3746 ;; Hardware stack levels used: 1
  3747 ;; Hardware stack levels required when called: 4
  3748 ;; This function calls:
  3749 ;;		_putch
  3750 ;; This function is called by:
  3751 ;;		_pad
  3752 ;;		_vfpfcnvrt
  3753 ;;		_fputs
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text23
  3758   000DA6                     __ptext23:
  3759                           	callstack 0
  3760   000DA6                     _fputc:
  3761                           	callstack 19
  3762   000DA6  500F               	movf	fputc@fp^0,w,c
  3763   000DA8  B4D8               	btfsc	status,2,c
  3764   000DAA  EFD9  F006         	goto	u1501
  3765   000DAE  EFDB  F006         	goto	u1500
  3766   000DB2                     u1501:
  3767   000DB2  EFE3  F006         	goto	l2345
  3768   000DB6                     u1500:
  3769   000DB6  500F               	movf	fputc@fp^0,w,c
  3770   000DB8  A4D8               	btfss	status,2,c
  3771   000DBA  EFE1  F006         	goto	u1511
  3772   000DBE  EFE3  F006         	goto	u1510
  3773   000DC2                     u1511:
  3774   000DC2  EFE8  F006         	goto	l2347
  3775   000DC6                     u1510:
  3776   000DC6                     l2345:
  3777   000DC6  500D               	movf	fputc@c^0,w,c
  3778   000DC8  EC53  F00B         	call	_putch
  3779   000DCC  EF27  F007         	goto	l1004
  3780   000DD0                     l2347:
  3781   000DD0  500F               	movf	fputc@fp^0,w,c
  3782   000DD2  6ED9               	movwf	fsr2l,c
  3783   000DD4  6ADA               	clrf	fsr2h,c
  3784   000DD6  0E0A               	movlw	10
  3785   000DD8  26D9               	addwf	fsr2l,f,c
  3786   000DDA  50DE               	movf	postinc2,w,c
  3787   000DDC  10DE               	iorwf	postinc2,w,c
  3788   000DDE  B4D8               	btfsc	status,2,c
  3789   000DE0  EFF4  F006         	goto	u1521
  3790   000DE4  EFF6  F006         	goto	u1520
  3791   000DE8                     u1521:
  3792   000DE8  EF0F  F007         	goto	l2351
  3793   000DEC                     u1520:
  3794   000DEC  500F               	movf	fputc@fp^0,w,c
  3795   000DEE  6ED9               	movwf	fsr2l,c
  3796   000DF0  6ADA               	clrf	fsr2h,c
  3797   000DF2  0E0A               	movlw	10
  3798   000DF4  26D9               	addwf	fsr2l,f,c
  3799   000DF6  500F               	movf	fputc@fp^0,w,c
  3800   000DF8  6EE1               	movwf	fsr1l,c
  3801   000DFA  6AE2               	clrf	fsr1h,c
  3802   000DFC  0E03               	movlw	3
  3803   000DFE  26E1               	addwf	fsr1l,f,c
  3804   000E00  50DE               	movf	postinc2,w,c
  3805   000E02  5CE6               	subwf	postinc1,w,c
  3806   000E04  50E6               	movf	postinc1,w,c
  3807   000E06  0A80               	xorlw	128
  3808   000E08  6E14               	movwf	(??_fputc+4)^0,c
  3809   000E0A  50DE               	movf	postinc2,w,c
  3810   000E0C  0A80               	xorlw	128
  3811   000E0E  5814               	subwfb	(??_fputc+4)^0,w,c
  3812   000E10  B0D8               	btfsc	status,0,c
  3813   000E12  EF0D  F007         	goto	u1531
  3814   000E16  EF0F  F007         	goto	u1530
  3815   000E1A                     u1531:
  3816   000E1A  EF27  F007         	goto	l1004
  3817   000E1E                     u1530:
  3818   000E1E                     l2351:
  3819   000E1E  500F               	movf	fputc@fp^0,w,c
  3820   000E20  6ED9               	movwf	fsr2l,c
  3821   000E22  6ADA               	clrf	fsr2h,c
  3822   000E24  0E03               	movlw	3
  3823   000E26  26D9               	addwf	fsr2l,f,c
  3824   000E28  50DF               	movf	indf2,w,c
  3825   000E2A  6E10               	movwf	??_fputc^0,c
  3826   000E2C  500F               	movf	fputc@fp^0,w,c
  3827   000E2E  6ED9               	movwf	fsr2l,c
  3828   000E30  6ADA               	clrf	fsr2h,c
  3829   000E32  50DF               	movf	indf2,w,c
  3830   000E34  2410               	addwf	??_fputc^0,w,c
  3831   000E36  6ED9               	movwf	fsr2l,c
  3832   000E38  6ADA               	clrf	fsr2h,c
  3833   000E3A  C00D  FFDF         	movff	fputc@c,indf2
  3834   000E3E  500F               	movf	fputc@fp^0,w,c
  3835   000E40  6ED9               	movwf	fsr2l,c
  3836   000E42  6ADA               	clrf	fsr2h,c
  3837   000E44  0E03               	movlw	3
  3838   000E46  26D9               	addwf	fsr2l,f,c
  3839   000E48  2ADE               	incf	postinc2,f,c
  3840   000E4A  0E00               	movlw	0
  3841   000E4C  22DD               	addwfc	postdec2,f,c
  3842   000E4E                     l1004:
  3843   000E4E  0012               	return		;funcret
  3844   000E50                     __end_of_fputc:
  3845                           	callstack 0
  3846                           
  3847 ;; *************** function _putch *****************
  3848 ;; Defined at:
  3849 ;;		line 7 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/putch.c"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;  c               1    wreg     unsigned char 
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;  c               1    0[COMRAM] unsigned char 
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      void 
  3856 ;; Registers used:
  3857 ;;		wreg
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3863 ;;      Params:         0       0       0       0       0       0       0
  3864 ;;      Locals:         0       0       0       0       0       0       0
  3865 ;;      Temps:          0       0       0       0       0       0       0
  3866 ;;      Totals:         0       0       0       0       0       0       0
  3867 ;;Total ram usage:        0 bytes
  3868 ;; Hardware stack levels used: 1
  3869 ;; Hardware stack levels required when called: 3
  3870 ;; This function calls:
  3871 ;;		Nothing
  3872 ;; This function is called by:
  3873 ;;		_fputc
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text24
  3878   0016A6                     __ptext24:
  3879                           	callstack 0
  3880   0016A6                     _putch:
  3881                           	callstack 19
  3882   0016A6  0012               	return		;funcret
  3883   0016A8                     __end_of_putch:
  3884                           	callstack 0
  3885                           
  3886 ;; *************** function _read_prec_or_width *****************
  3887 ;; Defined at:
  3888 ;;		line 1158 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  fmt             1   18[COMRAM] PTR PTR const unsigned c
  3891 ;;		 -> vfprintf@cfmt(1), 
  3892 ;;  ap              1   19[COMRAM] PTR PTR void [1]
  3893 ;;		 -> sprintf@ap(1), 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  c               1   20[COMRAM] unsigned char 
  3896 ;;  n               2   21[COMRAM] int 
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  2   18[COMRAM] int 
  3899 ;; Registers used:
  3900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3906 ;;      Params:         2       0       0       0       0       0       0
  3907 ;;      Locals:         3       0       0       0       0       0       0
  3908 ;;      Temps:          0       0       0       0       0       0       0
  3909 ;;      Totals:         5       0       0       0       0       0       0
  3910 ;;Total ram usage:        5 bytes
  3911 ;; Hardware stack levels used: 1
  3912 ;; Hardware stack levels required when called: 4
  3913 ;; This function calls:
  3914 ;;		___wmul
  3915 ;; This function is called by:
  3916 ;;		_vfpfcnvrt
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           	psect	text25
  3921   000E50                     __ptext25:
  3922                           	callstack 0
  3923   000E50                     _read_prec_or_width:
  3924                           	callstack 22
  3925   000E50                     
  3926                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1159:     int n = 0;
  3927   000E50  0E00               	movlw	0
  3928   000E52  6E17               	movwf	(read_prec_or_width@n+1)^0,c
  3929   000E54  0E00               	movlw	0
  3930   000E56  6E16               	movwf	read_prec_or_width@n^0,c
  3931   000E58                     
  3932                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1160:     if ((*fmt)
      +                          [0] == '*') {
  3933   000E58  5013               	movf	read_prec_or_width@fmt^0,w,c
  3934   000E5A  6ED9               	movwf	fsr2l,c
  3935   000E5C  6ADA               	clrf	fsr2h,c
  3936   000E5E  CFDF FFF6          	movff	indf2,tblptrl
  3937   000E62                     	if	1	;There is more than 1 active tblptr byte
  3938   000E62  0E06               	movlw	high __smallconst
  3939   000E64  6EF7               	movwf	tblptrh,c
  3940   000E66                     	endif
  3941   000E66                     	if	0	;tblptru may be non-zero
  3942   000E66                     	endif
  3943   000E66                     	if	0	;tblptru may be non-zero
  3944   000E66                     	endif
  3945   000E66  0008               	tblrd		*
  3946   000E68  50F5               	movf	tablat,w,c
  3947   000E6A  0A2A               	xorlw	42
  3948   000E6C  A4D8               	btfss	status,2,c
  3949   000E6E  EF3B  F007         	goto	u1661
  3950   000E72  EF3D  F007         	goto	u1660
  3951   000E76                     u1661:
  3952   000E76  EF63  F007         	goto	l2435
  3953   000E7A                     u1660:
  3954   000E7A                     
  3955                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1161:         ++*fmt
      +                          ;
  3956   000E7A  5013               	movf	read_prec_or_width@fmt^0,w,c
  3957   000E7C  6ED9               	movwf	fsr2l,c
  3958   000E7E  6ADA               	clrf	fsr2h,c
  3959   000E80  2ADF               	incf	indf2,f,c
  3960   000E82                     
  3961                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1162:         n = (*
      +                          (int *)__va_arg(*(int **)*ap, (int)0));
  3962   000E82  5014               	movf	read_prec_or_width@ap^0,w,c
  3963   000E84  6ED9               	movwf	fsr2l,c
  3964   000E86  6ADA               	clrf	fsr2h,c
  3965   000E88  0E02               	movlw	2
  3966   000E8A  26DF               	addwf	indf2,f,c
  3967   000E8C  5CDF               	subwf	indf2,w,c
  3968   000E8E  6ED9               	movwf	fsr2l,c
  3969   000E90  6ADA               	clrf	fsr2h,c
  3970   000E92  CFDE F016          	movff	postinc2,read_prec_or_width@n
  3971   000E96  CFDE F017          	movff	postinc2,read_prec_or_width@n+1
  3972                           
  3973                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1163:     } else {
  3974   000E9A  EF76  F007         	goto	l964
  3975   000E9E                     l2431:
  3976                           
  3977                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1166:             n 
      +                          = n * 10 + c;
  3978   000E9E  C016  F00D         	movff	read_prec_or_width@n,___wmul@multiplier
  3979   000EA2  C017  F00E         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  3980   000EA6  0E00               	movlw	0
  3981   000EA8  6E10               	movwf	(___wmul@multiplicand+1)^0,c
  3982   000EAA  0E0A               	movlw	10
  3983   000EAC  6E0F               	movwf	___wmul@multiplicand^0,c
  3984   000EAE  EC30  F00B         	call	___wmul	;wreg free
  3985   000EB2  5015               	movf	read_prec_or_width@c^0,w,c
  3986   000EB4  240D               	addwf	?___wmul^0,w,c
  3987   000EB6  6E16               	movwf	read_prec_or_width@n^0,c
  3988   000EB8  0E00               	movlw	0
  3989   000EBA  200E               	addwfc	(?___wmul+1)^0,w,c
  3990   000EBC  6E17               	movwf	(read_prec_or_width@n+1)^0,c
  3991   000EBE                     
  3992                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1167:             ++
      +                          *fmt;
  3993   000EBE  5013               	movf	read_prec_or_width@fmt^0,w,c
  3994   000EC0  6ED9               	movwf	fsr2l,c
  3995   000EC2  6ADA               	clrf	fsr2h,c
  3996   000EC4  2ADF               	incf	indf2,f,c
  3997   000EC6                     l2435:
  3998                           
  3999                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1165:         while 
      +                          ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  4000   000EC6  5013               	movf	read_prec_or_width@fmt^0,w,c
  4001   000EC8  6ED9               	movwf	fsr2l,c
  4002   000ECA  6ADA               	clrf	fsr2h,c
  4003   000ECC  CFDF FFF6          	movff	indf2,tblptrl
  4004   000ED0                     	if	1	;There is more than 1 active tblptr byte
  4005   000ED0  0E06               	movlw	high __smallconst
  4006   000ED2  6EF7               	movwf	tblptrh,c
  4007   000ED4                     	endif
  4008   000ED4                     	if	0	;tblptru may be non-zero
  4009   000ED4                     	endif
  4010   000ED4                     	if	0	;tblptru may be non-zero
  4011   000ED4                     	endif
  4012   000ED4  0008               	tblrd		*
  4013   000ED6  50F5               	movf	tablat,w,c
  4014   000ED8  0FD0               	addlw	208
  4015   000EDA  6E15               	movwf	read_prec_or_width@c^0,c
  4016   000EDC  0E09               	movlw	9
  4017   000EDE  6415               	cpfsgt	read_prec_or_width@c^0,c
  4018   000EE0  EF74  F007         	goto	u1671
  4019   000EE4  EF76  F007         	goto	u1670
  4020   000EE8                     u1671:
  4021   000EE8  EF4F  F007         	goto	l2431
  4022   000EEC                     u1670:
  4023   000EEC                     l964:
  4024                           
  4025                           ;/Applications/microchip/xc8/v2.46/pic/sources/c99/common/doprnt.c: 1170:     return n;
  4026   000EEC  C016  F013         	movff	read_prec_or_width@n,?_read_prec_or_width
  4027   000EF0  C017  F014         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  4028   000EF4  0012               	return		;funcret
  4029   000EF6                     __end_of_read_prec_or_width:
  4030                           	callstack 0
  4031                           
  4032 ;; *************** function ___wmul *****************
  4033 ;; Defined at:
  4034 ;;		line 15 in file "/Applications/microchip/xc8/v2.46/pic/sources/c99/common/Umul16.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;  multiplier      2   12[COMRAM] unsigned int 
  4037 ;;  multiplicand    2   14[COMRAM] unsigned int 
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;  product         2   16[COMRAM] unsigned int 
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  2   12[COMRAM] unsigned int 
  4042 ;; Registers used:
  4043 ;;		wreg, status,2, status,0, prodl, prodh
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4049 ;;      Params:         4       0       0       0       0       0       0
  4050 ;;      Locals:         2       0       0       0       0       0       0
  4051 ;;      Temps:          0       0       0       0       0       0       0
  4052 ;;      Totals:         6       0       0       0       0       0       0
  4053 ;;Total ram usage:        6 bytes
  4054 ;; Hardware stack levels used: 1
  4055 ;; Hardware stack levels required when called: 3
  4056 ;; This function calls:
  4057 ;;		Nothing
  4058 ;; This function is called by:
  4059 ;;		_read_prec_or_width
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text26
  4064   001660                     __ptext26:
  4065                           	callstack 0
  4066   001660                     ___wmul:
  4067                           	callstack 22
  4068   001660  500D               	movf	___wmul@multiplier^0,w,c
  4069   001662  020F               	mulwf	___wmul@multiplicand^0,c
  4070   001664  CFF3 F011          	movff	prodl,___wmul@product
  4071   001668  CFF4 F012          	movff	prodh,___wmul@product+1
  4072   00166C  500D               	movf	___wmul@multiplier^0,w,c
  4073   00166E  0210               	mulwf	(___wmul@multiplicand+1)^0,c
  4074   001670  50F3               	movf	243,w,c
  4075   001672  2612               	addwf	(___wmul@product+1)^0,f,c
  4076   001674  500E               	movf	(___wmul@multiplier+1)^0,w,c
  4077   001676  020F               	mulwf	___wmul@multiplicand^0,c
  4078   001678  50F3               	movf	243,w,c
  4079   00167A  2612               	addwf	(___wmul@product+1)^0,f,c
  4080   00167C  C011  F00D         	movff	___wmul@product,?___wmul
  4081   001680  C012  F00E         	movff	___wmul@product+1,?___wmul+1
  4082   001684  0012               	return		;funcret
  4083   001686                     __end_of___wmul:
  4084                           	callstack 0
  4085                           
  4086 ;; *************** function _setup_address *****************
  4087 ;; Defined at:
  4088 ;;		line 254 in file "main.c"
  4089 ;; Parameters:    Size  Location     Type
  4090 ;;  addr            2   12[COMRAM] unsigned short 
  4091 ;; Auto vars:     Size  Location     Type
  4092 ;;  hi              1   15[COMRAM] unsigned char 
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  1    wreg      void 
  4095 ;; Registers used:
  4096 ;;		wreg, status,2, status,0
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4102 ;;      Params:         2       0       0       0       0       0       0
  4103 ;;      Locals:         1       0       0       0       0       0       0
  4104 ;;      Temps:          1       0       0       0       0       0       0
  4105 ;;      Totals:         4       0       0       0       0       0       0
  4106 ;;Total ram usage:        4 bytes
  4107 ;; Hardware stack levels used: 1
  4108 ;; Hardware stack levels required when called: 3
  4109 ;; This function calls:
  4110 ;;		Nothing
  4111 ;; This function is called by:
  4112 ;;		_do_blank
  4113 ;;		_do_read
  4114 ;;		_do_write
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           	psect	text27
  4119   001132                     __ptext27:
  4120                           	callstack 0
  4121   001132                     _setup_address:
  4122                           	callstack 26
  4123   001132                     
  4124                           ;main.c: 254: void setup_address(uint16_t addr);main.c: 255: {;main.c: 257:         TRIS
      +                          D = 0x00;
  4125   001132  0E00               	movlw	0
  4126   001134  6E95               	movwf	149,c	;volatile
  4127                           
  4128                           ;main.c: 260:         uint8_t hi = addr >> 8;
  4129   001136  500E               	movf	(setup_address@addr+1)^0,w,c
  4130   001138  6E10               	movwf	setup_address@hi^0,c
  4131   00113A                     
  4132                           ;main.c: 261:         PORTD = addr & 0x00ff;
  4133   00113A  C00D  FF83         	movff	setup_address@addr,3971	;volatile
  4134   00113E                     
  4135                           ;main.c: 262:         PORTCbits.RC0 = hi & 0x01;
  4136   00113E  C010  F00F         	movff	setup_address@hi,??_setup_address
  4137   001142  0E01               	movlw	1
  4138   001144  160F               	andwf	??_setup_address^0,f,c
  4139   001146  5082               	movf	130,w,c	;volatile
  4140   001148  180F               	xorwf	??_setup_address^0,w,c
  4141   00114A  0BFE               	andlw	-2
  4142   00114C  180F               	xorwf	??_setup_address^0,w,c
  4143   00114E  6E82               	movwf	130,c	;volatile
  4144   001150                     
  4145                           ;main.c: 263:         PORTCbits.RC1 = hi >> 1 & 0x01;
  4146   001150  C010  F00F         	movff	setup_address@hi,??_setup_address
  4147   001154  90D8               	bcf	status,0,c
  4148   001156  320F               	rrcf	??_setup_address^0,f,c
  4149   001158  0E01               	movlw	1
  4150   00115A  160F               	andwf	??_setup_address^0,f,c
  4151   00115C  460F               	rlncf	??_setup_address^0,f,c
  4152   00115E  5082               	movf	130,w,c	;volatile
  4153   001160  180F               	xorwf	??_setup_address^0,w,c
  4154   001162  0BFD               	andlw	-3
  4155   001164  180F               	xorwf	??_setup_address^0,w,c
  4156   001166  6E82               	movwf	130,c	;volatile
  4157   001168                     
  4158                           ;main.c: 264:         PORTCbits.RC2 = hi >> 2 & 0x01;
  4159   001168  C010  F00F         	movff	setup_address@hi,??_setup_address
  4160   00116C  90D8               	bcf	status,0,c
  4161   00116E  320F               	rrcf	??_setup_address^0,f,c
  4162   001170  90D8               	bcf	status,0,c
  4163   001172  320F               	rrcf	??_setup_address^0,f,c
  4164   001174  0E01               	movlw	1
  4165   001176  160F               	andwf	??_setup_address^0,f,c
  4166   001178  460F               	rlncf	??_setup_address^0,f,c
  4167   00117A  460F               	rlncf	??_setup_address^0,f,c
  4168   00117C  5082               	movf	130,w,c	;volatile
  4169   00117E  180F               	xorwf	??_setup_address^0,w,c
  4170   001180  0BFB               	andlw	-5
  4171   001182  180F               	xorwf	??_setup_address^0,w,c
  4172   001184  6E82               	movwf	130,c	;volatile
  4173   001186                     
  4174                           ;main.c: 265:         _delay((unsigned long)((1)*(20000000/4000000.0)));
  4175   001186  D000               	nop2		;2 cycle nop
  4176   001188  D000               	nop2		;2 cycle nop
  4177   00118A  0000               	nop	
  4178   00118C                     
  4179                           ;main.c: 268:         PORTBbits.RB0 = 1;
  4180   00118C  8081               	bsf	129,0,c	;volatile
  4181   00118E                     
  4182                           ;main.c: 269:         _delay((unsigned long)((1)*(20000000/4000000.0)));
  4183   00118E  D000               	nop2		;2 cycle nop
  4184   001190  D000               	nop2		;2 cycle nop
  4185   001192  0000               	nop	
  4186   001194                     
  4187                           ;main.c: 271:         PORTBbits.RB0 = 0;
  4188   001194  9081               	bcf	129,0,c	;volatile
  4189   001196                     
  4190                           ;main.c: 272:         _delay((unsigned long)((1)*(20000000/4000000.0)));
  4191   001196  D000               	nop2		;2 cycle nop
  4192   001198  D000               	nop2		;2 cycle nop
  4193   00119A  0000               	nop	
  4194   00119C  0012               	return		;funcret
  4195   00119E                     __end_of_setup_address:
  4196                           	callstack 0
  4197                           
  4198 ;; *************** function _read_port *****************
  4199 ;; Defined at:
  4200 ;;		line 278 in file "main.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;		None
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;  data            1   12[COMRAM] unsigned char 
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  1    wreg      unsigned char 
  4207 ;; Registers used:
  4208 ;;		wreg, status,2
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4214 ;;      Params:         0       0       0       0       0       0       0
  4215 ;;      Locals:         1       0       0       0       0       0       0
  4216 ;;      Temps:          0       0       0       0       0       0       0
  4217 ;;      Totals:         1       0       0       0       0       0       0
  4218 ;;Total ram usage:        1 bytes
  4219 ;; Hardware stack levels used: 1
  4220 ;; Hardware stack levels required when called: 3
  4221 ;; This function calls:
  4222 ;;		Nothing
  4223 ;; This function is called by:
  4224 ;;		_do_blank
  4225 ;;		_do_read
  4226 ;;		_do_write
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text28
  4231   001516                     __ptext28:
  4232                           	callstack 0
  4233   001516                     _read_port:
  4234                           	callstack 26
  4235   001516                     
  4236                           ;main.c: 281:     TRISD = 0xFF;
  4237   001516  6895               	setf	149,c	;volatile
  4238   001518                     
  4239                           ;main.c: 282:     _delay((unsigned long)((5)*(20000000/4000000.0)));
  4240   001518  0E08               	movlw	8
  4241   00151A                     u1987:
  4242   00151A  2EE8               	decfsz	wreg,f,c
  4243   00151C  D7FE               	bra	u1987
  4244   00151E  0000               	nop	
  4245   001520                     
  4246                           ;main.c: 285:     PORTBbits.RB2 = 0;
  4247   001520  9481               	bcf	129,2,c	;volatile
  4248                           
  4249                           ;main.c: 286:     _delay((unsigned long)((2)*(20000000/4000000.0)));
  4250   001522  0E03               	movlw	3
  4251   001524                     u1997:
  4252   001524  2EE8               	decfsz	wreg,f,c
  4253   001526  D7FE               	bra	u1997
  4254   001528  0000               	nop	
  4255   00152A                     
  4256                           ;main.c: 289:     uint8_t data = PORTD;
  4257   00152A  CF83 F00D          	movff	3971,read_port@data	;volatile
  4258                           
  4259                           ;main.c: 292:     _delay((unsigned long)((2)*(20000000/4000000.0)));
  4260   00152E  0E03               	movlw	3
  4261   001530                     u2007:
  4262   001530  2EE8               	decfsz	wreg,f,c
  4263   001532  D7FE               	bra	u2007
  4264   001534  0000               	nop	
  4265   001536                     
  4266                           ;main.c: 293:     PORTBbits.RB2 = 1;
  4267   001536  8481               	bsf	129,2,c	;volatile
  4268                           
  4269                           ;main.c: 296:     _delay((unsigned long)((5)*(20000000/4000000.0)));
  4270   001538  0E08               	movlw	8
  4271   00153A                     u2017:
  4272   00153A  2EE8               	decfsz	wreg,f,c
  4273   00153C  D7FE               	bra	u2017
  4274   00153E  0000               	nop	
  4275   001540                     
  4276                           ;main.c: 297:     TRISD = 0x00;
  4277   001540  0E00               	movlw	0
  4278   001542  6E95               	movwf	149,c	;volatile
  4279   001544                     
  4280                           ;main.c: 299:     return data;
  4281   001544  500D               	movf	read_port@data^0,w,c
  4282   001546  0012               	return		;funcret
  4283   001548                     __end_of_read_port:
  4284                           	callstack 0
  4285                           
  4286 ;; *************** function _high_isr *****************
  4287 ;; Defined at:
  4288 ;;		line 224 in file "main.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;		None
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  n               2    8[COMRAM] short 
  4293 ;;  c               1   11[COMRAM] unsigned char 
  4294 ;;  ok              1   10[COMRAM] _Bool 
  4295 ;; Return value:  Size  Location     Type
  4296 ;;                  1    wreg      void 
  4297 ;; Registers used:
  4298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4299 ;; Tracked objects:
  4300 ;;		On entry : 0/0
  4301 ;;		On exit  : 0/0
  4302 ;;		Unchanged: 0/0
  4303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4304 ;;      Params:         0       0       0       0       0       0       0
  4305 ;;      Locals:         4       0       0       0       0       0       0
  4306 ;;      Temps:          2       0       0       0       0       0       0
  4307 ;;      Totals:         6       0       0       0       0       0       0
  4308 ;;Total ram usage:        6 bytes
  4309 ;; Hardware stack levels used: 1
  4310 ;; Hardware stack levels required when called: 2
  4311 ;; This function calls:
  4312 ;;		_first
  4313 ;;		_push
  4314 ;;		_size
  4315 ;;		_uart_getc
  4316 ;; This function is called by:
  4317 ;;		Interrupt level 2
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	intcode
  4322   000008                     __pintcode:
  4323                           	callstack 0
  4324   000008                     _high_isr:
  4325                           	callstack 19
  4326                           
  4327                           ;incstack = 0
  4328   000008  8271               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4329   00000A  ED58  F008         	call	int_func,f	;refresh shadow registers
  4330                           
  4331                           	psect	intcode_body
  4332   0010B0                     __pintcode_body:
  4333                           	callstack 19
  4334   0010B0                     int_func:
  4335                           	callstack 19
  4336   0010B0  0006               	pop		; remove dummy address from shadow register refresh
  4337   0010B2  CFD9 F007          	movff	fsr2l,??_high_isr
  4338   0010B6  CFDA F008          	movff	fsr2h,??_high_isr+1
  4339   0010BA                     
  4340                           ;main.c: 226:     char c = 0;
  4341   0010BA  0E00               	movlw	0
  4342   0010BC  6E0C               	movwf	high_isr@c^0,c
  4343   0010BE                     
  4344                           ;main.c: 229:     INTCONbits.GIEH = 0;
  4345   0010BE  9EF2               	bcf	242,7,c	;volatile
  4346   0010C0                     
  4347                           ;main.c: 230:     PIE1bits.RCIE=0;
  4348   0010C0  9A9D               	bcf	157,5,c	;volatile
  4349   0010C2                     
  4350                           ;main.c: 233:     _Bool ok = uart_getc(&c);
  4351   0010C2  0E0C               	movlw	low high_isr@c
  4352   0010C4  6E01               	movwf	uart_getc@c^0,c
  4353   0010C6  EC62  F009         	call	_uart_getc	;wreg free
  4354   0010CA  6E0B               	movwf	high_isr@ok^0,c
  4355   0010CC                     
  4356                           ;main.c: 234:     if (ok) {
  4357   0010CC  500B               	movf	high_isr@ok^0,w,c
  4358   0010CE  B4D8               	btfsc	status,2,c
  4359   0010D0  EF6C  F008         	goto	i2u143_41
  4360   0010D4  EF6E  F008         	goto	i2u143_40
  4361   0010D8                     i2u143_41:
  4362   0010D8  EF91  F008         	goto	i2l2297
  4363   0010DC                     i2u143_40:
  4364   0010DC                     
  4365                           ;main.c: 236:         push(c);
  4366   0010DC  500C               	movf	high_isr@c^0,w,c
  4367   0010DE  EC04  F009         	call	_push
  4368   0010E2                     
  4369                           ;main.c: 239:         int16_t n = size();
  4370   0010E2  ECB1  F009         	call	_size	;wreg free
  4371   0010E6  C003  F009         	movff	?_size,high_isr@n
  4372   0010EA  C004  F00A         	movff	?_size+1,high_isr@n+1
  4373   0010EE                     
  4374                           ;main.c: 240:         if ( (first() == '$') && n > 1) {
  4375   0010EE  EC43  F00B         	call	_first	;wreg free
  4376   0010F2  0A24               	xorlw	36
  4377   0010F4  A4D8               	btfss	status,2,c
  4378   0010F6  EF7F  F008         	goto	i2u144_41
  4379   0010FA  EF81  F008         	goto	i2u144_40
  4380   0010FE                     i2u144_41:
  4381   0010FE  EF91  F008         	goto	i2l2297
  4382   001102                     i2u144_40:
  4383   001102  BE0A               	btfsc	(high_isr@n+1)^0,7,c
  4384   001104  EF8D  F008         	goto	i2u145_41
  4385   001108  500A               	movf	(high_isr@n+1)^0,w,c
  4386   00110A  E109               	bnz	i2u145_40
  4387   00110C  0E02               	movlw	2
  4388   00110E  5C09               	subwf	high_isr@n^0,w,c
  4389   001110  A0D8               	btfss	status,0,c
  4390   001112  EF8D  F008         	goto	i2u145_41
  4391   001116  EF8F  F008         	goto	i2u145_40
  4392   00111A                     i2u145_41:
  4393   00111A  EF91  F008         	goto	i2l2297
  4394   00111E                     i2u145_40:
  4395   00111E                     
  4396                           ;main.c: 242:             cmd_active = 1;
  4397   00111E  0E01               	movlw	1
  4398   001120  6E6E               	movwf	_cmd_active^0,c
  4399   001122                     i2l2297:
  4400                           
  4401                           ;main.c: 247:     PIE1bits.RCIE=1;
  4402   001122  8A9D               	bsf	157,5,c	;volatile
  4403   001124                     
  4404                           ;main.c: 248:     INTCONbits.GIEH = 1;
  4405   001124  8EF2               	bsf	242,7,c	;volatile
  4406   001126  C008  FFDA         	movff	??_high_isr+1,fsr2h
  4407   00112A  C007  FFD9         	movff	??_high_isr,fsr2l
  4408   00112E  9271               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4409   001130  0011               	retfie		f
  4410   001132                     __end_of_high_isr:
  4411                           	callstack 0
  4412                           
  4413 ;; *************** function _uart_getc *****************
  4414 ;; Defined at:
  4415 ;;		line 124 in file "uart.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  c               1    0[COMRAM] PTR unsigned char 
  4418 ;;		 -> high_isr@c(1), 
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  er              1    0        unsigned char 
  4421 ;;  ok              1    1[COMRAM] _Bool 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      _Bool 
  4424 ;; Registers used:
  4425 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4431 ;;      Params:         1       0       0       0       0       0       0
  4432 ;;      Locals:         1       0       0       0       0       0       0
  4433 ;;      Temps:          0       0       0       0       0       0       0
  4434 ;;      Totals:         2       0       0       0       0       0       0
  4435 ;;Total ram usage:        2 bytes
  4436 ;; Hardware stack levels used: 1
  4437 ;; This function calls:
  4438 ;;		Nothing
  4439 ;; This function is called by:
  4440 ;;		_high_isr
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444                           	psect	text30
  4445   0012C4                     __ptext30:
  4446                           	callstack 0
  4447   0012C4                     _uart_getc:
  4448                           	callstack 20
  4449   0012C4                     
  4450                           ;uart.c: 124: _Bool uart_getc(char *c);uart.c: 125: {;uart.c: 127:     _Bool ok = 0;
  4451   0012C4  0E00               	movlw	0
  4452   0012C6  6E02               	movwf	uart_getc@ok^0,c
  4453   0012C8                     
  4454                           ;uart.c: 130:     if (RCSTAbits.FERR) {
  4455   0012C8  A4AB               	btfss	171,2,c	;volatile
  4456   0012CA  EF69  F009         	goto	i2u120_41
  4457   0012CE  EF6B  F009         	goto	i2u120_40
  4458   0012D2                     i2u120_41:
  4459   0012D2  EF6E  F009         	goto	i2l218
  4460   0012D6                     i2u120_40:
  4461   0012D6  50AE               	movf	174,w,c	;volatile
  4462                           
  4463                           ;uart.c: 132:     }
  4464   0012D8  EF88  F009         	goto	i2l2089
  4465   0012DC                     i2l218:
  4466   0012DC  A2AB               	btfss	171,1,c	;volatile
  4467   0012DE  EF73  F009         	goto	i2u121_41
  4468   0012E2  EF75  F009         	goto	i2u121_40
  4469   0012E6                     i2u121_41:
  4470   0012E6  EF79  F009         	goto	i2l220
  4471   0012EA                     i2u121_40:
  4472   0012EA                     
  4473                           ;uart.c: 134:         RCSTAbits.CREN = 0;
  4474   0012EA  98AB               	bcf	171,4,c	;volatile
  4475                           
  4476                           ;uart.c: 135:         RCSTAbits.CREN = 1;
  4477   0012EC  88AB               	bsf	171,4,c	;volatile
  4478                           
  4479                           ;uart.c: 136:     }
  4480   0012EE  EF88  F009         	goto	i2l2089
  4481   0012F2                     i2l220:
  4482                           
  4483                           ;uart.c: 138:         if (PIR1bits.RCIF) {
  4484   0012F2  AA9E               	btfss	158,5,c	;volatile
  4485   0012F4  EF7E  F009         	goto	i2u122_41
  4486   0012F8  EF80  F009         	goto	i2u122_40
  4487   0012FC                     i2u122_41:
  4488   0012FC  EF88  F009         	goto	i2l2089
  4489   001300                     i2u122_40:
  4490   001300                     
  4491                           ;uart.c: 139:             *c = RCREG & 0x7f;
  4492   001300  5001               	movf	uart_getc@c^0,w,c
  4493   001302  6ED9               	movwf	fsr2l,c
  4494   001304  6ADA               	clrf	fsr2h,c
  4495   001306  50AE               	movf	174,w,c	;volatile
  4496   001308  0B7F               	andlw	127
  4497   00130A  6EDF               	movwf	indf2,c
  4498   00130C                     
  4499                           ;uart.c: 140:             ok = 1;
  4500   00130C  0E01               	movlw	1
  4501   00130E  6E02               	movwf	uart_getc@ok^0,c
  4502   001310                     i2l2089:
  4503                           
  4504                           ;uart.c: 144:     return ok;
  4505   001310  5002               	movf	uart_getc@ok^0,w,c
  4506   001312  0012               	return		;funcret
  4507   001314                     __end_of_uart_getc:
  4508                           	callstack 0
  4509                           
  4510 ;; *************** function _size *****************
  4511 ;; Defined at:
  4512 ;;		line 81 in file "main.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;		None
  4515 ;; Auto vars:     Size  Location     Type
  4516 ;;  s               2    4[COMRAM] short 
  4517 ;; Return value:  Size  Location     Type
  4518 ;;                  2    2[COMRAM] short 
  4519 ;; Registers used:
  4520 ;;		wreg, status,2, status,0, cstack
  4521 ;; Tracked objects:
  4522 ;;		On entry : 0/0
  4523 ;;		On exit  : 0/0
  4524 ;;		Unchanged: 0/0
  4525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4526 ;;      Params:         2       0       0       0       0       0       0
  4527 ;;      Locals:         2       0       0       0       0       0       0
  4528 ;;      Temps:          0       0       0       0       0       0       0
  4529 ;;      Totals:         4       0       0       0       0       0       0
  4530 ;;Total ram usage:        4 bytes
  4531 ;; Hardware stack levels used: 1
  4532 ;; Hardware stack levels required when called: 1
  4533 ;; This function calls:
  4534 ;;		_setCTS
  4535 ;;		i2_addone
  4536 ;; This function is called by:
  4537 ;;		_high_isr
  4538 ;; This function uses a non-reentrant model
  4539 ;;
  4540                           
  4541                           	psect	text31
  4542   001362                     __ptext31:
  4543                           	callstack 0
  4544   001362                     _size:
  4545                           	callstack 19
  4546   001362                     
  4547                           ;main.c: 83:     int16_t s = addone(tail) - head;
  4548   001362  C06F  F001         	movff	_tail,i2addone@i
  4549   001366  C070  F002         	movff	_tail+1,i2addone@i+1
  4550   00136A  ECEC  F00A         	call	i2_addone	;wreg free
  4551   00136E  506B               	movf	_head^0,w,c
  4552   001370  5C01               	subwf	?i2_addone^0,w,c
  4553   001372  6E05               	movwf	size@s^0,c
  4554   001374  506C               	movf	(_head+1)^0,w,c
  4555   001376  5802               	subwfb	(?i2_addone+1)^0,w,c
  4556   001378  6E06               	movwf	(size@s+1)^0,c
  4557   00137A                     
  4558                           ;main.c: 84:     if (s > 1024 -16) {
  4559   00137A  BE06               	btfsc	(size@s+1)^0,7,c
  4560   00137C  EFC9  F009         	goto	i2u118_41
  4561   001380  0EF1               	movlw	241
  4562   001382  5C05               	subwf	size@s^0,w,c
  4563   001384  0E03               	movlw	3
  4564   001386  5806               	subwfb	(size@s+1)^0,w,c
  4565   001388  A0D8               	btfss	status,0,c
  4566   00138A  EFC9  F009         	goto	i2u118_41
  4567   00138E  EFCB  F009         	goto	i2u118_40
  4568   001392                     i2u118_41:
  4569   001392  EFD0  F009         	goto	i2l2063
  4570   001396                     i2u118_40:
  4571   001396                     
  4572                           ;main.c: 85:         setCTS(1);
  4573   001396  0E01               	movlw	1
  4574   001398  EC4B  F00B         	call	_setCTS
  4575                           
  4576                           ;main.c: 86:     }
  4577   00139C  EFD3  F009         	goto	i2l2065
  4578   0013A0                     i2l2063:
  4579                           
  4580                           ;main.c: 88:         setCTS(0);
  4581   0013A0  0E00               	movlw	0
  4582   0013A2  EC4B  F00B         	call	_setCTS
  4583   0013A6                     i2l2065:
  4584                           
  4585                           ;main.c: 90:     return s;
  4586   0013A6  C005  F003         	movff	size@s,?_size
  4587   0013AA  C006  F004         	movff	size@s+1,?_size+1
  4588   0013AE  0012               	return		;funcret
  4589   0013B0                     __end_of_size:
  4590                           	callstack 0
  4591                           
  4592 ;; *************** function _setCTS *****************
  4593 ;; Defined at:
  4594 ;;		line 52 in file "main.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  b               1    wreg     _Bool 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;  b               1    0[COMRAM] _Bool 
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		wreg
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4608 ;;      Params:         0       0       0       0       0       0       0
  4609 ;;      Locals:         1       0       0       0       0       0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0
  4611 ;;      Totals:         1       0       0       0       0       0       0
  4612 ;;Total ram usage:        1 bytes
  4613 ;; Hardware stack levels used: 1
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		_size
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text32
  4622   001696                     __ptext32:
  4623                           	callstack 0
  4624   001696                     _setCTS:
  4625                           	callstack 19
  4626                           
  4627                           ;incstack = 0
  4628                           ;setCTS@b stored from wreg
  4629   001696  6E01               	movwf	setCTS@b^0,c
  4630   001698                     
  4631                           ;main.c: 52: void setCTS(_Bool b);main.c: 53: {;main.c: 54:     PORTAbits.RA2 = b;
  4632   001698  B001               	btfsc	setCTS@b^0,0,c
  4633   00169A  D002               	bra	i2u26_45
  4634   00169C  9480               	bcf	128,2,c	;volatile
  4635   00169E  D001               	bra	i2u26_46
  4636   0016A0                     i2u26_45:
  4637   0016A0  8480               	bsf	128,2,c	;volatile
  4638   0016A2                     i2u26_46:
  4639   0016A2  0012               	return		;funcret
  4640   0016A4                     __end_of_setCTS:
  4641                           	callstack 0
  4642                           
  4643 ;; *************** function _push *****************
  4644 ;; Defined at:
  4645 ;;		line 111 in file "main.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  c               1    wreg     unsigned char 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;  c               1    4[COMRAM] unsigned char 
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  1    wreg      void 
  4652 ;; Registers used:
  4653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4659 ;;      Params:         0       0       0       0       0       0       0
  4660 ;;      Locals:         3       0       0       0       0       0       0
  4661 ;;      Temps:          0       0       0       0       0       0       0
  4662 ;;      Totals:         3       0       0       0       0       0       0
  4663 ;;Total ram usage:        3 bytes
  4664 ;; Hardware stack levels used: 1
  4665 ;; Hardware stack levels required when called: 1
  4666 ;; This function calls:
  4667 ;;		i2_addone
  4668 ;; This function is called by:
  4669 ;;		_high_isr
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text33
  4674   001208                     __ptext33:
  4675                           	callstack 0
  4676   001208                     _push:
  4677                           	callstack 19
  4678                           
  4679                           ;incstack = 0
  4680                           ;push@c stored from wreg
  4681   001208  6E05               	movwf	push@c^0,c
  4682   00120A                     
  4683                           ;main.c: 111: void push(char c);main.c: 112: {;main.c: 113:     if ( addone(addone(tail)
      +                          ) == head) {
  4684   00120A  C06F  F001         	movff	_tail,i2addone@i
  4685   00120E  C070  F002         	movff	_tail+1,i2addone@i+1
  4686   001212  ECEC  F00A         	call	i2_addone	;wreg free
  4687   001216  C001  F003         	movff	?i2_addone,_push$2047
  4688   00121A  C002  F004         	movff	?i2_addone+1,_push$2047+1
  4689                           
  4690                           ;main.c: 111: void push(char c);main.c: 112: {;main.c: 113:     if ( addone(addone(tail)
      +                          ) == head) {
  4691   00121E  C003  F001         	movff	_push$2047,i2addone@i
  4692   001222  C004  F002         	movff	_push$2047+1,i2addone@i+1
  4693   001226  ECEC  F00A         	call	i2_addone	;wreg free
  4694   00122A  506B               	movf	_head^0,w,c
  4695   00122C  1801               	xorwf	?i2_addone^0,w,c
  4696   00122E  E107               	bnz	i2u119_41
  4697   001230  506C               	movf	(_head+1)^0,w,c
  4698   001232  1802               	xorwf	(?i2_addone+1)^0,w,c
  4699   001234  A4D8               	btfss	status,2,c
  4700   001236  EF1F  F009         	goto	i2u119_41
  4701   00123A  EF21  F009         	goto	i2u119_40
  4702   00123E                     i2u119_41:
  4703   00123E  EF24  F009         	goto	i2l2071
  4704   001242                     i2u119_40:
  4705   001242                     i2l77:
  4706                           
  4707                           ;main.c: 117:             TRISEbits.RE2 = 1;
  4708   001242  8496               	bsf	150,2,c	;volatile
  4709   001244  EF21  F009         	goto	i2l77
  4710   001248                     i2l2071:
  4711                           
  4712                           ;main.c: 120:         tail = addone(tail);
  4713   001248  C06F  F001         	movff	_tail,i2addone@i
  4714   00124C  C070  F002         	movff	_tail+1,i2addone@i+1
  4715   001250  ECEC  F00A         	call	i2_addone	;wreg free
  4716   001254  C001  F06F         	movff	?i2_addone,_tail
  4717   001258  C002  F070         	movff	?i2_addone+1,_tail+1
  4718   00125C                     
  4719                           ;main.c: 121:         queue[tail] = c;
  4720   00125C  0EDA               	movlw	low _queue
  4721   00125E  246F               	addwf	_tail^0,w,c
  4722   001260  6ED9               	movwf	fsr2l,c
  4723   001262  0E00               	movlw	high _queue
  4724   001264  2070               	addwfc	(_tail+1)^0,w,c
  4725   001266  6EDA               	movwf	fsr2h,c
  4726   001268  C005  FFDF         	movff	push@c,indf2
  4727   00126C                     
  4728                           ;main.c: 122:         bytes_pushed++;
  4729   00126C  4A69               	infsnz	_bytes_pushed^0,f,c
  4730   00126E  2A6A               	incf	(_bytes_pushed+1)^0,f,c
  4731   001270  0012               	return		;funcret
  4732   001272                     __end_of_push:
  4733                           	callstack 0
  4734                           
  4735 ;; *************** function i2_addone *****************
  4736 ;; Defined at:
  4737 ;;		line 71 in file "main.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;  i               2    0[COMRAM] short 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  2    0[COMRAM] short 
  4744 ;; Registers used:
  4745 ;;		wreg, status,2, status,0
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4751 ;;      Params:         2       0       0       0       0       0       0
  4752 ;;      Locals:         0       0       0       0       0       0       0
  4753 ;;      Temps:          0       0       0       0       0       0       0
  4754 ;;      Totals:         2       0       0       0       0       0       0
  4755 ;;Total ram usage:        2 bytes
  4756 ;; Hardware stack levels used: 1
  4757 ;; This function calls:
  4758 ;;		Nothing
  4759 ;; This function is called by:
  4760 ;;		_size
  4761 ;;		_push
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           	psect	text34
  4766   0015D8                     __ptext34:
  4767                           	callstack 0
  4768   0015D8                     i2_addone:
  4769                           	callstack 19
  4770   0015D8                     
  4771                           ;main.c: 71: int16_t addone(int16_t i);main.c: 72: {;main.c: 73:     if (i == 1024 -1)
  4772   0015D8  2801               	incf	i2addone@i^0,w,c
  4773   0015DA  E107               	bnz	i2u117_41
  4774   0015DC  0E03               	movlw	3
  4775   0015DE  1802               	xorwf	(i2addone@i+1)^0,w,c
  4776   0015E0  A4D8               	btfss	status,2,c
  4777   0015E2  EFF5  F00A         	goto	i2u117_41
  4778   0015E6  EFF7  F00A         	goto	i2u117_40
  4779   0015EA                     i2u117_41:
  4780   0015EA  EFFD  F00A         	goto	i2l2045
  4781   0015EE                     i2u117_40:
  4782   0015EE                     
  4783                           ;main.c: 74:         return 0;
  4784   0015EE  0E00               	movlw	0
  4785   0015F0  6E02               	movwf	(?i2_addone+1)^0,c
  4786   0015F2  0E00               	movlw	0
  4787   0015F4  6E01               	movwf	?i2_addone^0,c
  4788   0015F6  EF03  F00B         	goto	i2l64
  4789   0015FA                     i2l2045:
  4790                           
  4791                           ;main.c: 75:     return i+1;
  4792   0015FA  0E01               	movlw	1
  4793   0015FC  2401               	addwf	i2addone@i^0,w,c
  4794   0015FE  6E01               	movwf	?i2_addone^0,c
  4795   001600  0E00               	movlw	0
  4796   001602  2002               	addwfc	(i2addone@i+1)^0,w,c
  4797   001604  6E02               	movwf	(?i2_addone+1)^0,c
  4798   001606                     i2l64:
  4799   001606  0012               	return		;funcret
  4800   001608                     __end_ofi2_addone:
  4801                           	callstack 0
  4802                           
  4803 ;; *************** function _first *****************
  4804 ;; Defined at:
  4805 ;;		line 163 in file "main.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;		None
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;		None
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      unsigned char 
  4812 ;; Registers used:
  4813 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4819 ;;      Params:         0       0       0       0       0       0       0
  4820 ;;      Locals:         0       0       0       0       0       0       0
  4821 ;;      Temps:          0       0       0       0       0       0       0
  4822 ;;      Totals:         0       0       0       0       0       0       0
  4823 ;;Total ram usage:        0 bytes
  4824 ;; Hardware stack levels used: 1
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_high_isr
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           	psect	text35
  4833   001686                     __ptext35:
  4834                           	callstack 0
  4835   001686                     _first:
  4836                           	callstack 20
  4837   001686                     
  4838                           ;main.c: 165:     return queue[head];
  4839   001686  0EDA               	movlw	low _queue
  4840   001688  246B               	addwf	_head^0,w,c
  4841   00168A  6ED9               	movwf	fsr2l,c
  4842   00168C  0E00               	movlw	high _queue
  4843   00168E  206C               	addwfc	(_head+1)^0,w,c
  4844   001690  6EDA               	movwf	fsr2h,c
  4845   001692  50DF               	movf	indf2,w,c
  4846   001694  0012               	return		;funcret
  4847   001696                     __end_of_first:
  4848                           	callstack 0
  4849                           
  4850                           	psect	rparam
  4851   000000                     
  4852                           	psect	temp
  4853   000071                     btemp:
  4854                           	callstack 0
  4855   000071                     	ds	1
  4856   000000                     int$flags	set	btemp
  4857   000000                     wtemp8	set	btemp+1
  4858   000000                     ttemp5	set	btemp+1
  4859   000000                     ttemp6	set	btemp+4
  4860   000000                     ttemp7	set	btemp+8
  4861                           
  4862                           	psect	config
  4863                           
  4864                           ; Padding undefined space
  4865   300000                     	org	3145728
  4866   300000  FF                 	db	255
  4867                           
  4868                           ;Config register CONFIG1H @ 0x300001
  4869                           ;	Oscillator Selection bits
  4870                           ;	OSC = HS, HS oscillator
  4871                           ;	Fail-Safe Clock Monitor Enable bit
  4872                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4873                           ;	Internal/External Oscillator Switchover bit
  4874                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4875   300001                     	org	3145729
  4876   300001  02                 	db	2
  4877                           
  4878                           ;Config register CONFIG2L @ 0x300002
  4879                           ;	Power-up Timer Enable bit
  4880                           ;	PWRT = OFF, PWRT disabled
  4881                           ;	Brown-out Reset Enable bits
  4882                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4883                           ;	Brown Out Reset Voltage bits
  4884                           ;	BORV = 3, Minimum setting
  4885   300002                     	org	3145730
  4886   300002  19                 	db	25
  4887                           
  4888                           ;Config register CONFIG2H @ 0x300003
  4889                           ;	Watchdog Timer Enable bit
  4890                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4891                           ;	Watchdog Timer Postscale Select bits
  4892                           ;	WDTPS = 32768, 1:32768
  4893   300003                     	org	3145731
  4894   300003  1E                 	db	30
  4895                           
  4896                           ; Padding undefined space
  4897   300004                     	org	3145732
  4898   300004  FF                 	db	255
  4899                           
  4900                           ;Config register CONFIG3H @ 0x300005
  4901                           ;	CCP2 MUX bit
  4902                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4903                           ;	PORTB A/D Enable bit
  4904                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4905                           ;	Low-Power Timer1 Oscillator Enable bit
  4906                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4907                           ;	MCLR Pin Enable bit
  4908                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4909   300005                     	org	3145733
  4910   300005  81                 	db	129
  4911                           
  4912                           ;Config register CONFIG4L @ 0x300006
  4913                           ;	Stack Full/Underflow Reset Enable bit
  4914                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4915                           ;	Single-Supply ICSP Enable bit
  4916                           ;	LVP = OFF, Single-Supply ICSP disabled
  4917                           ;	Extended Instruction Set Enable bit
  4918                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4919                           ;	Background Debugger Enable bit
  4920                           ;	DEBUG = 0x1, unprogrammed default
  4921   300006                     	org	3145734
  4922   300006  81                 	db	129
  4923                           
  4924                           ; Padding undefined space
  4925   300007                     	org	3145735
  4926   300007  FF                 	db	255
  4927                           
  4928                           ;Config register CONFIG5L @ 0x300008
  4929                           ;	Code Protection bit
  4930                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4931                           ;	Code Protection bit
  4932                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4933                           ;	Code Protection bit
  4934                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4935                           ;	Code Protection bit
  4936                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4937   300008                     	org	3145736
  4938   300008  0F                 	db	15
  4939                           
  4940                           ;Config register CONFIG5H @ 0x300009
  4941                           ;	Boot Block Code Protection bit
  4942                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4943                           ;	Data EEPROM Code Protection bit
  4944                           ;	CPD = OFF, Data EEPROM not code-protected
  4945   300009                     	org	3145737
  4946   300009  C0                 	db	192
  4947                           
  4948                           ;Config register CONFIG6L @ 0x30000A
  4949                           ;	Write Protection bit
  4950                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4951                           ;	Write Protection bit
  4952                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4953                           ;	Write Protection bit
  4954                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4955                           ;	Write Protection bit
  4956                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4957   30000A                     	org	3145738
  4958   30000A  0F                 	db	15
  4959                           
  4960                           ;Config register CONFIG6H @ 0x30000B
  4961                           ;	Configuration Register Write Protection bit
  4962                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4963                           ;	Boot Block Write Protection bit
  4964                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4965                           ;	Data EEPROM Write Protection bit
  4966                           ;	WRTD = OFF, Data EEPROM not write-protected
  4967   30000B                     	org	3145739
  4968   30000B  E0                 	db	224
  4969                           
  4970                           ;Config register CONFIG7L @ 0x30000C
  4971                           ;	Table Read Protection bit
  4972                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4973                           ;	Table Read Protection bit
  4974                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4975                           ;	Table Read Protection bit
  4976                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4977                           ;	Table Read Protection bit
  4978                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4979   30000C                     	org	3145740
  4980   30000C  0F                 	db	15
  4981                           
  4982                           ;Config register CONFIG7H @ 0x30000D
  4983                           ;	Boot Block Table Read Protection bit
  4984                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4985   30000D                     	org	3145741
  4986   30000D  40                 	db	64
  4987                           tosu	equ	0xFFF
  4988                           tosh	equ	0xFFE
  4989                           tosl	equ	0xFFD
  4990                           stkptr	equ	0xFFC
  4991                           pclatu	equ	0xFFB
  4992                           pclath	equ	0xFFA
  4993                           pcl	equ	0xFF9
  4994                           tblptru	equ	0xFF8
  4995                           tblptrh	equ	0xFF7
  4996                           tblptrl	equ	0xFF6
  4997                           tablat	equ	0xFF5
  4998                           prodh	equ	0xFF4
  4999                           prodl	equ	0xFF3
  5000                           indf0	equ	0xFEF
  5001                           postinc0	equ	0xFEE
  5002                           postdec0	equ	0xFED
  5003                           preinc0	equ	0xFEC
  5004                           plusw0	equ	0xFEB
  5005                           fsr0h	equ	0xFEA
  5006                           fsr0l	equ	0xFE9
  5007                           wreg	equ	0xFE8
  5008                           indf1	equ	0xFE7
  5009                           postinc1	equ	0xFE6
  5010                           postdec1	equ	0xFE5
  5011                           preinc1	equ	0xFE4
  5012                           plusw1	equ	0xFE3
  5013                           fsr1h	equ	0xFE2
  5014                           fsr1l	equ	0xFE1
  5015                           bsr	equ	0xFE0
  5016                           indf2	equ	0xFDF
  5017                           postinc2	equ	0xFDE
  5018                           postdec2	equ	0xFDD
  5019                           preinc2	equ	0xFDC
  5020                           plusw2	equ	0xFDB
  5021                           fsr2h	equ	0xFDA
  5022                           fsr2l	equ	0xFD9
  5023                           status	equ	0xFD8

Data Sizes:
    Strings     193
    Constant    0
    Data        2
    BSS         1068
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    100     112
    BANK0           128     56      90
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    do_blank@s	PTR unsigned char  size(1) Largest target is 20
		 -> STR_1(CODE[15]), STR_5(CODE[20]), 

    do_read@s	PTR unsigned char  size(1) Largest target is 14
		 -> STR_6(CODE[14]), 

    do_write@s	PTR unsigned char  size(1) Largest target is 15
		 -> STR_9(CODE[15]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    memset@dest	PTR void  size(2) Largest target is 1024
		 -> queue(BIGRAM[1024]), 

    memset@p	PTR unsigned char  size(2) Largest target is 1024
		 -> queue(BIGRAM[1024]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1686$buffer	PTR unsigned char  size(2) Largest target is 0

    S1686$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 1024
		 -> queue(BIGRAM[1024]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 42
		 -> STR_10(CODE[42]), STR_11(CODE[28]), STR_3(CODE[10]), STR_4(CODE[8]), 
		 -> STR_7(CODE[7]), STR_8(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 48
		 -> do_blank@ads(BANK0[32]), do_read@ads(COMRAM[16]), do_write@ads(BANK0[48]), 

    uart_getc@c	PTR unsigned char  size(1) Largest target is 1
		 -> high_isr@c(COMRAM[1]), 

    uart_puts@p	PTR unsigned char  size(2) Largest target is 64
		 -> do_blank@ads(BANK0[32]), do_read@ads(COMRAM[16]), do_write@ads(BANK0[48]), STR_1(CODE[15]), 
		 -> STR_2(CODE[29]), STR_5(CODE[20]), STR_6(CODE[14]), STR_9(CODE[15]), 
		 -> uart_printf@buf(COMRAM[64]), 

    uart_puts@s	PTR unsigned char  size(2) Largest target is 64
		 -> do_blank@ads(BANK0[32]), do_read@ads(COMRAM[16]), do_write@ads(BANK0[48]), STR_1(CODE[15]), 
		 -> STR_2(CODE[29]), STR_5(CODE[20]), STR_6(CODE[14]), STR_9(CODE[15]), 
		 -> uart_printf@buf(COMRAM[64]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 42
		 -> STR_10(CODE[42]), STR_11(CODE[28]), STR_3(CODE[10]), STR_4(CODE[8]), 
		 -> STR_7(CODE[7]), STR_8(CODE[5]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 42
		 -> STR_10(CODE[42]), STR_11(CODE[28]), STR_3(CODE[10]), STR_4(CODE[8]), 
		 -> STR_7(CODE[7]), STR_8(CODE[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 42
		 -> STR_10(CODE[42]), STR_11(CODE[28]), STR_3(CODE[10]), STR_4(CODE[8]), 
		 -> STR_7(CODE[7]), STR_8(CODE[5]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_do_read
    _uart_init->___lldiv
    ___lldiv->___lmul
    _makenull->_memset
    _do_write->_sprintf
    _pop->_addone
    _empty->_addone
    _do_read->_sprintf
    _do_blank->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _read_prec_or_width->___wmul

Critical Paths under _high_isr in COMRAM

    _high_isr->_size
    _size->i2_addone
    _push->i2_addone

Critical Paths under _main in BANK0

    _main->_do_write

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   32843
                                             97 COMRAM     3     3      0
                           _do_blank
                            _do_read
                           _do_write
                           _makenull
                                _pop
                         _ports_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            9     5      4     854
                                             37 COMRAM     9     5      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                             12 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                             24 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ports_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _makenull                                             0     0      0     324
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     324
                                             12 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _do_write                                            56    56      0   10975
                                              0 BANK0     56    56      0
                     _charToHexDigit
                                _pop
                          _read_port
                      _setup_address
                            _sprintf
                          _uart_puts
                         _write_port
 ---------------------------------------------------------------------------------
 (2) _write_port                                           3     3      0      22
                                             12 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _pop                                                  1     1      0     816
                                             14 COMRAM     1     1      0
                             _addone
                              _empty
 ---------------------------------------------------------------------------------
 (2) _empty                                                0     0      0     396
                             _addone
 ---------------------------------------------------------------------------------
 (3) _addone                                               2     0      2     396
                                             12 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _charToHexDigit                                       1     1      0     110
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _do_read                                             21    21      0    9881
                                             76 COMRAM    21    21      0
                          _read_port
                      _setup_address
                            _sprintf
                          _uart_putc
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _uart_putc                                            1     1      0      15
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _do_blank                                            37    37      0    9897
                                              0 BANK0     37    37      0
                          _read_port
                      _setup_address
                            _sprintf
                          _uart_puts
 ---------------------------------------------------------------------------------
 (2) _uart_puts                                            4     2      2    1179
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    7814
                                             57 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    6422
                                             53 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           10     7      3    5934
                                             44 COMRAM     9     6      3
                              _fputc
                 _read_prec_or_width
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                12     9      3    3354
                                             32 COMRAM    12     9      3
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     3      4    2741
                                             25 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                5     3      2    1357
                                             20 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     857
                                             12 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2     852
                                             18 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     412
                                             12 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _setup_address                                        4     2      2     428
                                             12 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _read_port                                            1     1      0      34
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _high_isr                                            6     6      0     617
                                              6 COMRAM     6     6      0
                              _first
                               _push
                               _size
                          _uart_getc
 ---------------------------------------------------------------------------------
 (11) _uart_getc                                           3     2      1     123
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (11) _size                                                4     2      2     208
                                              2 COMRAM     4     2      2
                             _setCTS
                           i2_addone
 ---------------------------------------------------------------------------------
 (12) _setCTS                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _push                                                3     3      0     193
                                              2 COMRAM     3     3      0
                           i2_addone
 ---------------------------------------------------------------------------------
 (12) i2_addone                                            2     0      2     148
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (11) _first                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _do_blank
     _read_port
     _setup_address
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _read_prec_or_width
             ___wmul
           _xtoa
             _pad
               _fputc
               _fputs
                 _fputc
     _uart_puts
   _do_read
     _read_port
     _setup_address
     _sprintf
     _uart_putc
     _uart_puts
   _do_write
     _charToHexDigit
     _pop
       _addone
       _empty
         _addone
     _read_port
     _setup_address
     _sprintf
     _uart_puts
     _write_port
   _makenull
     _memset
   _pop
   _ports_init
   _uart_init
     ___lldiv
       ___lmul (ARG)
     ___lmul

 _high_isr (ROOT)
   _first
   _push
     i2_addone
   _size
     _setCTS
     i2_addone
   _uart_getc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0     400      25       66.7%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     38      5A       5       70.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     64      70       1       88.9%
BITBIGSFRhlhhh      21      0       0      17        0.0%
BITBIGSFRlhl         D      0       0      23        0.0%
BITBIGSFRhlhhl       D      0       0      18        0.0%
BITBIGSFRhh          D      0       0      16        0.0%
BITBIGSFRhlhlll      B      0       0      21        0.0%
BITBIGSFRhlhlh       8      0       0      19        0.0%
BITBIGSFRhlhllh      7      0       0      20        0.0%
BITBIGSFRhll         6      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CA      24        0.0%
DATA                 0      0     4CA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Feb  9 12:21:22 2025

                        l60 1576                          l64 15A6                          l73 1634  
                        l85 132C                          l96 14E0                          l89 1360  
       ___wmul@multiplicand 000F                         l102 165E                         l112 119C  
                       l121 0C0E                         l210 15AE                         l115 1546  
                       l212 15C8                         l213 15C6                         l141 0B28  
                       l231 0FE6                         l119 0BF4                         l215 15D6  
                       l127 0CE4                         l135 13F6                         l232 0FE4  
                       l241 1684                         l209 15B0                         l129 0CE6  
                       l226 0FA0                         l235 1024                         l227 0F9E  
                       l139 0B16                         l252 11F6                         l253 1206  
                       l191 0880                         l192 08C4                         l193 08A0  
                       l275 0F98                         l268 0F88                         l197 0944  
                       l189 085C                         l925 1514                         l918 14A8  
                       l943 1056                         l960 0A3E                         l946 1094  
                       l964 0EEC                         l948 10AE                         l968 0EF4  
                       l992 1434                         l985 081E                         u360 15BE  
                       u361 15BA                         u370 15D6                         u371 15D2  
                       u960 158E                         u961 158A                         _pad 1026  
                       _pop 1314                         wreg 0FE8                 do_write@ads 0080  
                      l1004 0E4E                        l1012 1470                        l1015 16A6  
                      l2001 13E8                        l2003 13EE                        l2011 11BC  
                      l2005 13F0                        l2021 0F1C                        l2013 11CC  
                      l2031 0F66                        l2023 0F24                        l2015 11D6  
                      l2007 119E                        l1305 15AA                        l2033 0F76  
                      l2025 0F30                        l2017 0EF6                        l2009 11AE  
                      l1307 15BE                        l2051 1564                        l1411 163E  
                      l2035 0F78                        l2027 0F3E                        l2019 0F06  
                      l2053 156C                        l1421 1648                        l1413 1640  
                      l1405 1636                        l2037 0F82                        l2029 0F48  
                      l2055 1572                        l1423 164A                        l1415 1642  
                      l1407 1638                        l2401 098C                        l2049 1548  
                      l1425 164C                        l1417 1644                        l1409 163C  
                      l2241 0854                        l2411 09DE                        l2403 0998  
                      l1427 165A                        l1419 1646                        l2251 08AE  
                      l2243 086A                        l2501 1132                        l2341 0DA6  
                      l2413 09F0                        l2405 099C                        l1429 165C  
                      l2261 0930                        l2253 08BC                        l2245 0878  
                      l2237 0820                        l2511 1186                        l2503 113A  
                      l2431 0E9E                        l2423 0E50                        l2351 0E1E  
                      l2343 0DB6                        l2415 0A00                        l2407 09A2  
                      l2271 093E                        l2263 0934                        l2247 088E  
                      l2255 08C4                        l2239 0846                        l2521 1516  
                      l2513 118C                        l2505 113E                        l2433 0EBE  
                      l2425 0E58                        l2345 0DC6                        l2361 1454  
                      l2417 0A1A                        l2409 09C2                        l2441 06EE  
                      l2601 0C06                        l1801 159A                        l2273 0940  
                      l2265 0938                        l2257 08D2                        l2531 1540  
                      l2523 1518                        l2515 118E                        l2507 1150  
                      l2363 1660                        l2427 0E7A                        l2435 0EC6  
                      l2347 0DD0                        l2355 1436                        l2371 1034  
                      l2419 0A28                        l2451 0716                        l2443 06FA  
                      l2611 0C18                        l2275 0942                        l2267 093A  
                      l2259 08D6                        l2533 1544                        l2525 1520  
                      l2517 1194                        l2509 1168                        l2365 167C  
                      l2429 0E82                        l2349 0DEC                        l2357 1442  
                      l2381 1076                        l2373 1040                        l2461 0760  
                      l2445 0700                        l2437 06C4                        l2541 0FBA  
                      l2621 0C36                        l2605 0C10                        l1901 135C  
                      l2269 093C                        l2527 152A                        l2519 1196  
                      l2359 1450                        l2383 10A2                        l2375 104E  
                      l2391 0964                        l2471 07B6                        l2463 076E  
                      l2455 071E                        l2447 0708                        l2439 06E6  
                      l2551 14F2                        l2543 0FDC                        l2631 0C6C  
                      l2607 0C14                        l1903 135E                        l2711 0D18  
                      l2703 0CE8                        l2529 1536                        l2377 1062  
                      l2369 1026                        l2393 096A                        l2385 0946  
                      l2473 07C4                        l2481 07F0                        l2465 0778  
                      l2449 070A                        l2457 073C                        l2553 14FA  
                      l2545 0FF4                        l2537 0F9A                        l2561 0B30  
                      l2641 0CBC                        l2633 0C80                        l2625 0C4A  
                      l2617 0C22                        l2609 0C16                        l2721 0D44  
                      l2713 0D1A                        l2705 0CFC                        l2379 1072  
                      l2395 0970                        l2387 094A                        l2467 0782  
                      l2459 074C                        l2491 13F8                        l2555 150A  
                      l2547 14E2                        l2539 0FAE                        l2571 0B3E  
                      l2563 0B32                        l2643 0CC6                        l2635 0C8A  
                      l2627 0C56                        l2619 0C32                        l1923 14DC  
                      l1915 14C4                        l1907 14AC                        l2651 0A40  
                      l2731 0D7C                        l2723 0D46                        l2715 0D1C  
                      l2707 0D00                        l2397 0980                        l2389 095A  
                      l2469 079E                        l2485 07FC                        l2493 1400  
                      l2549 14EA                        l2581 0B72                        l2573 0B4E  
                      l2565 0B34                        l2645 0CCC                        l2637 0CA6  
                      l2629 0C5C                        l1917 14D4                        l1909 14BC  
                      l1861 162C                        l2653 0A44                        l2733 0D84  
                      l2725 0D50                        l2717 0D1E                        l2709 0D02  
                      l2399 0988                        l2479 07D8                        l2495 1410  
                      l2591 0BCA                        l2583 0B7A                        l2575 0B52  
                      l2559 0B2A                        l2647 0CCE                        l2639 0CB8  
                      l2671 0A7C                        l2663 0A54                        l2655 0A46  
                      l2735 0D96                        l2727 0D62                        l2719 0D34  
                      l2497 142C                        l2593 0BD4                        l2585 0B8A  
                      l2649 0CD2                        l1865 1632                        l2681 0AB6  
                      l2673 0A84                        l2665 0A64                        l2657 0A48  
                      l1881 147E                        l2737 0D9A                        l2729 0D6A  
                      l2587 0B9A                        l2595 0BDE                        l2579 0B66  
                      l1795 1578                        l1859 1608                        l1891 1318  
                      l2691 0AF2                        l2683 0ABE                        l2675 0A8E  
                      l2667 0A68                        l1883 148A                        l2597 0BE2  
                      l2589 0BAE                        l1797 158E                        l1893 1332  
                      l2685 0AC6                        l2677 0AA0                        l1885 148E  
                      ?_pad 001A                        l2599 0BF6                        l1895 1342  
                      l1887 1314                        l1991 13C6                        l2687 0AD8  
                      l2695 0B00                        l2679 0AAA                        l1879 1472  
                      l1897 1356                        l1889 1318                        l1993 13C8  
                      l1985 13B2                        l2697 0B04                        l2689 0ADA  
                      l1899 135A                        l1995 13CE                        l1987 13BA  
                      l2699 0B18                        l1997 13D0                        l1989 13BE  
                      l1999 13E6                        ?_pop 0001                        STR_1 0687  
                      STR_2 062B                        STR_3 06A4                        STR_4 06AE  
                      STR_5 0664                        STR_6 0696                        STR_7 06B6  
                      STR_8 06BD                        STR_9 0678                        u1010 162C  
                      u1011 1628                        u1030 14A8                        u1031 14A4  
                      u1040 132C                        u1120 11BC                        u1041 1328  
                      u1121 11B8                        u1050 14BC                        u1130 11F6  
                      u1051 14B8                        u1131 11F2                        u1060 14D4  
                      u1140 0F1C                        u1061 14D0                        u1141 0F18  
                      u1150 0F3E                        u2007 1530                        u1151 0F3A  
                      u1160 0F66                        u1400 08AE                        u2017 153A  
                      u1161 0F62                        u1401 08AA                        u1410 08BC  
                      u1411 08B8                        u1500 0DB6                        u1420 08D2  
                      u1340 0846                        u1501 0DB2                        u1421 08CE  
                      u1341 0842                        u1510 0DC6                        u1350 0854  
                      u1511 0DC2                        u1351 0850                        u1520 0DEC  
                      u1360 086A                        u1521 0DE8                        u1361 0866  
                      u1530 0E1E                        u1610 09DE                        u1370 0878  
                      u1531 0E1A                        u1611 09DA                        u1371 0874  
                      u1540 1470                        u1620 09F0                        u1700 076E  
                      u1380 088E                        u1541 146C                        u1621 09EC  
                      u1605 09AE                        u1701 076A                        u1381 088A  
                      u1550 1034                        u1630 0A00                        u1710 079E  
                      u1390 089C                        u1551 1030                        u1631 09FC  
                      u1711 079A                        u1391 0898                        u1560 104E  
                      u1640 0A1A                        u1720 142C                        u1800 0BF4  
                      u1561 104A                        u1641 0A16                        u1721 1428  
                      u1801 0BF0                        u1570 1094                        u1650 0A28  
                      u1730 0FAE                        u1810 0C06                        u1571 1090  
                      u1651 0A24                        u1731 0FAA                        u1811 0C02  
                      u1660 0E7A                        u1580 10A2                        u1740 0FDA  
                      u1820 0C32                        u1900 0D62                        u1661 0E76  
                      u1581 109E                        u1821 0C2E                        u1901 0D5E  
                      u1670 0EEC                        u1590 0980                        u1750 0FF4  
                      u1830 0C6C                        u1910 0D7C                        u1671 0EE8  
                      u1591 097C                        u1751 0FF0                        u1831 0C68  
                      u1911 0D78                        u1680 06E6                        u1760 1014  
                      u1840 0CB8                        u1920 0D96                        u1681 06E2  
                      u1841 0CB4                        u1921 0D92                        u1690 074C  
                      u1770 1024                        u1850 0CE4                        u1691 0748  
                      u1771 1020                        u1747 0FD0                        u1851 0CE0  
                      u1780 0B4E                        u1860 0A64                        u1781 0B4A  
                      u1861 0A60                        u1790 0B8A                        u1870 0AD8  
                      u1767 100A                        u1791 0B86                        u1871 0AD4  
                      u1880 0B16                        u1881 0B12                        u1937 0D0C  
                      u1890 0D44                        u1891 0D40                        u1947 0D28  
                      u1957 13B4                        u1967 13C0                        u1977 13DA  
                      u1987 151A                        u1997 1524                        i2l64 1606  
                      i2l81 1270                        i2l57 16A2                        i2l92 1694  
                      i2l77 1242                        i2l69 13AE                        _dbuf 00BA  
                      _head 006B                        _main 0CE8                        _tail 006F  
                      _prec 00B8                        pad@i 001F                        _size 1362  
                      pad@p 001C                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf1 0FE7                        indf2 0FDF                        fsr1l 0FE1  
                      fsr2l 0FD9                        _push 1208                        btemp 0071  
                      _xtoa 0946                        pop@c 000F                        prodh 0FF4  
                      prodl 0FF3                        start 000E             ?_charToHexDigit 0001  
              do_write@addr 00B6                ___param_bank 0000                do_write@data 00B5  
              do_write@read 00B3                       ??_pad 001E                       ??_pop 000F  
                     ?_main 0001                       STR_10 0601                       STR_11 0648  
                     ?_size 0003                       ?_push 0001             __end_of___lldiv 0F9A  
                     ?_xtoa 0021                       i2l220 12F2                       i2l109 1126  
                     i2l223 1312                       i2l218 12DC                       _RCREG 0FAE  
              vfpfcnvrt@fmt 002E                       _SPBRG 0FAF                       _PORTD 0F83  
                     _TRISB 0F93                       _TRISC 0F94                       _TRISD 0F95  
                     _TXREG 0FAD         ___lmul@multiplicand 0011             __end_of_do_read 0CE8  
           ??_setup_address 000F                       _flags 006D                       _first 1686  
                     _empty 1608         read_prec_or_width@c 0015         read_prec_or_width@n 0016  
                     _fputc 0DA6                       _fputs 1436                       pad@fp 001A  
                     _width 0065                       _queue 00DA                       _putch 16A6  
                     tablat 0FF5            __end_ofi2_addone 1608                       size@s 0005  
                     push@c 0005                       ttemp5 0072                       ttemp6 0075  
                     ttemp7 0079                       status 0FD8                       wtemp8 0072  
           __end_of_sprintf 1516                       xtoa@c 002A                       xtoa@d 0022  
                     xtoa@i 002B                       xtoa@p 0027                       xtoa@w 0028  
           __initialization 1272                __end_of_main 0DA6                __end_of_size 13B0  
              __end_of_push 1272                __end_of_xtoa 0A40                      ??_main 0062  
            write_port@data 000F                      ??_size 0005                      ??_push 0003  
                    ??_xtoa 0024               __activetblptr 0002  __end_of_read_prec_or_width 0EF6  
                    _ADCON1 0FC1                      ?_first 0001                      ?_empty 0001  
                    ?_fputc 000D                      ?_fputs 0015                      ?_putch 0001  
                    i2l1401 1686                      i2l2041 15EE                      i2l2045 15FA  
                    i2l2061 1396                      i2l2039 15D8                      i2l2071 1248  
                    i2l2063 13A0                      i2l2073 125C                      i2l2065 13A6  
                    i2l2057 1362                      i2l2081 12D6                      i2l2075 126C  
                    i2l2059 137A                      i2l2083 12EA                      i2l2069 120A  
                    i2l1197 1698                      i2l2085 1300                      i2l2077 12C4  
                    i2l2087 130C                      i2l2079 12C8                      i2l2089 1310  
                    i2l2281 10C0                      i2l2291 10EE                      i2l2283 10C2  
                    i2l2293 1102                      i2l2285 10CC                      i2l2277 10BA  
                    i2l2295 111E                      i2l2287 10DC                      i2l2279 10BE  
                    i2l2289 10E2                      i2l2297 1122                      i2l2299 1124  
             vfpfcnvrt@done 0034                      _SPBRGH 0FB0            __end_of_do_blank 0C10  
              vfprintf@cfmt 0039            __end_of_do_write 0B2A            __end_of_high_isr 1132  
                    ___lmul 119E                      _addone 1578                      ___wmul 1660  
                 ??___lldiv 0021            __end_of_makenull 1578        read_prec_or_width@ap 0014  
                    _setCTS 1696                      _memset 1472                      clear_0 1292  
                    clear_1 12A4                      clear_2 12B0                      isa$std 0001  
                    pad@buf 001B                   ??_do_read 004D                      fputc@c 000D  
                    fputs@c 0017                      fputs@i 0018                __pdataCOMRAM 006F  
                    fputs@s 0015                __mediumconst 0000                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8                      putch@c 0001  
          __end_of_vfprintf 1436                   ??_sprintf 0040                      xtoa@fp 0021  
                __accesstop 0080     __end_of__initialization 12B6               ___rparam_used 0001  
            __pcstackCOMRAM 0001               __end_of_first 1696               __end_of_empty 1636  
             __end_of_fputc 0E50               __end_of_fputs 1472               __end_of_putch 16A8  
                 ?i2_addone 0001                     ??_first 0001                     ??_empty 000F  
                   ??_fputc 0010                     ??_fputs 0017                     ??_putch 000D  
                __pbssBANK0 00B8            ??_charToHexDigit 000D                  _cmd_active 006E  
                   ?___lmul 000D                     ?_addone 000D                     ?___wmul 000D  
                   ?_setCTS 0001                     ?_memset 000D              ___lmul@product 0015  
                ??i2_addone 0003             setup_address@hi 0010                     i2u26_45 16A0  
                   i2u26_46 16A2                   ?_do_blank 0001                   ?_do_write 0001  
                 ?_high_isr 0001                   ?_makenull 0001                     __Hparam 0000  
                   __Lparam 0000                     ___lldiv 0EF6                   ?_vfprintf 0036  
              __psmallconst 0600                     __pcinit 1272                     __ramtop 0600  
                   _do_read 0C10                     __ptext0 0CE8                     __ptext1 0820  
                   __ptext2 119E                     __ptext3 0EF6                     __ptext4 1636  
                   __ptext5 1548                     __ptext6 1472                     __ptext7 0A40  
                   __ptext8 13B0                     __ptext9 1314                     addone@i 000D  
     read_prec_or_width@fmt 0013           __end_of_read_port 1548                  ??_do_blank 004D  
                   main@cmd 0064       __end_of_setup_address 119E                     _sprintf 14E2  
                ??_do_write 004D                  ??_high_isr 0007              __pintcode_body 10B0  
      end_of_initialization 12B6                  ??_makenull 0015                     fputc@fp 000F  
                   setCTS@b 0001                     memset@c 000F                     memset@n 0011  
                   memset@p 0013               __Lmediumconst 0000                     int_func 10B0  
                   fputs@fp 0016          _read_prec_or_width 0E50           __end_of_uart_getc 1314  
         __end_of_uart_init 0946             ___lldiv@divisor 001D                  do_blank@ok 00A0  
         __end_of_uart_putc 15D8           setup_address@addr 000D           __end_of_uart_puts 1026  
           ___lldiv@counter 0025           __end_of_vfpfcnvrt 0820                   _RCSTAbits 0FAB  
                   postdec1 0FE5                     postdec2 0FDD         ?_read_prec_or_width 0013  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
          vfpfcnvrt@convarg 0030                  ??_vfprintf 0039                 uart_getc@ok 0002  
                do_read@ads 004D                  do_read@col 005F                   _PORTAbits 0F80  
                 _PORTBbits 0F81                   _PORTCbits 0F82                   _PORTEbits 0F84  
                 _TRISAbits 0F92                   _TRISCbits 0F94                   _TRISEbits 0F96  
      ??_read_prec_or_width 0015                  _ports_init 1636                  do_write@hi 00B2  
                do_write@lo 00B1                  high_isr@ok 000B                   i2addone@i 0001  
                 _TXSTAbits 0FAC              __end_of___lmul 1208                 vfpfcnvrt@ap 002F  
            __end_of_addone 15A8                 vfpfcnvrt@cp 0035                 vfpfcnvrt@fp 002D  
            __end_of___wmul 1686                 _BAUDCONbits 0FB8               __pidataCOMRAM 16A4  
                _write_port 13B0              __end_of_setCTS 16A4              __end_of_memset 14AA  
       start_initialization 1272                 __end_of_pad 10B0                 __end_of_pop 1362  
               vfprintf@fmt 0037                    ??___lmul 0015                    ??_addone 000F  
                  ??___wmul 0011                    ??_setCTS 0001                    ??_memset 0013  
                memset@dest 000D                 __pbssBIGRAM 00DA                 __pbssCOMRAM 0065  
             __pcstackBANK0 0080                 ?_ports_init 0001                _bytes_popped 0067  
                 __pintcode 0008                _bytes_pushed 0069                    ?___lldiv 0019  
               ?_write_port 0001                    ?_do_read 0001                 __smallconst 0600  
                  ?_sprintf 003A                   _read_port 1516              ___wmul@product 0011  
                  _IPR1bits 0F9F                    _PIE1bits 0F9D                   _push$2047 0003  
                  i2u120_40 12D6                    i2u120_41 12D2                    i2u121_40 12EA  
                  i2u121_41 12E6                    i2u122_40 1300                    i2u122_41 12FC  
                  i2u117_40 15EE                    i2u117_41 15EA             uart_init@factor 002E  
                  i2u118_40 1396                    i2u118_41 1392                    i2u119_40 1242  
                  i2u143_40 10DC                    i2u119_41 123E                    i2u143_41 10D8  
                 do_blank@s 00A2                    i2u144_40 1102                    i2u144_41 10FE  
                  i2u145_40 111E                    i2u145_41 111A                    _PIR1bits 0F9E  
                  _RCONbits 0FD0                  uart_getc@c 0001                   _uart_getc 12C4  
                 _uart_init 0820                   _uart_putc 15A8                   _uart_puts 0F9A  
                uart_init@n 002A                  uart_putc@c 000D                   _vfpfcnvrt 06C4  
                uart_puts@p 000F                  uart_puts@s 000D                  _ADCON0bits 0FC2  
         ___wmul@multiplier 000D                    i2_addone 15D8                   do_write@c 00B4  
                 high_isr@c 000C                   do_write@s 00B0                   high_isr@n 0009  
         ___lmul@multiplier 000D                  ?_read_port 0001                    __Hrparam 0000  
                vfprintf@ap 0038                    __Lrparam 0000                  vfprintf@fp 0036  
                ?_uart_getc 0001                  ?_uart_init 0026                  ?_uart_putc 0001  
                ?_uart_puts 000D                  ?_vfpfcnvrt 002D                  sprintf@fmt 003B  
        uart_init@baud_rate 0026                    _do_blank 0B2A                    __ptext10 1608  
                  __ptext11 1578                    __ptext20 0946                    __ptext12 14AA  
                  __ptext21 1026                    __ptext13 0C10                    __ptext30 12C4  
                  __ptext22 1436                    __ptext14 15A8                    __ptext31 1362  
                  __ptext23 0DA6                    __ptext15 0B2A                    __ptext32 1696  
                  __ptext24 16A6                    __ptext16 0F9A                    __ptext33 1208  
                  __ptext25 0E50                    __ptext17 14E2                    __ptext34 15D8  
                  __ptext26 1660                    __ptext18 13F8                    __ptext35 1686  
                  __ptext27 1132                    __ptext19 06C4                    __ptext28 1516  
                  _do_write 0A40                    _high_isr 0008             charToHexDigit@c 000D  
              do_blank@addr 00A3                do_blank@data 00A1                    _makenull 1548  
                  isa$xinst 0000                    do_read@s 005D                    int$flags 0071  
                  _vfprintf 13F8                  _INTCONbits 0FF2                ??_ports_init 000D  
               ??_read_port 000D               _setup_address 1132                    intlevel2 0000  
                 sprintf@ap 0040            ___lldiv@dividend 0019                 do_blank@ads 0080  
               ??_uart_getc 0002                 ??_uart_init 002A                 ??_uart_putc 000D  
               ??_uart_puts 000F              _charToHexDigit 14AA          __end_of_ports_init 1660  
               ??_vfpfcnvrt 0030                ??_write_port 000D                    sprintf@f 0041  
                  sprintf@s 003A            ___lldiv@quotient 0021                 do_read@addr 0060  
               do_read@data 005E              ?_setup_address 000D          __end_of_write_port 13F8  
             read_port@data 000D      __end_of_charToHexDigit 14E2  
