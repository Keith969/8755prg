How's RTS/CTS signalling supposed to work?

I have a PC with a usb-to-rs232 cable connecting to a PIC condigured as a UART. 
It sends and receies data fine at 115200 baud with no flow control, but I want to
be able to send large-ish chunks of data to the PIC without loss (it's part of
a project to create a EPROM programmer for strange devices like the 8755 which
most programmers appear unable to program). The idea is that the PIC receives
the data from the PC, generates addresses for the EPROM and then pulses the
program pin to its required voltage (25v for a 8755).

So I've looked at RTS/CTS as that is one of the options supported by the serial
terminal on the PC I'm using (something called 'Serial').

My understanding is that the PC is the DTE and the PIC uart is the DCE. And the
connection between the RS232 19 pin D connector and the uart is simple enough:

  DTE      DCE
  -----------
  TX  --->  RX (pin 3)
  RX  <---  TX (pin 2)
  GND <-->  GND (pin 5)
  RTS --->  RTS (pin 7)
  CTS <---  CTS (pin 8)

So at the PIC side the signals go thru a MAX232 to convert to TTL levels, and then
RTS goes to a pin configured as input and CTS to one configured as output. I'll not
go into more detail on TX and RX as they work fine. Note that RTS and CTS are active
low signals. Looking at the idle voltage levels, they are what I'd expect - TX/RX
are low i.e. 'mark' at around -7v and RTS/CTS are high i.e. logic low at around +7v.

Now I'd expect if the PC wants to send data to the PIC, it pulls RTS low (it's an
active low signal) which would signal the PIC that there's data to receive. When
the PIC is ready, the PIC pulls CTS low telling the PC to send the data.

Except it doesn't. RTS just sits high all the time. 

The other way is fine - if the PIC is ready to send data it pulls CTS low and then
sends data. Again RTS just sits high all the time.

This doesn't seem to agree with the PIC documentation, or a I missing something?

(https://onlinedocs.microchip.com/pr/GUID-167CA20A-2C0F-4CBC-A693-9FD032B9B193-en-US-1/index.html?GUID-C8B83E54-0F62-4205-98DD-B1560AACDBB4)

